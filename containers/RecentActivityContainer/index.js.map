{"version":3,"sources":["containers/RecentActivityContainer/index.js"],"names":["getTabs","ready","currentLocale","dateTimeFormatter","navigateTo","recentMessages","recentCalls","currentContact","sessionId","messages","calls","id","contactId","activityCardId","icon","label","i18n","getString","path","isActive","view","getData","cleanUp","dynamicsFont","composeText","isMessagesLoaded","getMessages","cleanUpMessages","contact","active","isCallsLoaded","getCalls","cleanUpCalls","mapToProps","_","phone","locale","dateTimeFormat","contactMatcher","formatDateTime","getSession","useContact","session","contactMatch","contactMapping","dataMapping","phoneNumber","direction","callDirections","outbound","to","from","length","title","showSpinner","tabs","defaultTab","RecentActivityContainer","RecentActivityPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport RecentActivityPanel from '../../components/RecentActivityPanel';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport RecentActivityMessages from '../../components/RecentActivityMessages';\nimport RecentActivityCalls from '../../components/RecentActivityCalls';\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport FaxIcon from '../../assets/images/Fax.svg';\nimport { withPhone } from '../../lib/phoneContext';\nimport i18n from './i18n';\n\nfunction getTabs({\n  ready,\n  currentLocale,\n  dateTimeFormatter,\n  navigateTo,\n  recentMessages,\n  recentCalls,\n  currentContact,\n  sessionId,\n}) {\n  if (!ready) return [];\n  let messages = [];\n  let calls = [];\n  if (currentContact && currentContact.id) {\n    const contactId = currentContact.id;\n    const activityCardId = sessionId ? `${contactId}-${sessionId}` : contactId;\n    if (recentMessages.messages[activityCardId]) {\n      messages = recentMessages.messages[activityCardId];\n    }\n    if (recentCalls.calls[activityCardId]) {\n      calls = recentCalls.calls[activityCardId];\n    }\n  }\n  return [\n    {\n      icon: <VoicemailIcon width={21} height={21} />,\n      label: i18n.getString('voicemail', currentLocale),\n      path: 'voicemails',\n      isActive: path => path === 'voicemails',\n      view: null,\n      getData: () => { },\n      cleanUp: () => { }\n    },\n    {\n      icon: <span className={dynamicsFont.composeText} />,\n      label: i18n.getString('text', currentLocale),\n      path: 'recentMessages',\n      isActive: path => path === 'recentMessages',\n      view: (\n        <RecentActivityMessages\n          messages={messages}\n          navigateTo={navigateTo}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isMessagesLoaded={recentMessages.isMessagesLoaded}\n        />\n      ),\n      getData: () => {\n        recentMessages.getMessages({ currentContact, sessionId });\n      },\n      cleanUp: () => recentMessages.cleanUpMessages({ contact: currentContact, sessionId })\n    },\n    {\n      icon: <FaxIcon width={21} height={21} />,\n      label: i18n.getString('fax', currentLocale),\n      path: 'faxes',\n      isActive: path => path === 'faxes',\n      view: null,\n      getData: () => { },\n      cleanUp: () => { }\n    },\n    {\n      icon: <span className={dynamicsFont.active} />,\n      label: i18n.getString('call', currentLocale),\n      path: 'recentCalls',\n      isActive: path => path === 'recentCalls',\n      view: (\n        <RecentActivityCalls\n          calls={calls}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isCallsLoaded={recentCalls.isCallsLoaded}\n        />\n      ),\n      getData: () => {\n        recentCalls.getCalls({ currentContact, sessionId });\n      },\n      cleanUp: () => recentCalls.cleanUpCalls({ contact: currentContact, sessionId })\n    },\n  ];\n}\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    dateTimeFormat,\n    recentMessages,\n    recentCalls,\n    contactMatcher,\n  },\n  currentLocale = locale.currentLocale,\n  navigateTo,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  getSession,\n  useContact,\n  contact,\n}) {\n  let sessionId = null;\n  let currentContact = contact;\n  let ready =\n    dateTimeFormat.ready &&\n    locale.ready &&\n    recentMessages.ready &&\n    recentCalls.ready;\n  if (!useContact) {\n    const session = getSession();\n    sessionId = session.id;\n    currentContact = session.contactMatch;\n    const contactMapping = contactMatcher && contactMatcher.dataMapping;\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    if (!currentContact) {\n      currentContact = contactMapping && contactMapping[phoneNumber];\n      if (currentContact && currentContact.length >= 1) {\n        currentContact = currentContact[0];\n      }\n    }\n    ready = ready && contactMatcher.ready;\n  }\n  return {\n    currentLocale,\n    title: i18n.getString('recentActivities', locale.currentLocale),\n    showSpinner: !ready,\n    currentContact,\n    calls: recentCalls.calls || [],\n    tabs: getTabs({\n      ready,\n      currentLocale,\n      dateTimeFormatter,\n      navigateTo,\n      currentContact,\n      recentMessages,\n      recentCalls,\n      sessionId,\n    }),\n    defaultTab: 'recentCalls',\n  };\n}\n\nconst RecentActivityContainer = withPhone(connect(\n  mapToProps\n)(RecentActivityPanel));\n\nexport {\n  getTabs,\n  mapToProps,\n  RecentActivityContainer as default,\n};\n\n"]}