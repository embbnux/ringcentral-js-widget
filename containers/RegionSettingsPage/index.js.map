{"version":3,"sources":["containers/RegionSettingsPage/index.js"],"names":["mapToProps","_","phone","locale","regionSettings","availableCountries","countryCode","areaCode","currentLocale","mapToFunctions","auth","routerInteraction","onLogoutButtonClick","logout","onBackButtonClick","goBack","onSave","setData","RegionSettingsPage","RegionSettingsPanel","default"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAKG;AAAA,wBAJDC,KAIC;AAAA,MAHCC,MAGD,cAHCA,MAGD;AAAA,MAFCC,cAED,cAFCA,cAED;;AACD,SAAO;AACLC,wBAAoBD,eAAeC,kBAD9B;AAELC,iBAAaF,eAAeE,WAFvB;AAGLC,cAAUH,eAAeG,QAHpB;AAILC,mBAAeL,OAAOK;AAJjB,GAAP;AAMD;;AAED,SAASC,cAAT,CAAwBR,CAAxB,SAMG;AAAA;;AAAA,0BALDC,KAKC;AAAA,MAJCQ,IAID,eAJCA,IAID;AAAA,MAHCN,cAGD,eAHCA,cAGD;AAAA,MAFCO,iBAED,eAFCA,iBAED;;AACD,SAAO;AACLC;AAAA,2FAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbF,KAAKG,MAAL,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADK;AAILC,uBAAmB,6BAAM;AACvBH,wBAAkBI,MAAlB;AACD,KANI;AAOLC,YAAQ,uBAA+B;AAAA,UAA5BT,QAA4B,SAA5BA,QAA4B;AAAA,UAAlBD,WAAkB,SAAlBA,WAAkB;;AACrCF,qBAAea,OAAf,CAAuB;AACrBV,0BADqB;AAErBD;AAFqB,OAAvB;AAID;AAZI,GAAP;AAcD;;AAED,IAAMY,qBAAqB,6BAAU,yBACnClB,UADmC,EAEnCS,cAFmC,EAGnCU,6BAHmC,CAAV,CAA3B;;QAMEV,c,GAAAA,c;QACAT,U,GAAAA,U;QACsBoB,O,GAAtBF,kB","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport RegionSettingsPanel from '../../components/RegionSettingsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    regionSettings,\n  },\n}) {\n  return {\n    availableCountries: regionSettings.availableCountries,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale: locale.currentLocale,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    regionSettings,\n    routerInteraction,\n  },\n}) {\n  return {\n    onLogoutButtonClick: async () => {\n      await auth.logout();\n    },\n    onBackButtonClick: () => {\n      routerInteraction.goBack();\n    },\n    onSave: ({ areaCode, countryCode }) => {\n      regionSettings.setData({\n        areaCode,\n        countryCode,\n      });\n    },\n  };\n}\n\nconst RegionSettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(RegionSettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  RegionSettingsPage as default,\n};\n"]}