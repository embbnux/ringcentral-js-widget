{"version":3,"sources":["containers/TransferPage/index.js"],"names":["mapToProps","_","phone","sessionId","params","locale","activeCallControl","currentLocale","activeSession","searchContactList","isOnTransfer","disablePage","mapToFunctions","regionSettings","routerInteraction","setActiveSessionId","onTransfer","transferNumber","sessionIdRgx","currentPath","match","transfer","toggleTransferPanel","push","formatPhone","phoneNumber","areaCode","countryCode","searchContact","TransferPage","TransferPanel","default"],"mappings":";;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAEG;AAAA,MADDC,KACC,QADDA,KACC;AAAA,MADgBC,SAChB,QADMC,MACN,CADgBD,SAChB;AAAA,MAECE,MAFD,GAIGH,KAJH,CAECG,MAFD;AAAA,MAGCC,iBAHD,GAIGJ,KAJH,CAGCI,iBAHD;AAAA,MAKOC,aALP,GAKyBF,MALzB,CAKOE,aALP;AAAA,MAMOC,aANP,GAMyBF,iBANzB,CAMOE,aANP;;;AAQD,SAAO;AACLL,wBADK;AAELI,gCAFK;AAGLE,uBAAmB,EAHd;AAILC,kBAAc,KAJT;AAKLF,gCALK;AAMLG,iBAAa;AANR,GAAP;AAQD;;AAED,SAASC,cAAT,CAAwBX,CAAxB,SAEG;AAAA,MADDC,KACC,SADDA,KACC;AAAA,MAECW,cAFD,GAKGX,KALH,CAECW,cAFD;AAAA,MAGCC,iBAHD,GAKGZ,KALH,CAGCY,iBAHD;AAAA,MAICR,iBAJD,GAKGJ,KALH,CAICI,iBAJD;;AAMD,SAAO;AACLS,wBAAoB;AAAA,aAAaT,kBAAkBS,kBAAlB,CAAqCZ,SAArC,CAAb;AAAA,KADf;AAELa,cAFK,sBAEMC,cAFN,EAEsB;AACzB,UAAMC,eAAe,MAArB;AACA,UAAMf,YAAYW,kBAAkBK,WAAlB,CAA8BC,KAA9B,CAAoCF,YAApC,CAAlB;AACA,UAAIf,SAAJ,EAAe;AACbG,0BAAkBe,QAAlB,CAA2BJ,cAA3B,EAA2Cd,UAAU,CAAV,CAA3C;AACD;AACF,KARI;AASLmB,uBATK,iCASiB;AACpBR,wBAAkBS,IAAlB,CAAuB,QAAvB;AACD,KAXI;;AAYLC,iBAAa;AAAA,aAAe,4BAAa;AACvCC,gCADuC;AAEvCC,kBAAUb,eAAea,QAFc;AAGvCC,qBAAad,eAAec;AAHW,OAAb,CAAf;AAAA,KAZR;AAiBLC,mBAAe;AAAA,aAAM,IAAN;AAAA;AAjBV,GAAP;AAmBD;;AAED,IAAMC,eAAe,6BAAU,yBAC7B7B,UAD6B,EAE7BY,cAF6B,EAG7BkB,uBAH6B,CAAV,CAArB;;QAME9B,U,GAAAA,U;QACAY,c,GAAAA,c;QACgBmB,O,GAAhBF,Y","file":"index.js","sourcesContent":["\nimport { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport TransferPanel from '../../components/TransferPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone, params: { sessionId }\n}) {\n  const {\n    locale,\n    activeCallControl,\n  } = phone;\n  const { currentLocale } = locale;\n  const { activeSession } = activeCallControl;\n\n  return {\n    sessionId,\n    currentLocale,\n    searchContactList: [],\n    isOnTransfer: false,\n    activeSession,\n    disablePage: true\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone,\n}) {\n  const {\n    regionSettings,\n    routerInteraction,\n    activeCallControl\n  } = phone;\n  return {\n    setActiveSessionId: sessionId => activeCallControl.setActiveSessionId(sessionId),\n    onTransfer(transferNumber) {\n      const sessionIdRgx = /\\d+/g;\n      const sessionId = routerInteraction.currentPath.match(sessionIdRgx);\n      if (sessionId) {\n        activeCallControl.transfer(transferNumber, sessionId[0]);\n      }\n    },\n    toggleTransferPanel() {\n      routerInteraction.push('/calls');\n    },\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    searchContact: () => null\n  };\n}\n\nconst TransferPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TransferPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  TransferPage as default,\n};\n"]}