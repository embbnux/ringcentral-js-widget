{"version":3,"sources":["containers/IncomingCallPage/index.js"],"names":["IncomingCallPage","props","answer","session","id","reject","toVoiceMail","replyWithMessage","message","toggleMinimized","answerAndEnd","hangup","activeSessionId","answerAndHold","onHold","onForward","forwardNumber","state","selectedMatcherIndex","avatarUrl","hasOtherActiveCall","onSelectMatcherName","option","nameMatches","findIndex","match","setState","contact","updateSessionMatchedContact","getAvatarUrl","then","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","active","minimized","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","sourceIcons","searchContact","searchContactList","phoneTypeRenderer","phoneSourceNameRenderer","children","Component","propTypes","PropTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","phone","webphone","locale","contactMatcher","contactSearch","regionSettings","forwardingNumber","currentSession","ringingCallOnView","contactMapping","dataMapping","fromMatches","toMatches","fullName","sortedResult","mapToFunctions","conferenceCall","sessionId","closeMergingPair","forward","hold","debouncedSearch","searchString","pattern","IncomingCallContainer"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport IncomingCallPanel from '../../components/IncomingCallPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nimport i18n from './i18n';\n\nclass IncomingCallPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      hasOtherActiveCall: false,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n  }\n\n  answer = () => this.props.answer(this.props.session.id);\n  reject = () => this.props.reject(this.props.session.id);\n  toVoiceMail = () => this.props.toVoiceMail(this.props.session.id);\n  replyWithMessage = message =>\n    this.props.replyWithMessage(this.props.session.id, message);\n  toggleMinimized = () =>\n    this.props.toggleMinimized(this.props.session.id);\n  answerAndEnd = async () => {\n    await this.props.hangup(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  answerAndHold = async () => {\n    await this.props.onHold(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  onForward = forwardNumber =>\n    this.props.onForward(this.props.session.id, forwardNumber);\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n    this.setState({\n      hasOtherActiveCall: !!nextProps.activeSessionId,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        phoneNumber={phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        hasOtherActiveCall={this.state.hasOtherActiveCall}\n        answerAndEnd={this.answerAndEnd}\n        answerAndHold={this.answerAndHold}\n        sessionId={this.props.session.id}\n        sourceIcons={this.props.sourceIcons}\n        searchContact={this.props.searchContact}\n        searchContactList={this.props.searchContactList}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n  activeSessionId: PropTypes.string,\n  sourceIcons: PropTypes.object,\n  hangup: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nIncomingCallPage.defaultProps = {\n  children: undefined,\n  activeSessionId: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n\nfunction mapToProps(_, {\n  phone: {\n    webphone,\n    locale,\n    contactMatcher,\n    contactSearch,\n    regionSettings,\n    forwardingNumber,\n    brand,\n  },\n  showContactDisplayPlaceholder = false,\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n}) {\n  const currentSession = webphone.ringingCallOnView || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    activeSessionId: webphone.activeSessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    forwardingNumbers: forwardingNumber.forwardingNumbers,\n    showContactDisplayPlaceholder,\n    searchContactList: contactSearch.sortedResult,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    webphone,\n    regionSettings,\n    contactSearch,\n    conferenceCall,\n  },\n  getAvatarUrl = () => null,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    answer(sessionId) {\n      if (conferenceCall) {\n        conferenceCall.closeMergingPair();\n      }\n      webphone.answer(sessionId);\n    },\n    reject: sessionId => webphone.reject(sessionId),\n    toVoiceMail: sessionId => webphone.toVoiceMail(sessionId),\n    onForward: (sessionId, forwardNumber) => webphone.forward(sessionId, forwardNumber),\n    replyWithMessage: (sessionId, message) => webphone.replyWithMessage(sessionId, message),\n    toggleMinimized: sessionId => webphone.toggleMinimized(sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    hangup: sessionId => webphone.hangup(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    searchContact: pattern => contactSearch.debouncedSearch({ searchString: pattern })\n  };\n}\n\nconst IncomingCallContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(IncomingCallPage));\n\nexport default IncomingCallContainer;\n\n"]}