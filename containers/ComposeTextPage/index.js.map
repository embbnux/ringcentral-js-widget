{"version":3,"sources":["containers/ComposeTextPage/index.js"],"names":["ComposeTextPage","state","props","currentLocale","locale","sendButtonDisabled","composeText","ready","messageSender","idle","messageText","length","toNumbers","typingToNumber","connectivityMonitor","connectivity","rateLimiter","throttling","senderNumbers","senderNumbersList","senderNumber","outboundSMS","rolesAndPermissions","permissions","OutboundSMS","searchContactList","contactSearch","searching","result","dispatch","formatPhone","phoneNumber","areaCode","regionSettings","countryCode","formatContactPhone","send","then","responses","messageStore","pushMessages","conversationId","conversation","id","router","history","push","clean","searchContact","search","searchString","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","propTypes","instanceOf","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import { PropTypes } from 'react';\nimport { connect } from 'react-redux';\n\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ComposeText from 'ringcentral-integration/modules/ComposeText';\nimport MessageStore from 'ringcentral-integration/modules/MessageStore';\nimport RolesAndPermissions from 'ringcentral-integration/modules/RolesAndPermissions';\n\nimport RouterInteraction from '../../modules/RouterInteraction';\n\nimport ComposeTextPanel from '../../components/ComposeTextPanel';\n\nconst ComposeTextPage = connect((state, props) => ({\n  currentLocale: props.locale.currentLocale,\n  sendButtonDisabled: (\n    !(props.composeText.ready && props.messageSender.idle) ||\n    (props.composeText.messageText.length === 0) ||\n    (\n      props.composeText.toNumbers.length === 0 &&\n      props.composeText.typingToNumber.length === 0\n    ) ||\n    !props.connectivityMonitor.connectivity ||\n    props.rateLimiter.throttling\n  ),\n  senderNumbers: props.messageSender.senderNumbersList,\n  senderNumber: props.composeText.senderNumber,\n  typingToNumber: props.composeText.typingToNumber,\n  toNumbers: props.composeText.toNumbers,\n  messageText: props.composeText.messageText,\n  outboundSMS: props.rolesAndPermissions.permissions.OutboundSMS,\n  searchContactList: props.contactSearch.searching.result,\n}), (dispatch, props) => {\n  const formatPhone = phoneNumber => (\n    formatNumber({\n      phoneNumber,\n      areaCode: props.regionSettings.areaCode,\n      countryCode: props.regionSettings.countryCode\n    })\n  );\n  const formatContactPhone = props.formatContactPhone ?\n    props.formatContactPhone :\n    formatPhone;\n  return {\n    send: () =>\n      props.composeText.send().then((responses) => {\n        if (!responses || responses.length === 0) {\n          return null;\n        }\n        props.messageStore.pushMessages(responses);\n        if (responses.length === 1) {\n          const conversationId =\n            responses[0] && responses[0].conversation && responses[0].conversation.id;\n          if (!conversationId) {\n            return null;\n          }\n          props.router.history.push(`/conversations/${conversationId}`);\n        } else {\n          props.router.history.push('/messages');\n        }\n        props.composeText.clean();\n        return null;\n      }),\n    formatPhone,\n    formatContactPhone,\n    searchContact: searchString => (\n      props.contactSearch.search({ searchString })\n    ),\n    updateSenderNumber: props.composeText.updateSenderNumber,\n    updateTypingToNumber: props.composeText.updateTypingToNumber,\n    cleanTypingToNumber: props.composeText.cleanTypingToNumber,\n    addToNumber: props.composeText.addToNumber,\n    removeToNumber: props.composeText.removeToNumber,\n    updateMessageText: props.composeText.updateMessageText,\n  };\n})(ComposeTextPanel);\n\nComposeTextPage.propTypes = {\n  router: PropTypes.instanceOf(RouterInteraction).isRequired,\n  composeText: PropTypes.instanceOf(ComposeText).isRequired,\n  messageStore: PropTypes.instanceOf(MessageStore).isRequired,\n  rolesAndPermissions: PropTypes.instanceOf(RolesAndPermissions).isRequired,\n};\n\nexport default ComposeTextPage;\n"]}