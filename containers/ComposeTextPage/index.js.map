{"version":3,"sources":["containers/ComposeTextPage/index.js"],"names":["mapToProps","_","phone","composeText","connectivityMonitor","contactSearch","locale","messageSender","rateLimiter","rolesAndPermissions","brand","inputExpandable","fullName","currentLocale","sendButtonDisabled","ready","idle","messageText","length","toNumbers","typingToNumber","connectivity","throttling","senderNumbers","senderNumbersList","senderNumber","outboundSMS","permissions","OutboundSMS","searchContactList","sortedResult","showSpinner","mapToFunctions","messageStore","regionSettings","routerInteraction","alert","formatContactPhone","phoneNumber","areaCode","countryCode","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","send","timeout","setTimeout","currentPath","alertMessageSending","clearTimeout","then","responses","dismissMessageSending","pushMessages","conversationId","conversation","id","push","clean","formatPhone","searchContact","debouncedSearch","searchString","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","ComposeTextPage","ComposeTextPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport messageSenderMessages from 'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport ComposeTextPanel from '../../components/ComposeTextPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    composeText,\n    connectivityMonitor,\n    contactSearch,\n    locale,\n    messageSender,\n    rateLimiter,\n    rolesAndPermissions,\n    brand,\n  },\n  inputExpandable,\n}) {\n  return {\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    sendButtonDisabled: (\n      !(composeText.ready && messageSender.idle) ||\n      (composeText.messageText.length === 0) ||\n      (\n        composeText.toNumbers.length === 0 &&\n        composeText.typingToNumber.length === 0\n      ) ||\n      !connectivityMonitor.connectivity ||\n      rateLimiter.throttling\n    ),\n    senderNumbers: messageSender.senderNumbersList,\n    senderNumber: composeText.senderNumber,\n    typingToNumber: composeText.typingToNumber,\n    toNumbers: composeText.toNumbers,\n    messageText: composeText.messageText,\n    outboundSMS: rolesAndPermissions.permissions.OutboundSMS,\n    searchContactList: contactSearch.sortedResult,\n    showSpinner: !(\n      composeText.ready &&\n      locale.ready &&\n      messageSender.ready &&\n      rolesAndPermissions.ready &&\n      contactSearch.ready\n    ),\n    inputExpandable,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    composeText,\n    contactSearch,\n    messageStore,\n    regionSettings,\n    routerInteraction,\n    alert,\n  },\n  formatContactPhone = phoneNumber => formatNumber({\n    phoneNumber,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n  }),\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    send() {\n      let timeout = setTimeout(() => {\n        if (routerInteraction.currentPath === '/composeText') {\n          composeText.alertMessageSending();\n        }\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n      }, 10000);\n      composeText.send().then((responses) => {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        composeText.dismissMessageSending();\n        if (!responses || responses.length === 0) {\n          return null;\n        }\n        messageStore.pushMessages(responses);\n        if (responses.length === 1) {\n          const conversationId =\n            responses[0] && responses[0].conversation && responses[0].conversation.id;\n          if (!conversationId) {\n            return null;\n          }\n          routerInteraction.push(`/conversations/${conversationId}`);\n        } else {\n          routerInteraction.push('/messages');\n        }\n        composeText.clean();\n        return null;\n      }, () => {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n      });\n    },\n    formatPhone: formatContactPhone,\n    formatContactPhone,\n    searchContact: searchString => (\n      contactSearch.debouncedSearch({ searchString })\n    ),\n    updateSenderNumber: ({ phoneNumber }) => composeText.updateSenderNumber(phoneNumber),\n    updateTypingToNumber: (...args) => composeText.updateTypingToNumber(...args),\n    cleanTypingToNumber: (...args) => composeText.cleanTypingToNumber(...args),\n    addToNumber: (...args) => composeText.addToNumber(...args),\n    removeToNumber: (...args) => composeText.removeToNumber(...args),\n    updateMessageText: (...args) => composeText.updateMessageText(...args),\n    phoneTypeRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst ComposeTextPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(ComposeTextPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  ComposeTextPage as default,\n};\n"]}