{"version":3,"sources":["containers/ComposeTextPage/index.js"],"names":["ComposeTextPage","state","props","currentLocale","locale","sendButtonDisabled","composeText","ready","messageSender","idle","senderNumbers","senderNumbersList","senderNumber","typingToNumber","toNumbers","messageText","searchContactList","contactSearch","searching","result","dispatch","send","then","responses","length","messageStore","pushMessages","conversationId","conversation","id","router","history","push","clean","formatPhone","phoneNumber","areaCode","regionSettings","countryCode","searchContact","search","searchString","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","propTypes","instanceOf","isRequired"],"mappings":";;;;;;AAAA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,IAAMA,kBAAkB,yBAAQ,UAACC,KAAD,EAAQC,KAAR;AAAA,SAAmB;AACjDC,mBAAeD,MAAME,MAAN,CAAaD,aADqB;AAEjDE,wBACE,EAAEH,MAAMI,WAAN,CAAkBC,KAAlB,IAA2BL,MAAMM,aAAN,CAAoBC,IAAjD,CAH+C;AAKjDC,mBAAeR,MAAMM,aAAN,CAAoBG,iBALc;AAMjDC,kBAAcV,MAAMI,WAAN,CAAkBM,YANiB;AAOjDC,oBAAgBX,MAAMI,WAAN,CAAkBO,cAPe;AAQjDC,eAAWZ,MAAMI,WAAN,CAAkBQ,SARoB;AASjDC,iBAAab,MAAMI,WAAN,CAAkBS,WATkB;AAUjDC,uBAAmBd,MAAMe,aAAN,CAAoBC,SAApB,CAA8BC;AAVA,GAAnB;AAAA,CAAR,EAWpB,UAACC,QAAD,EAAWlB,KAAX;AAAA,SAAsB;AACxBmB,UAAM;AAAA,aACJnB,MAAMI,WAAN,CAAkBe,IAAlB,GAAyBC,IAAzB,CAA8B,UAACC,SAAD,EAAe;AAC3C,YAAI,CAACA,SAAD,IAAcA,UAAUC,MAAV,KAAqB,CAAvC,EAA0C;AACxC,iBAAO,IAAP;AACD;AACDtB,cAAMuB,YAAN,CAAmBC,YAAnB,CAAgCH,SAAhC;AACA,YAAIA,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAMG,iBACJJ,UAAU,CAAV,KAAgBA,UAAU,CAAV,EAAaK,YAA7B,IAA6CL,UAAU,CAAV,EAAaK,YAAb,CAA0BC,EADzE;AAEA,cAAI,CAACF,cAAL,EAAqB;AACnB,mBAAO,IAAP;AACD;AACDzB,gBAAM4B,MAAN,CAAaC,OAAb,CAAqBC,IAArB,qBAA4CL,cAA5C;AACD,SAPD,MAOO;AACLzB,gBAAM4B,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,WAA1B;AACD;AACD9B,cAAMI,WAAN,CAAkB2B,KAAlB;AACA,eAAO,IAAP;AACD,OAjBD,CADI;AAAA,KADkB;AAoBxBC,iBAAa;AAAA,aACX,4BAAa;AACXC,gCADW;AAEXC,kBAAUlC,MAAMmC,cAAN,CAAqBD,QAFpB;AAGXE,qBAAapC,MAAMmC,cAAN,CAAqBC;AAHvB,OAAb,CADW;AAAA,KApBW;AA2BxBC,mBAAe;AAAA,aACbrC,MAAMe,aAAN,CAAoBuB,MAApB,CAA2B,EAAEC,0BAAF,EAA3B,CADa;AAAA,KA3BS;AA8BxBC,wBAAoBxC,MAAMI,WAAN,CAAkBoC,kBA9Bd;AA+BxBC,0BAAsBzC,MAAMI,WAAN,CAAkBqC,oBA/BhB;AAgCxBC,yBAAqB1C,MAAMI,WAAN,CAAkBsC,mBAhCf;AAiCxBC,iBAAa3C,MAAMI,WAAN,CAAkBuC,WAjCP;AAkCxBC,oBAAgB5C,MAAMI,WAAN,CAAkBwC,cAlCV;AAmCxBC,uBAAmB7C,MAAMI,WAAN,CAAkByC;AAnCb,GAAtB;AAAA,CAXoB,6BAAxB;;AAiDA/C,gBAAgBgD,SAAhB,GAA4B;AAC1BlB,UAAQ,iBAAUmB,UAAV,8BAAwCC,UADtB;AAE1B5C,eAAa,iBAAU2C,UAAV,wBAAkCC,UAFrB;AAG1BzB,gBAAc,iBAAUwB,UAAV,yBAAmCC;AAHvB,CAA5B;;kBAMelD,e","file":"index.js","sourcesContent":["import { PropTypes } from 'react';\nimport { connect } from 'react-redux';\n\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ComposeText from 'ringcentral-integration/modules/ComposeText';\nimport MessageStore from 'ringcentral-integration/modules/MessageStore';\n\nimport RouterInteraction from '../../modules/RouterInteraction';\n\nimport ComposeTextPanel from '../../components/ComposeTextPanel';\n\nconst ComposeTextPage = connect((state, props) => ({\n  currentLocale: props.locale.currentLocale,\n  sendButtonDisabled: (\n    !(props.composeText.ready && props.messageSender.idle)\n  ),\n  senderNumbers: props.messageSender.senderNumbersList,\n  senderNumber: props.composeText.senderNumber,\n  typingToNumber: props.composeText.typingToNumber,\n  toNumbers: props.composeText.toNumbers,\n  messageText: props.composeText.messageText,\n  searchContactList: props.contactSearch.searching.result,\n}), (dispatch, props) => ({\n  send: () =>\n    props.composeText.send().then((responses) => {\n      if (!responses || responses.length === 0) {\n        return null;\n      }\n      props.messageStore.pushMessages(responses);\n      if (responses.length === 1) {\n        const conversationId =\n          responses[0] && responses[0].conversation && responses[0].conversation.id;\n        if (!conversationId) {\n          return null;\n        }\n        props.router.history.push(`/conversations/${conversationId}`);\n      } else {\n        props.router.history.push('/messages');\n      }\n      props.composeText.clean();\n      return null;\n    }),\n  formatPhone: phoneNumber => (\n    formatNumber({\n      phoneNumber,\n      areaCode: props.regionSettings.areaCode,\n      countryCode: props.regionSettings.countryCode\n    })\n  ),\n  searchContact: searchString => (\n    props.contactSearch.search({ searchString })\n  ),\n  updateSenderNumber: props.composeText.updateSenderNumber,\n  updateTypingToNumber: props.composeText.updateTypingToNumber,\n  cleanTypingToNumber: props.composeText.cleanTypingToNumber,\n  addToNumber: props.composeText.addToNumber,\n  removeToNumber: props.composeText.removeToNumber,\n  updateMessageText: props.composeText.updateMessageText,\n}))(ComposeTextPanel);\n\nComposeTextPage.propTypes = {\n  router: PropTypes.instanceOf(RouterInteraction).isRequired,\n  composeText: PropTypes.instanceOf(ComposeText).isRequired,\n  messageStore: PropTypes.instanceOf(MessageStore).isRequired,\n};\n\nexport default ComposeTextPage;\n"]}