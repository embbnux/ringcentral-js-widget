{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","showRegion","showCalling","showAudio","showFeedback","showUserGuide","showPresenceSettings","showQuickAccess","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","showReginSetting","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","openPresenceSettings","hasEditPresencePermission","supportedLocales","savedLocale","hasUserGuidePermission","mapToFunctions","routerInteraction","userGuide","quickAccess","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onUserGuideClick","start","onQuickAccessLinkClick","enter","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","SettingsPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  showUserGuide = true,\n  showPresenceSettings = true,\n  showQuickAccess = false,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showQuickAccess,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      regionSettings.showReginSetting &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    openPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    showPresenceSettings:\n      showPresenceSettings && rolesAndPermissions.hasEditPresencePermission,\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n    showUserGuide: showUserGuide && rolesAndPermissions.hasUserGuidePermission,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n    userGuide,\n    quickAccess\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n}) {\n  return {\n    async onLogoutButtonClick() {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick() {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick() {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick() {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick() {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    onUserGuideClick() {\n      userGuide.start();\n    },\n    onQuickAccessLinkClick() {\n      quickAccess.enter();\n    },\n\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}