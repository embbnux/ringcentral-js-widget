{"version":3,"sources":["containers/AlertContainer/index.js"],"names":["AlertContainer","state","locale","alert","currentLocale","messages","dispatch","rateLimiter","brand","getRenderer","message","handleMessage","props","fullName","timestamp","_throttleDuration","application","undefined","dismiss","id","propTypes","instanceOf","isRequired"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,yBAAQ,UAACC,KAAD;AAAA,MAC7BC,MAD6B,QAC7BA,MAD6B;AAAA,MAE7BC,KAF6B,QAE7BA,KAF6B;AAAA,SAGxB;AACLC,mBAAeF,OAAOE,aADjB;AAELC,cAAUF,MAAME;AAFX,GAHwB;AAAA,CAAR,EAMnB,UAACC,QAAD;AAAA,MACFC,WADE,SACFA,WADE;AAAA,MAEFC,KAFE,SAEFA,KAFE;AAAA,MAGFL,KAHE,SAGFA,KAHE;AAAA,SAIG;AACLM,iBAAa,qBAACC,OAAD,EAAa;AACxB,UAAI,oBAAUC,aAAV,CAAwBD,OAAxB,CAAJ,EAAsC;AACpC;AACD;AACD,UAAI,oBAAUC,aAAV,CAAwBD,OAAxB,CAAJ,EAAsC;AACpC,eAAO;AAAA,iBACL,8EACME,KADN;AAEE,+BAAkB,kBAFpB,IADK;AAAA,SAAP;AAKD;AACD,UAAI,+BAAqBD,aAArB,CAAmCD,OAAnC,CAAJ,EAAiD;AAC/C,eAAO;AAAA,iBACL,yFACME,KADN;AAEE,mBAAOJ,MAAMK,QAFf;AAGE,gCAAmB,mBAHrB,IADK;AAAA,SAAP;AAMD;;AAED,UAAI,8BAAoBF,aAApB,CAAkCD,OAAlC,CAAJ,EAAgD;AAC9C,eAAO;AAAA,iBACL,wFACME,KADN;AAEE,+BAAkB,kBAFpB,IADK;AAAA,SAAP;AAKD;;AAED,UAAI,6BAAmBD,aAAnB,CAAiCD,OAAjC,CAAJ,EAA+C;AAC7C,eAAO;AAAA,iBACL,uFACME,KADN;AAEE,+BAAkB,kBAFpB,IADK;AAAA,SAAP;AAKD;;AAED,UAAI,4BAAkBD,aAAlB,CAAgCD,OAAhC,CAAJ,EAA8C;AAC5C,eAAO;AAAA,iBACL,sFACME,KADN;AAEE,uBAAWL,YAAYO,SAFzB;AAGE,sBAAUP,YAAYQ,iBAHxB,IADK;AAAA,SAAP;AAMD;;AAED,UAAI,4BAAkBJ,aAAlB,CAAgCD,OAAhC,CAAJ,EAA8C;AAC5C;AACD;;AAED,UAAI,wBAAcC,aAAd,CAA4BD,OAA5B,CAAJ,EAA0C;AACxC;AACD;AACD,UAAI,mCAAyBC,aAAzB,CAAuCD,OAAvC,CAAJ,EAAqD;AACnD,eAAO;AAAA,iBACL,6FACME,KADN;AAEE,mBAAOJ,MAAMK,QAFf;AAGE,yBAAaL,MAAMQ,WAHrB,IADK;AAAA,SAAP;AAMD;;AAED,aAAOC,SAAP;AACD,KA/DI;AAgELC,aAAS,iBAACC,EAAD,EAAQ;AACfhB,YAAMe,OAAN,CAAcC,EAAd;AACD;AAlEI,GAJH;AAAA,CANmB,yBAAvB;;AA+EAnB,eAAeoB,SAAf,GAA2B;AACzBjB,SAAO,iBAAUkB,UAAV,kBAA4BC,UADV;AAEzBd,SAAO,iBAAUa,UAAV,kBAA4BC,UAFV;AAGzBpB,UAAQ,iBAAUmB,UAAV,mBAA6BC,UAHZ;AAIzBf,eAAa,iBAAUc,UAAV,wBAAkCC;AAJtB,CAA3B;;kBAOetB,c","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { connect } from 'react-redux';\n\nimport Alert from 'ringcentral-integration/modules/Alert';\nimport Brand from 'ringcentral-integration/modules/Brand';\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport RateLimiter from 'ringcentral-integration/modules/RateLimiter';\n\nimport AlertDisplay from '../../components/AlertDisplay';\n\nimport AuthAlert from '../../components/AuthAlert';\nimport CallAlert from '../../components/CallAlert';\nimport CallingSettingsAlert from '../../components/CallingSettingsAlert';\nimport RegionSettingsAlert from '../../components/RegionSettingsAlert';\nimport MessageSenderAlert from '../../components/MessageSenderAlert';\nimport RateExceededAlert from '../../components/RateExceededAlert';\nimport ConnectivityAlert from '../../components/ConnectivityAlert';\nimport WebphoneAlert from '../../components/WebphoneAlert';\nimport RolesAndPermissionsAlert from '../../components/RolesAndPermissionsAlert';\n\nconst AlertContainer = connect((state, {\n  locale,\n  alert,\n}) => ({\n  currentLocale: locale.currentLocale,\n  messages: alert.messages,\n}), (dispatch, {\n  rateLimiter,\n  brand,\n  alert,\n}) => ({\n  getRenderer: (message) => {\n    if (AuthAlert.handleMessage(message)) {\n      return AuthAlert;\n    }\n    if (CallAlert.handleMessage(message)) {\n      return props => (\n        <CallAlert\n          {...props}\n          regionSettingsUrl=\"/settings/region\" />\n      );\n    }\n    if (CallingSettingsAlert.handleMessage(message)) {\n      return props => (\n        <CallingSettingsAlert\n          {...props}\n          brand={brand.fullName}\n          callingSettingsUrl=\"/settings/calling\" />\n      );\n    }\n\n    if (RegionSettingsAlert.handleMessage(message)) {\n      return props => (\n        <RegionSettingsAlert\n          {...props}\n          regionSettingsUrl=\"/settings/region\" />\n      );\n    }\n\n    if (MessageSenderAlert.handleMessage(message)) {\n      return props => (\n        <MessageSenderAlert\n          {...props}\n          regionSettingsUrl=\"/settings/region\" />\n      );\n    }\n\n    if (RateExceededAlert.handleMessage(message)) {\n      return props => (\n        <RateExceededAlert\n          {...props}\n          timestamp={rateLimiter.timestamp}\n          duration={rateLimiter._throttleDuration} />\n      );\n    }\n\n    if (ConnectivityAlert.handleMessage(message)) {\n      return ConnectivityAlert;\n    }\n\n    if (WebphoneAlert.handleMessage(message)) {\n      return WebphoneAlert;\n    }\n    if (RolesAndPermissionsAlert.handleMessage(message)) {\n      return props => (\n        <RolesAndPermissionsAlert\n          {...props}\n          brand={brand.fullName}\n          application={brand.application} />\n      );\n    }\n\n    return undefined;\n  },\n  dismiss: (id) => {\n    alert.dismiss(id);\n  },\n}))(AlertDisplay);\n\nAlertContainer.propTypes = {\n  alert: PropTypes.instanceOf(Alert).isRequired,\n  brand: PropTypes.instanceOf(Brand).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  rateLimiter: PropTypes.instanceOf(RateLimiter).isRequired,\n};\n\nexport default AlertContainer;\n"]}