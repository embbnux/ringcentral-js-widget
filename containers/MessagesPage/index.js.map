{"version":3,"sources":["containers/MessagesPage/index.js"],"names":["MessagesPanel","currentLocale","showSpinner","showTitle","props","header","getString","content","contentWithHeader","root","propTypes","string","isRequired","bool","defaultProps","mapToProps","_","locale","messages","contactMatcher","dateTimeFormat","regionSettings","rolesAndPermissions","call","conversationLogger","connectivityMonitor","rateLimiter","enableContactFallback","conversations","filteredConversations","areaCode","countryCode","disableLinks","connectivity","throttling","disableClickToDial","isIdle","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","ready","searchInput","autoLog","mapToFunctions","dateTimeFormatter","formatDateTime","router","dialerRoute","onViewContact","onCreateContact","onLogConversation","isLoggedContact","conversationDetailRoute","phoneNumber","contact","hasMatchNumber","ignoreCache","undefined","name","entityType","forceMatchNumber","onClickToDial","history","push","onToNumberChange","onCall","redirect","options","logConversation","onSearchInputChange","e","updateSearchInput","currentTarget","value","showConversationDetail","conversationId","replace"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\nimport SpinnerOverlay from '../../components/SpinnerOverlay';\nimport MessageList from '../../components/MessageList';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction MessagesPanel({\n  currentLocale,\n  showSpinner,\n  showTitle,\n  ...props,\n}) {\n  const header = showTitle ?\n    (<Header>{i18n.getString('title', currentLocale)}</Header>) :\n    null;\n  const content = showSpinner ?\n    <SpinnerOverlay /> :\n    (\n      <MessageList\n        className={classnames(\n          styles.content,\n          showTitle && styles.contentWithHeader\n        )}\n        {...props}\n        currentLocale={currentLocale}\n      />\n    );\n  return (\n    <div className={styles.root}>\n      {header}\n      {content}\n    </div>\n  );\n}\n\nMessagesPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  showTitle: PropTypes.bool,\n};\nMessagesPanel.defaultProps = {\n  showSpinner: false,\n  showTitle: false,\n};\n\nfunction mapToProps(_, {\n  locale,\n  messages,\n  contactMatcher,\n  dateTimeFormat,\n  regionSettings,\n  rolesAndPermissions,\n  call,\n  conversationLogger,\n  connectivityMonitor,\n  rateLimiter,\n  showTitle = false,\n  enableContactFallback = false,\n}) {\n  return ({\n    showTitle,\n    enableContactFallback,\n    currentLocale: locale.currentLocale,\n    conversations: messages.filteredConversations,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: (\n      !connectivityMonitor.connectivity ||\n      rateLimiter.throttling\n    ),\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n    loggingMap: (conversationLogger && conversationLogger.loggingMap),\n    showSpinner: !(\n      locale.ready &&\n      messages.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      dateTimeFormat.ready &&\n      regionSettings.ready &&\n      rolesAndPermissions.ready &&\n      connectivityMonitor.ready &&\n      rateLimiter.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.ready) &&\n      (!conversationLogger || conversationLogger.ready)\n    ),\n    searchInput: messages.searchInput,\n    autoLog: conversationLogger.autoLog,\n  });\n}\n\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  messages,\n  conversationLogger,\n  contactMatcher,\n  call,\n  router,\n  dialerRoute = '/',\n  onViewContact,\n  onCreateContact,\n  onLogConversation,\n  isLoggedContact,\n  conversationDetailRoute = '/conversations/{conversationId}',\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact: onViewContact ?\n      async ({ phoneNumber, contact }) => {\n        const hasMatchNumber = await contactMatcher.hasMatchNumber({\n          phoneNumber,\n          ignoreCache: true\n        });\n        if (hasMatchNumber) {\n          await onViewContact({ phoneNumber, contact });\n        }\n      } :\n      undefined,\n    onCreateContact: onCreateContact ?\n      async ({ phoneNumber, name, entityType }) => {\n        const hasMatchNumber = await contactMatcher.hasMatchNumber({\n          phoneNumber,\n          ignoreCache: true\n        });\n        // console.debug('confirm hasMatchNumber:', hasMatchNumber);\n        if (!hasMatchNumber) {\n          await onCreateContact({ phoneNumber, name, entityType });\n          await contactMatcher.forceMatchNumber({ phoneNumber });\n        }\n      } :\n      undefined,\n    onClickToDial: call ?\n      (phoneNumber) => {\n        if (call.isIdle) {\n          router.history.push(dialerRoute);\n          call.onToNumberChange(phoneNumber);\n          call.onCall();\n        }\n      } :\n      undefined,\n    isLoggedContact,\n    onLogConversation: onLogConversation ||\n    (conversationLogger && (async ({ redirect = true, ...options }) => {\n      await conversationLogger.logConversation({\n        ...options,\n        redirect,\n      });\n    })),\n    onSearchInputChange: (e) => {\n      messages.updateSearchInput(e.currentTarget.value);\n    },\n    showConversationDetail(conversationId) {\n      router.history.push(\n        conversationDetailRoute.replace('{conversationId}', conversationId)\n      );\n    },\n  };\n}\nexport default connect(\n  mapToProps,\n  mapToFunctions,\n)(MessagesPanel);\n"]}