{"version":3,"sources":["containers/DialerPage/index.js"],"names":["mapToProps","_","call","callingSettings","connectivityMonitor","locale","rateLimiter","currentLocale","callingMode","isWebphoneMode","webphone","callButtonDisabled","isIdle","connectivity","throttling","toNumber","fromNumbers","fromNumber","mapToFunctions","regionSettings","keepToNumber","value","onToNumberChange","onCall","changeFromNumber","updateFromNumber","formatPhone","phoneNumber","areaCode","countryCode","DialerPage","propTypes","instanceOf","isRequired","default"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAMG;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,eAIC,QAJDA,eAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,SAAO;AACLC,mBAAeF,OAAOE,aADjB;AAELC,iBAAaL,gBAAgBK,WAFxB;AAGLC,oBAAgBN,gBAAgBK,WAAhB,KAAgC,uBAAaE,QAHxD;AAILC,wBAAoB,CAACT,KAAKU,MAAN,IACjB,CAACR,oBAAoBS,YADJ,IAEjBP,YAAYQ,UANV;AAOLC,cAAUb,KAAKa,QAPV;AAQLC,iBAAab,gBAAgBa,WARxB;AASLC,gBAAYd,gBAAgBc;AATvB,GAAP;AAWD;;AAED,SAASC,cAAT,CAAwBjB,CAAxB,SAIG;AAAA,MAHDC,IAGC,SAHDA,IAGC;AAAA,MAFDC,eAEC,SAFDA,eAEC;AAAA,MADDgB,cACC,SADDA,cACC;;AACD,SAAO;AACLC,kBAAc,sBAACC,KAAD,EAAW;AACvBnB,WAAKoB,gBAAL,CAAsBD,KAAtB;AACD,KAHI;AAILE,YAAQ,kBAAM;AACZrB,WAAKqB,MAAL;AACD,KANI;AAOLC,sBAAkBrB,gBAAgBsB,gBAP7B;AAQLC,iBAAa;AAAA,aAAe,4BAAa;AACvCC,gCADuC;AAEvCC,kBAAUT,kBAAkBA,eAAeS,QAFJ;AAGvCC,qBAAaV,kBAAkBA,eAAeU;AAHP,OAAb,CAAf;AAAA;AARR,GAAP;AAcD;;AAED,IAAMC,aAAa,yBACjB9B,UADiB,EAEjBkB,cAFiB,wBAAnB;;AAKA,IAAMa,YAAY;AAChB7B,QAAM,iBAAU8B,UAAV,iBAA2BC,UADjB;AAEhB9B,mBAAiB,iBAAU6B,UAAV,4BAAsCC,UAFvC;AAGhB7B,uBAAqB,iBAAU4B,UAAV,gCAA0CC,UAH/C;AAIhB5B,UAAQ,iBAAU2B,UAAV,mBAA6BC,UAJrB;AAKhB3B,eAAa,iBAAU0B,UAAV,wBAAkCC;AAL/B,CAAlB;;AAQAH,WAAWC,SAAX,GAAuBA,SAAvB;;QAGEb,c,GAAAA,c;QACAlB,U,GAAAA,U;QACA+B,S,GAAAA,S;QACcG,O,GAAdJ,U","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport { PropTypes } from 'react';\n\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport Locale from 'ringcentral-integration/modules/Locale';\nimport CallingSettings from 'ringcentral-integration/modules/CallingSettings';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\n\nimport Call from 'ringcentral-integration/modules/Call';\nimport ConnectivityMonitor from 'ringcentral-integration/modules/ConnectivityMonitor';\nimport RateLimiter from 'ringcentral-integration/modules/RateLimiter';\n\nimport DialerPanel from '../../components/DialerPanel';\n\nfunction mapToProps(_, {\n  call,\n  callingSettings,\n  connectivityMonitor,\n  locale,\n  rateLimiter,\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    callingMode: callingSettings.callingMode,\n    isWebphoneMode: callingSettings.callingMode === callingModes.webphone,\n    callButtonDisabled: !call.isIdle\n    || !connectivityMonitor.connectivity\n    || rateLimiter.throttling,\n    toNumber: call.toNumber,\n    fromNumbers: callingSettings.fromNumbers,\n    fromNumber: callingSettings.fromNumber,\n  };\n}\n\nfunction mapToFunctions(_, {\n  call,\n  callingSettings,\n  regionSettings,\n}) {\n  return {\n    keepToNumber: (value) => {\n      call.onToNumberChange(value);\n    },\n    onCall: () => {\n      call.onCall();\n    },\n    changeFromNumber: callingSettings.updateFromNumber,\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings && regionSettings.areaCode,\n      countryCode: regionSettings && regionSettings.countryCode,\n    }),\n  };\n}\n\nconst DialerPage = connect(\n  mapToProps,\n  mapToFunctions,\n)(DialerPanel);\n\nconst propTypes = {\n  call: PropTypes.instanceOf(Call).isRequired,\n  callingSettings: PropTypes.instanceOf(CallingSettings).isRequired,\n  connectivityMonitor: PropTypes.instanceOf(ConnectivityMonitor).isRequired,\n  locale: PropTypes.instanceOf(Locale).isRequired,\n  rateLimiter: PropTypes.instanceOf(RateLimiter).isRequired,\n};\n\nDialerPage.propTypes = propTypes;\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  propTypes,\n  DialerPage as default,\n};\n"]}