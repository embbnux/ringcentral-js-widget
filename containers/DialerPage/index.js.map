{"version":3,"sources":["containers/DialerPage/index.js"],"names":["mapToProps","_","phone","call","dialerUI","callingSettings","contactSearch","connectivityMonitor","locale","rateLimiter","webphone","audioSettings","dialButtonMuted","isWebphoneMode","callingMode","callingModes","waitingWebphoneConnected","connecting","webphoneDisconnected","connected","audioNotEnabled","userMedia","withinTab","currentLocale","callButtonDisabled","isIdle","connectivity","throttling","toNumber","toNumberField","recipient","searchContactList","sortedResult","fromNumbers","fromNumber","showSpinner","ready","dialButtonVolume","callBtnClassName","styles","callBtn","mapToFunctions","regionSettings","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","onToNumberChange","setToNumberField","value","clearToNumber","clearToNumberField","onCallButtonClick","changeFromNumber","updateFromNumber","formatPhone","phoneNumber","areaCode","countryCode","setRecipient","clearRecipient","searchContact","searchString","debouncedSearch","DialerPage","DialerPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\n\nimport { withPhone } from '../../lib/phoneContext';\nimport hasActiveCalls from '../../lib/hasActiveCalls';\nimport DialerPanel from '../../components/DialerPanel';\nimport styles from './styles.scss';\n\nfunction mapToProps(_, {\n  phone,\n  phone: {\n    call,\n    dialerUI,\n    callingSettings,\n    contactSearch,\n    connectivityMonitor,\n    locale,\n    rateLimiter,\n    webphone,\n    audioSettings,\n  },\n  dialButtonMuted = false,\n}) {\n  const isWebphoneMode = (callingSettings.callingMode === callingModes.webphone);\n  const waitingWebphoneConnected = (isWebphoneMode && webphone && webphone.connecting);\n  const webphoneDisconnected = (isWebphoneMode && webphone && !webphone.connected);\n  const audioNotEnabled = isWebphoneMode && audioSettings && !audioSettings.userMedia;\n  const withinTab = hasActiveCalls(phone);\n\n  return {\n    currentLocale: locale.currentLocale,\n    callingMode: callingSettings.callingMode,\n    isWebphoneMode,\n    callButtonDisabled: (\n      !call.isIdle\n      || !connectivityMonitor.connectivity\n      || rateLimiter.throttling\n      || webphoneDisconnected\n      || audioNotEnabled\n    ),\n    toNumber: dialerUI.toNumberField,\n    recipient: dialerUI.recipient,\n    searchContactList: contactSearch ? contactSearch.sortedResult : [],\n    fromNumbers: callingSettings.fromNumbers,\n    fromNumber: callingSettings.fromNumber,\n    showSpinner: !(\n      call.ready &&\n      callingSettings.ready &&\n      locale.ready &&\n      connectivityMonitor.ready &&\n      (!audioSettings || audioSettings.ready) &&\n      (!isWebphoneMode || !webphone || !waitingWebphoneConnected)\n    ),\n    dialButtonVolume: audioSettings ? audioSettings.dialButtonVolume : 1,\n    // If audioSettings is used, then use values from audioSettings module\n    dialButtonMuted: audioSettings ? audioSettings.dialButtonMuted : dialButtonMuted,\n    callBtnClassName: withinTab ? null : styles.callBtn,\n  };\n}\nfunction mapToFunctions(_, {\n  phone: {\n    callingSettings,\n    regionSettings,\n    contactSearch,\n    dialerUI,\n  },\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    onToNumberChange: value => (\n      dialerUI.setToNumberField(value)\n    ),\n    clearToNumber: () => dialerUI.clearToNumberField(),\n    onCallButtonClick() {\n      dialerUI.onCallButtonClick();\n    },\n    changeFromNumber: (...args) => callingSettings.updateFromNumber(...args),\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings && regionSettings.areaCode,\n      countryCode: regionSettings && regionSettings.countryCode,\n    }),\n    setRecipient: recipient => dialerUI.setRecipient(recipient),\n    clearRecipient: () => dialerUI.clearRecipient(),\n    searchContact(searchString) {\n      if (!contactSearch) {\n        return;\n      }\n      contactSearch.debouncedSearch({ searchString });\n    },\n    phoneTypeRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst DialerPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(DialerPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  DialerPage as default,\n};\n"]}