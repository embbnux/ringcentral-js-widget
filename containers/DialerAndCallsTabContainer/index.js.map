{"version":3,"sources":["containers/DialerAndCallsTabContainer/index.js"],"names":["TabContentView","props","getTabs","currentLocale","currentPath","path","label","i18n","getString","isActive","showSpinner","styles","nav","content","Component","propTypes","applicable","PropTypes","bool","isRequired","string","goTo","func","mapToProps","_","phone","locale","routerInteraction","ready","mapToFunctions","push","DialerAndCallsTabContainer","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,c;;;AASJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sJACXA,KADW;;AAEjB,UAAKC,OAAL,GAAe,8BACb;AAAA,aAAM,MAAKD,KAAL,CAAWE,aAAjB;AAAA,KADa,EAEb;AAAA,aAAM,MAAKF,KAAL,CAAWG,WAAjB;AAAA,KAFa,EAGb,UAACD,aAAD,EAAgBC,WAAhB;AAAA,aAAiC,CAC/B;AACEC,cAAM,SADR;AAEEC,eAAOC,eAAKC,SAAL,CAAe,QAAf,EAAyBL,aAAzB,CAFT;AAGEM,gBAHF,sBAGa;AAAE,iBAAOL,gBAAgB,SAAvB;AAAmC;AAHlD,OAD+B,EAM/B;AACEC,cAAM,QADR;AAEEC,eAAOC,eAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAFT;AAGEM,gBAHF,sBAGa;AAAE,iBAAOL,gBAAgB,QAAvB;AAAkC;AAHjD,OAN+B,CAAjC;AAAA,KAHa,CAAf;AAFiB;AAkBlB;;;;6BACQ;AACP,UAAI,KAAKH,KAAL,CAAWS,WAAf,EAA4B;AAC1B,eAAO,8BAAC,wBAAD,OAAP;AACD;AACD,aACE,8BAAC,yBAAD,6BACM,KAAKT,KADX;AAEE,cAAM,KAAKC,OAAL,EAFR;AAGE,sBAAcS,iBAAOC,GAHvB;AAIE,6BAAqBD,iBAAOE;AAJ9B,SADF;AAQD;;;EAxC0BC,gB,UACpBC,S,GAAY;AACjBC,cAAYC,oBAAUC,IAAV,CAAeC,UADV;AAEjBT,eAAaO,oBAAUC,IAAV,CAAeC,UAFX;AAGjBhB,iBAAec,oBAAUG,MAAV,CAAiBD,UAHf;AAIjBf,eAAaa,oBAAUG,MAAV,CAAiBD,UAJb;AAKjBE,QAAMJ,oBAAUK,IAAV,CAAeH;AALJ,C;;;AA0CrB,SAASI,UAAT,CAAoBC,CAApB,QAMG;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,wBAJDA,KAIC;AAAA,MAHCC,MAGD,cAHCA,MAGD;AAAA,MAFCC,iBAED,cAFCA,iBAED;;AACD,SAAO;AACLX,gBAAY,8BAAeS,KAAf,CADP;AAELtB,mBAAeuB,OAAOvB,aAFjB;AAGLO,iBAAa,CAACgB,OAAOE,KAHhB;AAILxB,iBAAauB,kBAAkBvB;AAJ1B,GAAP;AAMD;;AAED,SAASyB,cAAT,CAAwBL,CAAxB,SAIG;AAAA,MAFCG,iBAED,SAHDF,KAGC,CAFCE,iBAED;;AACD,SAAO;AACLN,QADK,gBACAhB,IADA,EACM;AACTsB,wBAAkBG,IAAlB,CAAuBzB,IAAvB;AACD;AAHI,GAAP;AAKD;;AAED,IAAM0B,6BAA6B,yBAAU,yBAC3CR,UAD2C,EAE3CM,cAF2C,EAG3C7B,cAH2C,CAAV,CAAnC;;QAMEuB,U,GAAAA,U;QACAM,c,GAAAA,c;QAC8BG,O,GAA9BD,0B","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport withPhone from '../../lib/withPhone';\nimport hasActiveCalls from '../../lib/hasActiveCalls';\nimport TabContentPanel from '../../components/TabContentPanel';\nimport SpinnerOverlay from '../../components/SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nclass TabContentView extends Component {\n  static propTypes = {\n    applicable: PropTypes.bool.isRequired,\n    showSpinner: PropTypes.bool.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    currentPath: PropTypes.string.isRequired,\n    goTo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.getTabs = createSelector(\n      () => this.props.currentLocale,\n      () => this.props.currentPath,\n      (currentLocale, currentPath) => ([\n        {\n          path: '/dialer',\n          label: i18n.getString('dialer', currentLocale),\n          isActive() { return currentPath === '/dialer'; },\n        },\n        {\n          path: '/calls',\n          label: i18n.getString('allCalls', currentLocale),\n          isActive() { return currentPath === '/calls'; }\n        },\n      ]),\n    );\n  }\n  render() {\n    if (this.props.showSpinner) {\n      return <SpinnerOverlay />;\n    }\n    return (\n      <TabContentPanel\n        {...this.props}\n        tabs={this.getTabs()}\n        navClassName={styles.nav}\n        tabContentClassName={styles.content}\n      />\n    );\n  }\n}\n\nfunction mapToProps(_, {\n  phone,\n  phone: {\n    locale,\n    routerInteraction,\n  },\n}) {\n  return {\n    applicable: hasActiveCalls(phone),\n    currentLocale: locale.currentLocale,\n    showSpinner: !locale.ready,\n    currentPath: routerInteraction.currentPath,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n  },\n}) {\n  return {\n    goTo(path) {\n      routerInteraction.push(path);\n    },\n  };\n}\n\nconst DialerAndCallsTabContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TabContentView));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  DialerAndCallsTabContainer as default,\n};\n"]}