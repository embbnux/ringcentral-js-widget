{"version":3,"sources":["containers/CallHistoryPage/index.js"],"names":["mapToProps","_","locale","callHistory","regionSettings","connectivityMonitor","dateTimeFormat","callLogger","title","getString","currentLocale","calls","areaCode","countryCode","disableLinks","connectivity","loggingMap","showSpinner","ready","mapToFunctions","onViewContact","dateTimeFormatter","formatDateTime","utcTimestamp","onLogCall","isLoggedContact","call","contact","redirect","logCall","CallsPage"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAOG;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,cAEC,QAFDA,cAEC;AAAA,MADDC,UACC,QADDA,UACC;;AACD,SAAO;AACLC,WAAO,eAAKC,SAAL,CAAe,OAAf,EAAwBP,OAAOQ,aAA/B,CADF;AAELA,mBAAeR,OAAOQ,aAFjB;AAGLC,WAAOR,YAAYQ,KAHd;AAILC,cAAUR,eAAeQ,QAJpB;AAKLC,iBAAaT,eAAeS,WALvB;AAMLC,kBAAc,CAACT,oBAAoBU,YAN9B;AAOLC,gBAAaT,cAAcA,WAAWS,UAPjC;AAQLC,iBAAa,EACXd,YAAYe,KAAZ,IACAhB,OAAOgB,KADP,IAEAd,eAAec,KAFf,IAGAZ,eAAeY,KAHf,IAIAb,oBAAoBa,KAJpB,KAKC,CAACX,UAAD,IAAeA,WAAWW,KAL3B,CADW;AARR,GAAP;AAiBD;AACD,SAASC,cAAT,CAAwBlB,CAAxB,SASG;AAAA;;AAAA,MARDK,cAQC,SARDA,cAQC;AAAA,MAPDc,aAOC,SAPDA,aAOC;AAAA,oCANDC,iBAMC;AAAA,MANDA,iBAMC,yCANmB;AAAA,WAAgBf,eAAegB,cAAf,CAA8B;AAChEC;AADgE,KAA9B,CAAhB;AAAA,GAMnB;AAAA,MAHDhB,UAGC,SAHDA,UAGC;AAAA,MAFDiB,SAEC,SAFDA,SAEC;AAAA,MADDC,eACC,SADDA,eACC;;AACD,SAAO;AACLJ,wCADK;AAELD,gCAFK;AAGLK,oCAHK;AAILD,eAAWA,aAAcjB;AAAA,6EAAe;AAAA,YAASmB,IAAT,SAASA,IAAT;AAAA,YAAeC,OAAf,SAAeA,OAAf;AAAA,mCAAwBC,QAAxB;AAAA,YAAwBA,QAAxB,kCAAmC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAChCrB,WAAWsB,OAAX,CAAmB;AACvBH,4BADuB;AAEvBC,kCAFuB;AAGvBC;AAHuB,iBAAnB,CADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;;AAAA;AAAA;AAAA;AAAA;AAJpB,GAAP;AAYD;;AAED,IAAME,YAAY,yBAAQ9B,UAAR,EAAoBmB,cAApB,uBAAlB;;kBAEeW,S","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport CallsPanel from '../../components/CallsPanel';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  locale,\n  callHistory,\n  regionSettings,\n  connectivityMonitor,\n  dateTimeFormat,\n  callLogger,\n}) {\n  return {\n    title: i18n.getString('title', locale.currentLocale),\n    currentLocale: locale.currentLocale,\n    calls: callHistory.calls,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: !connectivityMonitor.connectivity,\n    loggingMap: (callLogger && callLogger.loggingMap),\n    showSpinner: !(\n      callHistory.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      dateTimeFormat.ready &&\n      connectivityMonitor.ready &&\n      (!callLogger || callLogger.ready)\n    ),\n  };\n}\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  onViewContact,\n  dateTimeFormatter = utcTimestamp => dateTimeFormat.formatDateTime({\n    utcTimestamp,\n  }),\n  callLogger,\n  onLogCall,\n  isLoggedContact,\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact,\n    isLoggedContact,\n    onLogCall: onLogCall || (callLogger && (async ({ call, contact, redirect = true }) => {\n      await callLogger.logCall({\n        call,\n        contact,\n        redirect,\n      });\n    })),\n  };\n}\n\nconst CallsPage = connect(mapToProps, mapToFunctions)(CallsPanel);\n\nexport default CallsPage;\n"]}