{"version":3,"sources":["containers/CallHistoryPage/index.js"],"names":["mapToProps","_","locale","callHistory","regionSettings","connectivityMonitor","dateTimeFormat","callLogger","call","composeText","rolesAndPermissions","title","getString","currentLocale","calls","areaCode","countryCode","disableLinks","connectivity","disableClickToDial","isIdle","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","showSpinner","ready","status","mapToFunctions","onViewContact","dateTimeFormatter","formatDateTime","utcTimestamp","onLogCall","isLoggedContact","router","dialerRoute","composeTextRoute","onClickToDial","phoneNumber","history","push","onToNumberChange","onCall","undefined","onClickToSms","contact","addToNumber","typingToNumber","cleanTypingToNumber","redirect","logCall","CallsPage"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport moduleStatuses from 'ringcentral-integration/enums/moduleStatuses';\nimport CallsPanel from '../../components/CallsPanel';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  locale,\n  callHistory,\n  regionSettings,\n  connectivityMonitor,\n  dateTimeFormat,\n  callLogger,\n  call,\n  composeText,\n  rolesAndPermissions,\n}) {\n  return {\n    title: i18n.getString('title', locale.currentLocale),\n    currentLocale: locale.currentLocale,\n    calls: callHistory.calls,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: !connectivityMonitor.connectivity,\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n    loggingMap: (callLogger && callLogger.loggingMap),\n    showSpinner: !(\n      callHistory.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      dateTimeFormat.ready &&\n      connectivityMonitor.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.status === moduleStatuses.ready) &&\n      (!composeText || composeText.ready) &&\n      (!callLogger || callLogger.ready)\n    ),\n  };\n}\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  onViewContact,\n  dateTimeFormatter = utcTimestamp => dateTimeFormat.formatDateTime({\n    utcTimestamp,\n  }),\n  callLogger,\n  onLogCall,\n  isLoggedContact,\n  call,\n  composeText,\n  router,\n  dialerRoute = '/',\n  composeTextRoute = '/composeText',\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact,\n    onClickToDial: call ?\n      (phoneNumber) => {\n        if (call.isIdle) {\n          router.history.push(dialerRoute);\n          call.onToNumberChange(phoneNumber);\n          call.onCall();\n        }\n      } :\n      undefined,\n    onClickToSms: composeText ?\n      async (contact) => {\n        if (router) {\n          router.history.push(composeTextRoute);\n        }\n        composeText.addToNumber(contact);\n        if (composeText.typingToNumber === contact.phoneNumber) {\n          composeText.cleanTypingToNumber();\n        }\n      } :\n      undefined,\n    isLoggedContact,\n    onLogCall: onLogCall ||\n    (callLogger && (async ({ call, contact, redirect = true }) => {\n      await callLogger.logCall({\n        call,\n        contact,\n        redirect,\n      });\n    })),\n  };\n}\n\nconst CallsPage = connect(mapToProps, mapToFunctions)(CallsPanel);\n\nexport default CallsPage;\n"]}