{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/index.js"],"names":["mapToProps","_","phone","activeCallControl","regionSettings","callMonitor","locale","brand","params","renderContactName","sessionId","activeSession","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","currentLocale","fallBackNameFromThirdParty","fallBackNumber","areaCode","countryCode","otherDeviceCalls","fullName","mapToFunctions","routerInteraction","onBackButtonClick","goBack","setActiveSessionId","ActiveCallControlPanel","props","state","selectedMatcherIndex","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unHold","onHangup","hangUp","onTransfer","number","transfer","formatPhone","onSelectMatcherName","option","findIndex","match","id","setState","loadActCall","nextProps","muteCtrl","ACTIONS_CTRL_MAP","transferCtrl","holdCtrl","callCtrlLayouts","normalCtrl","startTime","isOnMute","isOnHold","showContactDisplayPlaceholder","Component","propTypes","PropTypes","func","string","isRequired","object","array","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file simplify active call control page\n * detail: https://jira.ringcentral.com/browse/RCINT-8256\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../../components/ActiveCallPad';\nimport i18n from './i18n';\nimport { pickFallBackInfo } from './utils';\n\nfunction mapToProps(_, {\n  phone: {\n    activeCallControl,\n    regionSettings,\n    callMonitor,\n    locale,\n    brand,\n  },\n  params,\n  renderContactName,\n}) {\n  const { sessionId } = params;\n  const { activeSession } = activeCallControl;\n  let nameMatches = [];\n  if (activeSession && !renderContactName) {\n    nameMatches =\n      activeSession.direction === callDirections.outbound ?\n        activeSession.toMatches : activeSession.fromMatches;\n  }\n  let phoneNumber;\n  if (activeSession) {\n    phoneNumber = activeSession.direction === callDirections.outbound ?\n      activeSession.to : activeSession.from;\n  }\n  let fallBackName = i18n.getString('Unknown', locale.currentLocale);\n  if (renderContactName) {\n    const { fallBackName: fallBackNameFromThirdParty, fallBackNumber } = pickFallBackInfo(\n      activeSession,\n      renderContactName({ sessionId }),\n      locale.currentLocale\n    );\n    phoneNumber = fallBackNumber;\n    fallBackName = fallBackNameFromThirdParty;\n  }\n  return {\n    currentLocale: locale.currentLocale,\n    activeSession,\n    sessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    otherDeviceCalls: callMonitor.otherDeviceCalls,\n    nameMatches,\n    phoneNumber,\n    fallBackName,\n    brand: brand.fullName,\n    activeCallControl,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n    activeCallControl\n  },\n}) {\n  return {\n    onBackButtonClick: () => routerInteraction.goBack(),\n    setActiveSessionId: sessionId => activeCallControl.setActiveSessionId(sessionId)\n  };\n}\n\nclass ActiveCallControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMatcherIndex: 0,\n    };\n\n    this.onMute = () => this.props.activeCallControl.mute(this.props.sessionId);\n    this.onUnmute = () => this.props.activeCallControl.unmute(this.props.sessionId);\n    this.onHold = () => this.props.activeCallControl.hold(this.props.sessionId);\n    this.onUnhold = () => this.props.activeCallControl.unHold(this.props.sessionId);\n    this.onHangup = () => this.props.activeCallControl.hangUp(this.props.sessionId);\n    this.onTransfer = async number =>\n      this.props.activeCallControl.transfer(number, this.props.sessionId);\n\n    this.formatPhone = phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: this.props.areaCode,\n      countryCode: this.props.countryCode,\n    });\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadActCall();\n  }\n  loadActCall() {\n    this.props.setActiveSessionId(this.props.sessionId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.activeSession) {\n      this.props.onBackButtonClick();\n    }\n  }\n\n  render() {\n    if (!this.props.activeSession) {\n      // or using skeleton screen here\n      return null;\n    }\n    const { muteCtrl, transferCtrl, holdCtrl } = ACTIONS_CTRL_MAP;\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        fallBackName={this.props.fallBackName}\n        phoneNumber={this.props.phoneNumber}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onHangup={this.onHangup}\n        onTransfer={this.onTransfer}\n        showBackButton\n        backButtonLabel={i18n.getString('allCalls', this.props.currentLocale)}\n        onBackButtonClick={this.props.onBackButtonClick}\n        formatPhone={this.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        layout={callCtrlLayouts.normalCtrl}\n        startTime={this.props.activeSession.startTime}\n        actions={[muteCtrl, transferCtrl, holdCtrl]}\n        isOnMute={this.props.activeSession.isOnMute}\n        isOnHold={this.props.activeSession.isOnHold}\n        nameMatches={this.props.nameMatches}\n        onSelectMatcherName={this.onSelectMatcherName}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n      />\n    );\n  }\n}\n\nActiveCallControlPanel.propTypes = {\n  setActiveSessionId: PropTypes.func,\n  currentLocale: PropTypes.string,\n  sessionId: PropTypes.string,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  activeSession: PropTypes.object,\n  onBackButtonClick: PropTypes.func.isRequired,\n  activeCallControl: PropTypes.object,\n  nameMatches: PropTypes.array,\n  fallBackName: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  brand: PropTypes.string.isRequired,\n};\n\nActiveCallControlPanel.defaultProps = {\n  setActiveSessionId: () => {},\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSession: null,\n  sessionId: null,\n  nameMatches: [],\n  fallBackName: '',\n  phoneNumber: '',\n  showContactDisplayPlaceholder: false,\n};\n\nexport default withPhone(connect(mapToProps, mapToFunctions)(ActiveCallControlPanel));\n"]}