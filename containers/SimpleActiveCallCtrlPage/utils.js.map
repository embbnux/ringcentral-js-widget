{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/utils.js"],"names":["pickEleByProps","props","list","keys","result","filter","item","shouldPicked","every","key","pickFallBackInfo","call","contactName","currentLocale","direction","fallBackName","fallBackNumber","getName","target","activityMatches","SINGLE_OR_NONE_MATCH","length","i18n","getString","getNumber","numberObj","extensionNumber","phoneNumber","callDirection","inbound","from","outbound","to"],"mappings":";;;;;;;;;;;AAGA;;;;AACA;;;;;;AAJA;;;AAMO,IAAMA,0CAAiB,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AACvD,MAAMC,OAAO,oBAAYF,KAAZ,CAAb;AACA,MAAMG,SAASF,KAAKG,MAAL,CAAY,UAACC,IAAD,EAAU;AACnC,QAAMC,eAAeJ,KAAKK,KAAL,CAAW;AAAA,aAAOP,MAAMQ,GAAN,MAAeH,KAAKG,GAAL,CAAtB;AAAA,KAAX,CAArB;AACA,WAAOF,YAAP;AACD,GAHc,CAAf;AAIA,SAAOH,MAAP;AACD,CAPM;;AASA,IAAMM,8CAAmB,SAAnBA,gBAAmB,GAA2C;AAAA,MAA1CC,IAA0C,uEAAnC,EAAmC;AAAA,MAA/BC,WAA+B;AAAA,MAAlBC,aAAkB;AAAA,MACjEC,SADiE,GACnDH,IADmD,CACjEG,SADiE;;AAEzE,MAAIC,eAAeH,WAAnB;AACA,MAAII,iBAAiB,EAArB;;AAEA,WAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAAA,QACfC,eADe,GACKD,MADL,CACfC,eADe;;AAEvB,QAAMC,uBAAuB,CAA7B;AACA,QAAI,CAACR,WAAL,EAAkB;AAChB,UAAIO,gBAAgBE,MAAhB,GAAyBD,oBAA7B,EAAmD;AACjD,eAAOE,eAAKC,SAAL,CAAe,SAAf,EAA0BV,aAA1B,CAAP;AACD;AACD,aAAOS,eAAKC,SAAL,CAAe,UAAf,EAA2BV,aAA3B,CAAP;AACD;AACD,WAAOD,WAAP;AACD;;AAED,WAASY,SAAT,CAAmBC,SAAnB,EAA8B;AAAA,QACpBC,eADoB,GACaD,SADb,CACpBC,eADoB;AAAA,QACHC,WADG,GACaF,SADb,CACHE,WADG;;AAE5B,WAAQA,eAAeD,eAAvB;AACD;;AAED,UAAQZ,SAAR;AACE,SAAKc,yBAAcC,OAAnB;AAA4B;AAC1Bd,uBAAeE,QAAQN,IAAR,CAAf;AACAK,yBAAiBQ,UAAUb,KAAKmB,IAAf,CAAjB;AACA;AACD;AACD,SAAKF,yBAAcG,QAAnB;AAA6B;AAC3BhB,uBAAeE,QAAQN,IAAR,CAAf;AACAK,yBAAiBQ,UAAUb,KAAKqB,EAAf,CAAjB;AACA;AACD;;AAED;AACE;AAbJ;;AAgBA,SAAO;AACLjB,8BADK;AAELC;AAFK,GAAP;AAID,CA1CM","file":"utils.js","sourcesContent":["/**\n * @file tools\n */\nimport callDirection from 'ringcentral-integration/enums/callDirections';\nimport i18n from './i18n';\n\nexport const pickEleByProps = (props = {}, list = []) => {\n  const keys = Object.keys(props);\n  const result = list.filter((item) => {\n    const shouldPicked = keys.every(key => props[key] === item[key]);\n    return shouldPicked;\n  });\n  return result;\n};\n\nexport const pickFallBackInfo = (call = {}, contactName, currentLocale) => {\n  const { direction } = call;\n  let fallBackName = contactName;\n  let fallBackNumber = '';\n\n  function getName(target) {\n    const { activityMatches } = target;\n    const SINGLE_OR_NONE_MATCH = 2;\n    if (!contactName) {\n      if (activityMatches.length < SINGLE_OR_NONE_MATCH) {\n        return i18n.getString('Unknown', currentLocale);\n      }\n      return i18n.getString('Multiple', currentLocale);\n    }\n    return contactName;\n  }\n\n  function getNumber(numberObj) {\n    const { extensionNumber, phoneNumber } = numberObj;\n    return (phoneNumber || extensionNumber);\n  }\n\n  switch (direction) {\n    case callDirection.inbound: {\n      fallBackName = getName(call);\n      fallBackNumber = getNumber(call.from);\n      break;\n    }\n    case callDirection.outbound: {\n      fallBackName = getName(call);\n      fallBackNumber = getNumber(call.to);\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return {\n    fallBackName,\n    fallBackNumber\n  };\n};\n"]}