{"version":3,"sources":["containers/ContactDetailsPage/index.js"],"names":["mapToProps","_","params","phone","locale","contacts","contactDetails","contactSearch","rolesAndPermissions","currentLocale","contactItem","contact","showSpinner","ready","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","mapToFunctions","dialerRoute","composeTextRoute","routerInteraction","regionSettings","call","dialerUI","composeText","getContact","find","id","contactId","type","contactType","clearContact","clear","formatNumber","phoneNumber","areaCode","countryCode","getAvatar","getProfileImage","getPresence","onBackClick","goBack","onClickToDial","callingEnabled","recipient","isIdle","push","onClickToCall","undefined","onClickToSMS","isDummyContact","name","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","ContactDetailsPage","ContactDetailsView"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QASG;AAAA,MARDC,MAQC,QARDA,MAQC;AAAA,wBAPDC,KAOC;AAAA,MANCC,MAMD,cANCA,MAMD;AAAA,MALCC,QAKD,cALCA,QAKD;AAAA,MAJCC,cAID,cAJCA,cAID;AAAA,MAHCC,aAGD,cAHCA,aAGD;AAAA,MAFCC,mBAED,cAFCA,mBAED;;AACD,SAAO;AACLC,mBAAeL,OAAOK,aADjB;AAELC,iBAAaJ,eAAeK,OAFvB;AAGLC,iBAAa,EACXR,OAAOS,KAAP,IACAN,cAAcM,KADd,IAEAP,eAAeO,KAFf,IAGAL,oBAAoBK,KAJT,CAHR;AASLC,2BAAuB,CAAC,EACtBN,oBAAoBO,WAApB,IACAP,oBAAoBO,WAApB,CAAgCC,WAFV,CATnB;AAaLC,2BAAuB,CAAC,EACtBT,oBAAoBO,WAApB,IACAP,oBAAoBO,WAApB,CAAgCG,WAFV;AAbnB,GAAP;AAkBD;;AAED,SAASC,cAAT,CAAwBlB,CAAxB,SAcG;AAAA;;AAAA,MAbDC,MAaC,SAbDA,MAaC;AAAA,gCAZDkB,WAYC;AAAA,MAZDA,WAYC,qCAZa,SAYb;AAAA,oCAXDC,gBAWC;AAAA,MAXDA,gBAWC,yCAXkB,cAWlB;AAAA,0BAVDlB,KAUC;AAAA,MATCmB,iBASD,eATCA,iBASD;AAAA,MARChB,cAQD,eARCA,cAQD;AAAA,MAPCiB,cAOD,eAPCA,cAOD;AAAA,MANCC,IAMD,eANCA,IAMD;AAAA,MALCC,QAKD,eALCA,QAKD;AAAA,MAJCC,WAID,eAJCA,WAID;AAAA,MAHCnB,aAGD,eAHCA,aAGD;AAAA,MAFCC,mBAED,eAFCA,mBAED;;AACD,SAAO;AACLmB,gBAAY,sBAAM;AAChBrB,qBAAesB,IAAf,CAAoB;AAClBC,YAAI3B,OAAO4B,SADO;AAElBC,cAAM7B,OAAO8B;AAFK,OAApB;AAID,KANI;AAOLC,kBAAc,wBAAM;AAClB3B,qBAAe4B,KAAf;AACD,KATI;AAULC,kBAAc;AAAA,aAAe,4BAAa;AACxCC,gCADwC;AAExCC,kBAAUd,eAAec,QAFe;AAGxCC,qBAAaf,eAAee;AAHY,OAAb,CAAf;AAAA,KAVT;AAeLC,eAAW;AAAA,aAAWjC,eAAekC,eAAf,CAA+B7B,OAA/B,CAAX;AAAA,KAfN;AAgBL8B,iBAAa;AAAA,aAAWnC,eAAemC,WAAf,CAA2B9B,OAA3B,CAAX;AAAA,KAhBR;AAiBL+B,iBAAa,uBAAM;AACjBpB,wBAAkBqB,MAAlB;AACD,KAnBI;AAoBLC,mBAAenB,YAAYjB,oBAAoBqC,cAAhC,GACb,UAACC,SAAD,EAAe;AACb,UAAItB,KAAKuB,MAAT,EAAiB;AACfzB,0BAAkB0B,IAAlB,CAAuB5B,WAAvB;AACAK,iBAASD,IAAT,CAAc,EAAEsB,oBAAF,EAAd;AACAxC,uBAAe2C,aAAf;AACD;AACF,KAPY,GAQbC,SA5BG;AA6BLC,kBAAczB;AAAA,2FACZ,iBAAOf,OAAP;AAAA,YAAgByC,cAAhB,uEAAiC,KAAjC;AAAA;AAAA;AAAA;AAAA;AACE,oBAAI9B,iBAAJ,EAAuB;AACrBA,oCAAkB0B,IAAlB,CAAuB3B,gBAAvB;AACD;AACD;AACA,oBAAIV,QAAQ0C,IAAR,IAAgB1C,QAAQyB,WAAxB,IAAuCgB,cAA3C,EAA2D;AACzD1B,8BAAY4B,oBAAZ,CAAiC3C,QAAQ0C,IAAzC;AACA9C,gCAAcgD,MAAd,CAAqB,EAAEC,cAAc7C,QAAQ0C,IAAxB,EAArB;AACD,iBAHD,MAGO;AACL3B,8BAAY+B,WAAZ,CAAwB9C,OAAxB;AACA,sBAAIe,YAAYgC,cAAZ,KAA+B/C,QAAQyB,WAA3C,EAAwD;AACtDV,gCAAYiC,mBAAZ;AACD;AACF;AACD;AACArD,+BAAe6C,YAAf;;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;;AAAA;AAAA;AAAA;AAAA,UAkBZD;AA/CG,GAAP;AAiDD;;AAED,IAAMU,qBAAqB,6BAAU,yBAAQ5D,UAAR,EAAoBmB,cAApB,EAAoC0C,4BAApC,CAAV,CAA3B;;kBAEeD,kB","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ContactDetailsView from '../../components/ContactDetailsView';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  params,\n  phone: {\n    locale,\n    contacts,\n    contactDetails,\n    contactSearch,\n    rolesAndPermissions,\n  },\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    contactItem: contactDetails.contact,\n    showSpinner: !(\n      locale.ready &&\n      contactSearch.ready &&\n      contactDetails.ready &&\n      rolesAndPermissions.ready\n    ),\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  params,\n  dialerRoute = '/dialer',\n  composeTextRoute = '/composeText',\n  phone: {\n    routerInteraction,\n    contactDetails,\n    regionSettings,\n    call,\n    dialerUI,\n    composeText,\n    contactSearch,\n    rolesAndPermissions\n  },\n}) {\n  return {\n    getContact: () => {\n      contactDetails.find({\n        id: params.contactId,\n        type: params.contactType\n      });\n    },\n    clearContact: () => {\n      contactDetails.clear();\n    },\n    formatNumber: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    getAvatar: contact => contactDetails.getProfileImage(contact),\n    getPresence: contact => contactDetails.getPresence(contact),\n    onBackClick: () => {\n      routerInteraction.goBack();\n    },\n    onClickToDial: dialerUI && rolesAndPermissions.callingEnabled ?\n      (recipient) => {\n        if (call.isIdle) {\n          routerInteraction.push(dialerRoute);\n          dialerUI.call({ recipient });\n          contactDetails.onClickToCall();\n        }\n      } :\n      undefined,\n    onClickToSMS: composeText ?\n      async (contact, isDummyContact = false) => {\n        if (routerInteraction) {\n          routerInteraction.push(composeTextRoute);\n        }\n        // if contact autocomplete, if no match fill the number only\n        if (contact.name && contact.phoneNumber && isDummyContact) {\n          composeText.updateTypingToNumber(contact.name);\n          contactSearch.search({ searchString: contact.name });\n        } else {\n          composeText.addToNumber(contact);\n          if (composeText.typingToNumber === contact.phoneNumber) {\n            composeText.cleanTypingToNumber();\n          }\n        }\n        // for track\n        contactDetails.onClickToSMS();\n      } :\n      undefined,\n  };\n}\n\nconst ContactDetailsPage = withPhone(connect(mapToProps, mapToFunctions)(ContactDetailsView));\n\nexport default ContactDetailsPage;\n"]}