{"version":3,"sources":["containers/CallMonitorPage/index.js"],"names":["mapToProps","_","locale","callMonitor","regionSettings","connectivityMonitor","dateTimeFormat","callLogger","active","title","getString","currentLocale","calls","areaCode","countryCode","disableLinks","connectivity","loggingMap","showSpinner","ready","mapToFunctions","onViewContact","dateTimeFormatter","formatDateTime","utcTimestamp","onLogCall","isLoggedContact","call","contact","redirect","logCall","CallMonitorPage"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAOG;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,cAEC,QAFDA,cAEC;AAAA,MADDC,UACC,QADDA,UACC;;AACD,SAAO;AACLC,YAAQ,IADH;AAELC,WAAO,eAAKC,SAAL,CAAe,OAAf,EAAwBR,OAAOS,aAA/B,CAFF;AAGLA,mBAAeT,OAAOS,aAHjB;AAILC,WAAOT,YAAYS,KAJd;AAKLC,cAAUT,eAAeS,QALpB;AAMLC,iBAAaV,eAAeU,WANvB;AAOLC,kBAAc,CAACV,oBAAoBW,YAP9B;AAQLC,gBAAaV,cAAcA,WAAWU,UARjC;AASLC,iBAAa,EACXhB,OAAOiB,KAAP,IACAhB,YAAYgB,KADZ,IAEAf,eAAee,KAFf,IAGAd,oBAAoBc,KAHpB,IAIAb,eAAea,KAJf,KAKC,CAACZ,UAAD,IAAeA,WAAWY,KAL3B,CADW;AATR,GAAP;AAkBD;AACD,SAASC,cAAT,CAAwBnB,CAAxB,SAUG;AAAA;;AAAA,MATDK,cASC,SATDA,cASC;AAAA,MARDe,aAQC,SARDA,aAQC;AAAA,oCAPDC,iBAOC;AAAA,MAPDA,iBAOC,yCAPmB;AAAA,WAAgBhB,eAAeiB,cAAf,CAA8B;AAChEC;AADgE,KAA9B,CAAhB;AAAA,GAOnB;AAAA,MAJDjB,UAIC,SAJDA,UAIC;AAAA,MAHDkB,SAGC,SAHDA,SAGC;AAAA,MAFDC,eAEC,SAFDA,eAEC;;AACD,SAAO;AACLJ,wCADK;AAELD,gCAFK;AAGLK,oCAHK;AAILD,eAAWA,aAAclB;AAAA,6EAAe;AAAA,YAASoB,IAAT,SAASA,IAAT;AAAA,YAAeC,OAAf,SAAeA,OAAf;AAAA,mCAAwBC,QAAxB;AAAA,YAAwBA,QAAxB,kCAAmC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAChCtB,WAAWuB,OAAX,CAAmB;AACvBH,4BADuB;AAEvBC,kCAFuB;AAGvBC;AAHuB,iBAAnB,CADgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;;AAAA;AAAA;AAAA;AAAA;AAJpB,GAAP;AAYD;;AAED,IAAME,kBAAkB,yBAAQ/B,UAAR,EAAoBoB,cAApB,uBAAxB;;kBAEeW,e","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport CallsPanel from '../../components/CallsPanel';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  locale,\n  callMonitor,\n  regionSettings,\n  connectivityMonitor,\n  dateTimeFormat,\n  callLogger,\n}) {\n  return {\n    active: true,\n    title: i18n.getString('title', locale.currentLocale),\n    currentLocale: locale.currentLocale,\n    calls: callMonitor.calls,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: !connectivityMonitor.connectivity,\n    loggingMap: (callLogger && callLogger.loggingMap),\n    showSpinner: !(\n      locale.ready &&\n      callMonitor.ready &&\n      regionSettings.ready &&\n      connectivityMonitor.ready &&\n      dateTimeFormat.ready &&\n      (!callLogger || callLogger.ready)\n    ),\n  };\n}\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  onViewContact,\n  dateTimeFormatter = utcTimestamp => dateTimeFormat.formatDateTime({\n    utcTimestamp,\n  }),\n  callLogger,\n  onLogCall,\n  isLoggedContact,\n\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact,\n    isLoggedContact,\n    onLogCall: onLogCall || (callLogger && (async ({ call, contact, redirect = true }) => {\n      await callLogger.logCall({\n        call,\n        contact,\n        redirect,\n      });\n    })),\n  };\n}\n\nconst CallMonitorPage = connect(mapToProps, mapToFunctions)(CallsPanel);\n\nexport default CallMonitorPage;\n"]}