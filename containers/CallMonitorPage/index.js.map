{"version":3,"sources":["containers/CallMonitorPage/index.js"],"names":["mapToProps","_","locale","callMonitor","regionSettings","connectivityMonitor","dateTimeFormat","callLogger","composeText","rolesAndPermissions","active","title","getString","currentLocale","calls","areaCode","countryCode","disableLinks","connectivity","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","loggingMap","showSpinner","ready","mapToFunctions","onViewContact","dateTimeFormatter","formatDateTime","utcTimestamp","onLogCall","isLoggedContact","router","composeTextRoute","call","contact","redirect","logCall","onClickToSms","history","push","addToNumber","typingToNumber","phoneNumber","cleanTypingToNumber","undefined","CallMonitorPage"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport CallsPanel from '../../components/CallsPanel';\nimport i18n from './i18n';\n\nfunction mapToProps(_, {\n  locale,\n  callMonitor,\n  regionSettings,\n  connectivityMonitor,\n  dateTimeFormat,\n  callLogger,\n  composeText,\n  rolesAndPermissions,\n}) {\n  return {\n    active: true,\n    title: i18n.getString('title', locale.currentLocale),\n    currentLocale: locale.currentLocale,\n    calls: callMonitor.calls,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks: !connectivityMonitor.connectivity,\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n    loggingMap: (callLogger && callLogger.loggingMap),\n    showSpinner: !(\n      locale.ready &&\n      callMonitor.ready &&\n      regionSettings.ready &&\n      connectivityMonitor.ready &&\n      dateTimeFormat.ready &&\n      (!callLogger || callLogger.ready) &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!composeText || composeText.ready)\n    ),\n  };\n}\nfunction mapToFunctions(_, {\n  dateTimeFormat,\n  onViewContact,\n  dateTimeFormatter = utcTimestamp => dateTimeFormat.formatDateTime({\n    utcTimestamp,\n  }),\n  callLogger,\n  onLogCall,\n  isLoggedContact,\n  router,\n  composeTextRoute = '/composeText',\n  composeText,\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact,\n    isLoggedContact,\n    onLogCall: onLogCall ||\n    (callLogger && (async ({ call, contact, redirect = true }) => {\n      await callLogger.logCall({\n        call,\n        contact,\n        redirect,\n      });\n    })),\n    onClickToSms: composeText ?\n      async (contact) => {\n        if (router) {\n          router.history.push(composeTextRoute);\n        }\n        composeText.addToNumber(contact);\n        if (composeText.typingToNumber === contact.phoneNumber) {\n          composeText.cleanTypingToNumber();\n        }\n      } :\n      undefined,\n  };\n}\n\nconst CallMonitorPage = connect(mapToProps, mapToFunctions)(CallsPanel);\n\nexport default CallMonitorPage;\n"]}