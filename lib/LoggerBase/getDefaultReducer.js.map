{"version":3,"sources":["lib/LoggerBase/getDefaultReducer.js"],"names":["getLoggingListReducer","getDefaultReducer","types","state","type","id","log","indexOf","logSuccess","logError","filter","item","resetSuccess","status","loggingList"],"mappings":";;;;;;;;;;QAGgBA,qB,GAAAA,qB;kBAqBQC,iB;;AAxBxB;;AACA;;;;;;AAEO,SAASD,qBAAT,CAA+BE,KAA/B,EAAsC;AAC3C,SAAO,YAA8B;AAAA,QAA7BC,KAA6B,uEAArB,EAAqB;AAAA;AAAA,QAAfC,IAAe,QAAfA,IAAe;AAAA,QAATC,EAAS,QAATA,EAAS;;AACnC,YAAQD,IAAR;AACE,WAAKF,MAAMI,GAAX;AAAgB;AACd,cAAIH,MAAMI,OAAN,CAAcF,EAAd,IAAoB,CAAC,CAAzB,EAA4B;AAC1B,mBAAOF,KAAP;AACD;AACD,4DAAWA,KAAX,IAAkBE,EAAlB;AACD;AACD,WAAKH,MAAMM,UAAX;AACA,WAAKN,MAAMO,QAAX;AAAqB;AACnB,iBAAON,MAAMO,MAAN,CAAa;AAAA,mBAAQC,SAASN,EAAjB;AAAA,WAAb,CAAP;AACD;AACD,WAAKH,MAAMU,YAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOT,KAAP;AAdJ;AAgBD,GAjBD;AAkBD;;AAEc,SAASF,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,SAAO,4BAAgB;AACrBW,YAAQ,sCAAuBX,KAAvB,CADa;AAErBY,iBAAad,sBAAsBE,KAAtB;AAFQ,GAAhB,CAAP;AAID","file":"getDefaultReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../getModuleStatusReducer';\n\nexport function getLoggingListReducer(types) {\n  return (state = [], { type, id }) => {\n    switch (type) {\n      case types.log: {\n        if (state.indexOf(id) > -1) {\n          return state;\n        }\n        return [...state, id];\n      }\n      case types.logSuccess:\n      case types.logError: {\n        return state.filter(item => item !== id);\n      }\n      case types.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getDefaultReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    loggingList: getLoggingListReducer(types),\n  });\n}\n"]}