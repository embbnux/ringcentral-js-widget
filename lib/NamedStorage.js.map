{"version":3,"sources":["lib/NamedStorage.js"],"names":["MemoryStorage","data","key","NamedStorage","storageKey","Error","_storageKey","_id","uuid","v4","localStorage","window","_storageHandler","event","JSON","parse","newValue","setter","id","trigger","e","_localStorage","addEventListener","getItem","setItem","removeEventListener","Subscribable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAGMA,a;;;;;;;8BACM;AACR,aAAO,KAAKC,IAAZ;AACD;;;4BACOC,G,EAAKD,I,EAAM;AACjB,WAAKA,IAAL,GAAYA,IAAZ;AACD;;;;;IAGkBE,Y;;;AACnB,8BAEG;AAAA,QADDC,UACC,QADDA,UACC;AAAA;;AAAA;;AAED,QAAI,CAACA,UAAL,EAAiB;AACf,YAAMC,MAAM,qDAAN,CAAN;AACD;AACD,UAAKC,WAAL,GAAmBF,UAAnB;AACA,UAAKG,GAAL,GAAWC,eAAKC,EAAL,EAAX;AACA,QAAI,OAAOC,YAAP,KAAwB,WAAxB,IAAuC,OAAOC,MAAP,KAAkB,WAA7D,EAA0E;AACxE,YAAKC,eAAL,GAAuB,UAACC,KAAD,EAAW;AAChC,YAAIA,MAAMX,GAAN,KAAc,MAAKI,WAAvB,EAAoC;AAClC,cAAI;AAAA,8BAIEQ,KAAKC,KAAL,CAAWF,MAAMG,QAAjB,CAJF;AAAA,gBAEAC,MAFA,eAEAA,MAFA;AAAA,gBAGAhB,IAHA,eAGAA,IAHA;;AAKF,gBAAIgB,UAAUA,WAAW,MAAKC,EAA9B,EAAkC;AAChC,oBAAKC,OAAL,CAAalB,IAAb;AACD;AACF,WARD,CAQE,OAAOmB,CAAP,EAAU;AACV;AACD;AACF;AACF,OAdD;AAeA,YAAKC,aAAL,GAAqBX,YAArB;AACAC,aAAOW,gBAAP,CAAwB,SAAxB,EAAmC,MAAKV,eAAxC;AACD,KAlBD,MAkBO;AACL,YAAKS,aAAL,GAAqB,IAAIrB,aAAJ,EAArB;AACD;AA3BA;AA4BF;;;;8BACS;AACR,UAAI;AAAA,2BAGEc,KAAKC,KAAL,CAAW,KAAKM,aAAL,CAAmBE,OAAnB,CAA2B,KAAKjB,WAAhC,CAAX,CAHF;AAAA,YAEAL,IAFA,gBAEAA,IAFA;;AAIF,eAAOA,QAAQ,EAAf;AACD,OALD,CAKE,OAAOmB,CAAP,EAAU;AACV;AACA,eAAO,EAAP;AACD;AACF;;;4BACOnB,I,EAAM;AACZ,WAAKoB,aAAL,CAAmBG,OAAnB,CACE,KAAKlB,WADP,EAEE,yBAAe;AACbW,gBAAQ,KAAKC,EADA;AAEbjB;AAFa,OAAf,CAFF;AAOD;;;8BACS;AACR,UAAI,KAAKW,eAAT,EAA0B;AACxBD,eAAOc,mBAAP,CAA2B,SAA3B,EAAsC,KAAKb,eAA3C;AACD;AACF;;;wBACQ;AACP,aAAO,KAAKL,GAAZ;AACD;;;EA3DuCmB,sB;;kBAArBvB,Y","file":"NamedStorage.js","sourcesContent":["import SymbolMap from 'data-types/symbol-map';\nimport uuid from 'uuid';\nimport Subscribable from './Subscribable';\n\n\nclass MemoryStorage {\n  getItem() {\n    return this.data;\n  }\n  setItem(key, data) {\n    this.data = data;\n  }\n}\n\nexport default class NamedStorage extends Subscribable {\n  constructor({\n    storageKey,\n  }) {\n    super();\n    if (!storageKey) {\n      throw Error('NameLocalStorage must be created with a storage key');\n    }\n    this._storageKey = storageKey;\n    this._id = uuid.v4();\n    if (typeof localStorage !== 'undefined' && typeof window !== 'undefined') {\n      this._storageHandler = (event) => {\n        if (event.key === this._storageKey) {\n          try {\n            const {\n              setter,\n              data,\n            } = JSON.parse(event.newValue);\n            if (setter && setter !== this.id) {\n              this.trigger(data);\n            }\n          } catch (e) {\n            /* ignore error */\n          }\n        }\n      };\n      this._localStorage = localStorage;\n      window.addEventListener('storage', this._storageHandler);\n    } else {\n      this._localStorage = new MemoryStorage();\n    }\n  }\n  getData() {\n    try {\n      const {\n        data,\n      } = JSON.parse(this._localStorage.getItem(this._storageKey));\n      return data || {};\n    } catch (e) {\n      /* ignore error */\n      return {};\n    }\n  }\n  setData(data) {\n    this._localStorage.setItem(\n      this._storageKey,\n      JSON.stringify({\n        setter: this.id,\n        data,\n      }),\n    );\n  }\n  destroy() {\n    if (this._storageHandler) {\n      window.removeEventListener('storage', this._storageHandler);\n    }\n  }\n  get id() {\n    return this._id;\n  }\n}\n"]}