{"version":3,"sources":["lib/MemoryStorage/index.js"],"names":["MemoryStorage","_data","key","get","value","set","delete","idx","keys","size"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;IAKqBA,a;AACnB,2BAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,mBAAb;AACD;;;;4BACOC,G,EAAK;AACX,aAAO,KAAKD,KAAL,CAAWE,GAAX,CAAeD,GAAf,CAAP;AACD;;;4BACOA,G,EAAKE,K,EAAO;AAClB,WAAKH,KAAL,CAAWI,GAAX,CAAeH,GAAf,EAAoBE,KAApB;AACD;;;+BACUF,G,EAAK;AACd,WAAKD,KAAL,CAAWK,MAAX,CAAkBJ,GAAlB;AACD;;;wBAIGK,G,EAAK;AACP,aAAO,2CAAI,KAAKN,KAAL,CAAWO,IAAX,EAAJ,GAAuBD,GAAvB,CAAP;AACD;;;2BACM;AACL,aAAO,KAAKN,KAAL,CAAWO,IAAX,EAAP;AACD;;;4BACO;AACN,aAAO,IAAP;AACD;;;wBAXY;AACX,aAAO,KAAKP,KAAL,CAAWQ,IAAlB;AACD;;;;;kBAfkBT,a","file":"index.js","sourcesContent":["/**\n * @class\n * @description Simple polyfill of localStorage object for using storageModules in node\n */\n\nexport default class MemoryStorage {\n  constructor() {\n    this._data = new Map();\n  }\n  getItem(key) {\n    return this._data.get(key);\n  }\n  setItem(key, value) {\n    this._data.set(key, value);\n  }\n  removeItem(key) {\n    this._data.delete(key);\n  }\n  get length() {\n    return this._data.size;\n  }\n  key(idx) {\n    return [...this._data.keys()][idx];\n  }\n  keys() {\n    return this._data.keys();\n  }\n  ready() {\n    return true;\n  }\n}\n"]}