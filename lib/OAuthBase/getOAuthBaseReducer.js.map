{"version":3,"sources":["lib/OAuthBase/getOAuthBaseReducer.js"],"names":["getOAuthReadyReducer","getOAuthBaseReducer","types","state","type","setupOAuth","destroyOAuth","status","oAuthReady"],"mappings":";;;;;QAIgBA,oB,GAAAA,oB;kBAYQC,mB;;AAhBxB;;AACA;;;;;;AAGO,SAASD,oBAAT,CAA8BE,KAA9B,EAAqC;AAC1C,SAAO,YAA6B;AAAA,QAA5BC,KAA4B,uEAApB,KAAoB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAClC,YAAQA,IAAR;AACE,WAAKF,MAAMG,UAAX;AACE,eAAO,IAAP;AACF,WAAKH,MAAMI,YAAX;AACE,eAAO,KAAP;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;AACc,SAASF,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,SAAO,4BAAgB;AACrBK,YAAQ,sCAAuBL,KAAvB,CADa;AAErBM,gBAAYR,qBAAqBE,KAArB;AAFS,GAAhB,CAAP;AAID","file":"getOAuthBaseReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from 'ringcentral-integration/lib/getModuleStatusReducer';\n\n\nexport function getOAuthReadyReducer(types) {\n  return (state = false, { type }) => {\n    switch (type) {\n      case types.setupOAuth:\n        return true;\n      case types.destroyOAuth:\n        return false;\n      default:\n        return state;\n    }\n  };\n}\nexport default function getOAuthBaseReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    oAuthReady: getOAuthReadyReducer(types),\n  });\n}\n"]}