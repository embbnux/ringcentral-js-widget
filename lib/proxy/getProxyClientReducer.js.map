{"version":3,"sources":["lib/proxy/getProxyClientReducer.js"],"names":["getLastActionReducer","getActionNumberReducer","getTargetReducer","getProxyClientReducer","types","state","type","action","lastAction","sync","actionNumber","targetReducer","undefined","initModule","target","proxyReducer","proxy"],"mappings":";;;;;QAEgBA,oB,GAAAA,oB;QAYAC,sB,GAAAA,sB;QAWAC,gB,GAAAA,gB;kBAgBQC,qB;;AAzCxB;;AAEO,SAASH,oBAAT,OAAyC;AAAA,MAATI,KAAS,QAATA,KAAS;;AAC9C,SAAO,YAAgD;AAAA,QAA/CC,KAA+C,uEAAvC,IAAuC;AAAA;AAAA,QAA/BC,IAA+B,SAA/BA,IAA+B;AAAA,QAAzBC,MAAyB,SAAzBA,MAAyB;AAAA,QAAjBC,UAAiB,SAAjBA,UAAiB;;AACrD,YAAQF,IAAR;AACE,WAAKF,MAAMG,MAAX;AACE,eAAOA,MAAP;AACF,WAAKH,MAAMK,IAAX;AACE,eAAOD,UAAP;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;AACM,SAASJ,sBAAT,QAA2C;AAAA,MAATG,KAAS,SAATA,KAAS;;AAChD,SAAO,YAAwC;AAAA,QAAvCC,KAAuC,uEAA/B,CAAC,CAA8B;AAAA;AAAA,QAAzBC,IAAyB,SAAzBA,IAAyB;AAAA,QAAnBI,YAAmB,SAAnBA,YAAmB;;AAC7C,YAAQJ,IAAR;AACE,WAAKF,MAAMG,MAAX;AACA,WAAKH,MAAMK,IAAX;AACE,eAAOC,YAAP;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GARD;AASD;AACM,SAASH,gBAAT,QAAoD;AAAA,MAAxBS,aAAwB,SAAxBA,aAAwB;AAAA,MAATP,KAAS,SAATA,KAAS;;AACzD,SAAO,YAGF;AAAA,QAFHC,KAEG,uEAFKM,cAAcC,SAAd,EAAyB,EAAEN,MAAMF,MAAMS,UAAd,EAAzB,CAEL;AAAA;AAAA,QADDP,IACC,SADDA,IACC;AAAA,QADKQ,MACL,SADKA,MACL;AAAA,QADaP,MACb,SADaA,MACb;;AACH,YAAQD,IAAR;AACE,WAAKF,MAAMG,MAAX;AACE,eAAOI,cAAcN,KAAd,EAAqBE,MAArB,CAAP;AACF,WAAKH,MAAMK,IAAX;AACE,eAAOK,MAAP;AACF;AACE,eAAOT,KAAP;AANJ;AAQD,GAZD;AAaD;;AAEc,SAASF,qBAAT,QAAuE;AAAA,MAAtCQ,aAAsC,SAAtCA,aAAsC;AAAA,MAAvBI,YAAuB,SAAvBA,YAAuB;AAAA,MAATX,KAAS,SAATA,KAAS;;AACpF,SAAO,4BAAgB;AACrBU,YAAQZ,iBAAiB,EAAES,4BAAF,EAAiBP,YAAjB,EAAjB,CADa;AAErBY,WAAOD,YAFc;AAGrBP,gBAAYR,qBAAqB,EAAEI,YAAF,EAArB,CAHS;AAIrBM,kBAAcT,uBAAuB,EAAEG,YAAF,EAAvB;AAJO,GAAhB,CAAP;AAMD","file":"getProxyClientReducer.js","sourcesContent":["import { combineReducers } from 'redux';\n\nexport function getLastActionReducer({ types }) {\n  return (state = null, { type, action, lastAction }) => {\n    switch (type) {\n      case types.action:\n        return action;\n      case types.sync:\n        return lastAction;\n      default:\n        return state;\n    }\n  };\n}\nexport function getActionNumberReducer({ types }) {\n  return (state = -1, { type, actionNumber }) => {\n    switch (type) {\n      case types.action:\n      case types.sync:\n        return actionNumber;\n      default:\n        return state;\n    }\n  };\n}\nexport function getTargetReducer({ targetReducer, types }) {\n  return (\n    state = targetReducer(undefined, { type: types.initModule }),\n    { type, target, action },\n  ) => {\n    switch (type) {\n      case types.action:\n        return targetReducer(state, action);\n      case types.sync:\n        return target;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getProxyClientReducer({ targetReducer, proxyReducer, types }) {\n  return combineReducers({\n    target: getTargetReducer({ targetReducer, types }),\n    proxy: proxyReducer,\n    lastAction: getLastActionReducer({ types }),\n    actionNumber: getActionNumberReducer({ types }),\n  });\n}\n"]}