{"version":3,"sources":["lib/StorageBase/index.js"],"names":["StorageBase","deps","dep","optional","name","actionTypes","enumMap","actionTypesBase","prefix","StorageProvider","SynchronizedStorage","options","Error","_StorageProvider","_reducers","_reducer","types","reducers","key","reducer","_initialized","state","data","status","storageKey","moduleStatuses","ready","RcModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;AAGA;;;;;IAQqBA,W,WAHpB,iBAAQ;AACPC,QAAM,CAAC,EAAEC,KAAK,oBAAP,EAA6BC,UAAU,IAAvC,EAAD;AADC,CAAR,C;;;AAIC,6BAKG;AAAA,QAJDC,IAIC,QAJDA,IAIC;AAAA,gCAHDC,WAGC;AAAA,QAHDA,WAGC,oCAHa,sBAAW,EAAEC,SAASC,yBAAX,EAA4BC,QAAQJ,IAApC,EAAX,CAGb;AAAA,oCAFDK,eAEC;AAAA,QAFDA,eAEC,wCAFiBC,6BAEjB;AAAA,QADEC,OACF;AAAA;;AACD,QAAI,CAACP,IAAL,EAAW;AACT,YAAM,IAAIQ,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAHA,2KAKID,OALJ;AAMCN;AAND;;AAQD,UAAKQ,gBAAL,GAAwBJ,eAAxB;AACA,UAAKK,SAAL,GAAiB,EAAjB;AACA,UAAKC,QAAL,GAAgB,iCAAkB,EAAEC,OAAO,MAAKX,WAAd,EAA2BY,UAAU,MAAKH,SAA1C,EAAlB,CAAhB;AAVC;AAWF;;;;2CAEiC;AAAA,UAAhBI,GAAgB,SAAhBA,GAAgB;AAAA,UAAXC,OAAW,SAAXA,OAAW;;AAChC,UAAI,KAAKC,YAAT,EAAuB;AACrB,cAAM,IAAIR,KAAJ,CAAU,+CAAV,CAAN;AACD;AACD,UAAI,KAAKE,SAAL,CAAeI,GAAf,CAAJ,EAAyB;AACvB,cAAM,IAAIN,KAAJ,wBAA8BM,GAA9B,uBAAN;AACD;AACD,WAAKJ,SAAL,CAAeI,GAAf,IAAsBC,OAAtB;AACD;;;4BAEOD,G,EAAK;AACX,aAAO,KAAKG,KAAL,CAAWC,IAAX,CAAgBJ,GAAhB,CAAP;AACD;;;wBAEU;AACT,aAAO,KAAKG,KAAL,CAAWC,IAAlB;AACD;;;wBAEY;AACX,aAAO,KAAKD,KAAL,CAAWE,MAAlB;AACD;;;wBAEgB;AACf,aAAO,KAAKF,KAAL,CAAWG,UAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,MAAL,KAAgBE,yBAAeC,KAAtC;AACD;;;EA/CsCC,kB;kBAApB3B,W","file":"index.js","sourcesContent":["import RcModule from '../RcModule';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport SynchronizedStorage from '../../lib/SynchronizedStorage';\n\nimport actionTypesBase from './actionTypesBase';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport getStorageReducer from './getStorageReducer';\n\n\n/**\n * @class\n * @description Alternative implementation of the Storage class.\n *  Allows registeration of reducers so that persisted states can be computed with reducers.\n */\n@Library({\n  deps: [{ dep: 'StorageBaseOptions', optional: true }]\n})\nexport default class StorageBase extends RcModule {\n  constructor({\n    name,\n    actionTypes = prefixEnum({ enumMap: actionTypesBase, prefix: name }),\n    StorageProvider = SynchronizedStorage,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._StorageProvider = StorageProvider;\n    this._reducers = {};\n    this._reducer = getStorageReducer({ types: this.actionTypes, reducers: this._reducers });\n  }\n\n  registerReducer({ key, reducer }) {\n    if (this._initialized) {\n      throw new Error('Reducers must be registered before initialize');\n    }\n    if (this._reducers[key]) {\n      throw new Error(`Reducer of key: '${key}' already exists`);\n    }\n    this._reducers[key] = reducer;\n  }\n\n  getItem(key) {\n    return this.state.data[key];\n  }\n\n  get data() {\n    return this.state.data;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get storageKey() {\n    return this.state.storageKey;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n}\n"]}