{"version":3,"sources":["lib/parseCallbackUri/index.js"],"names":["parseCallbackUri","callbackUri","url","parse","query","error","Error","key","Object","prototype","hasOwnProperty","code"],"mappings":";;;;;kBAOwBA,gB;;AAPxB;;;;;;AAEA;;;;;AAKe,SAASA,gBAAT,CAA0BC,WAA1B,EAAuC;AAAA,mBAClCC,cAAIC,KAAJ,CAAUF,WAAV,EAAuB,IAAvB,CADkC;AAAA,MAC5CG,KAD4C,cAC5CA,KAD4C;;AAEpD,MAAIA,MAAMC,KAAV,EAAiB;AACf,QAAMA,QAAQ,IAAIC,KAAJ,CAAUF,MAAMC,KAAhB,CAAd;AACA,SAAK,IAAME,GAAX,IAAkBH,KAAlB,EAAyB;AACvB,UAAWI,OAAOC,SAAP,CAAiBC,cAAxB,aAAuCH,GAAvC,CAAJ,EAAiD;AAC/CF,cAAME,GAAN,IAAaH,MAAMG,GAAN,CAAb;AACD;AACF;AACD,UAAMF,KAAN;AACD;AACD,SAAOD,MAAMO,IAAb;AACD","file":"index.js","sourcesContent":["import url from 'url';\n\n/**\n * @function\n * @param {String} callbackUri\n * @return {String} code\n */\nexport default function parseCallbackUri(callbackUri) {\n  const { query } = url.parse(callbackUri, true);\n  if (query.error) {\n    const error = new Error(query.error);\n    for (const key in query) {\n      if (query::Object.prototype.hasOwnProperty(key)) {\n        error[key] = query[key];\n      }\n    }\n    throw error;\n  }\n  return query.code;\n}\n"]}