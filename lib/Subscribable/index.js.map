{"version":3,"sources":["lib/Subscribable/index.js"],"names":["Subscribable","_handlers","handler","add","unsubscribe","delete","forEach","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAIqBA,Y;AACnB,0BAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,mBAAjB;AACD;AACD;;;;;;;;;8BAKUC,O,EAAS;AAAA;;AACjB,WAAKD,SAAL,CAAeE,GAAf,CAAmBD,OAAnB;AACA,aAAO,YAAM;AACX,cAAKE,WAAL,CAAiBF,OAAjB;AACD,OAFD;AAGD;AACD;;;;;;;gCAIYA,O,EAAS;AACnB,WAAKD,SAAL,CAAeI,MAAf,CAAsBH,OAAtB;AACD;AACD;;;;;;8BAGU;AACR,iDAAI,KAAKD,SAAT,GAAoBK,OAApB,CAA4B,UAACJ,OAAD,EAAa;AACvC,YAAI;AACFA;AACD,SAFD,CAEE,OAAOK,CAAP,EAAU;AACV;AACD;AACF,OAND;AAOD;;;;;kBAjCkBP,Y","file":"index.js","sourcesContent":["/**\n * @class Subscribable\n * @description Simple subscribable base class\n */\nexport default class Subscribable {\n  constructor() {\n    this._handlers = new Set();\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   * @return {Function} unsubscriber\n   */\n  subscribe(handler) {\n    this._handlers.add(handler);\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  unsubscribe(handler) {\n    this._handlers.delete(handler);\n  }\n  /**\n   * @function\n   */\n  trigger() {\n    [...this._handlers].forEach((handler) => {\n      try {\n        handler();\n      } catch (e) {\n        /* ignore error */\n      }\n    });\n  }\n}\n"]}