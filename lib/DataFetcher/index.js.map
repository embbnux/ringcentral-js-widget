{"version":3,"sources":["lib/DataFetcher/index.js"],"names":["DEFAULT_TTL","DEFAULT_RETRY","RETRY_INTERVALS","DataFetcher","deps","dep","optional","auth","client","storage","subscription","tabManager","timeToRetry","ttl","polling","disableCache","name","actionTypes","enumMap","baseActionTypes","prefix","getReducer","getDataFetcherReducer","getDataReducer","getDefaultDataReducer","getTimestampReducer","getDefaultTimestampReducer","fetchFunction","forbiddenHandler","subscriptionFilters","subscriptionHandler","readyCheckFn","cleanOnReset","options","Error","_auth","ensureExist","_client","_storage","_subscription","_tabManager","_ttl","_timeToRetry","_polling","_fetchFunction","_forbiddenHandler","_subscriptionFilters","_subscriptionHandler","_readyCheckFn","_cleanOnReset","_storageKey","_reducer","registerReducer","key","reducer","data","timestamp","_promise","_lastMessage","store","subscribe","_onStateChange","_shouldInit","dispatch","type","init","_hasPermission","_init","initSuccess","hasPermission","_isDataReady","_shouldReset","_clearTimeout","resetSuccess","_shouldSubscribe","_processSubscription","loggedIn","ready","pending","message","active","isFreshLogin","Date","now","status","moduleStatuses","initializing","_shouldFetch","fetchData","console","error","_retry","_startPolling","apiResponse","_response","result","fetch","ownerId","_fetchWithForbiddenCheck","fetchSuccess","fetchError","_fetchData","t","_timeoutId","setTimeout","retry","getItem","state","retryCount","Pollable","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import { combineReducers } from 'redux';\nimport Pollable from '../Pollable';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport getDataFetcherReducer, {\n  getDefaultDataReducer,\n  getDefaultTimestampReducer,\n} from './getDataFetcherReducer';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport proxify from '../proxy/proxify';\nimport ensureExist from '../ensureExist';\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_RETRY = 62 * 1000;\n\nconst RETRY_INTERVALS = [\n  2 * 1000,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n];\n\n@Library({\n  deps: [\n    'Auth',\n    'Client',\n    'Subscription',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Storage', optional: true },\n    { dep: 'DataFetcherOptions', optional: true }\n  ]\n})\nexport default class DataFetcher extends Pollable {\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    tabManager,\n    timeToRetry = DEFAULT_RETRY,\n    ttl = DEFAULT_TTL,\n    polling = false,\n    disableCache = false,\n    name,\n    actionTypes = prefixEnum({ enumMap: baseActionTypes, prefix: name }),\n    getReducer = getDataFetcherReducer,\n    getDataReducer = getDefaultDataReducer,\n    getTimestampReducer = getDefaultTimestampReducer,\n    fetchFunction,\n    forbiddenHandler,\n    subscriptionFilters,\n    subscriptionHandler,\n    readyCheckFn,\n    cleanOnReset = false,\n    ...options\n  }) {\n    if (!name) {\n      throw new Error('name must be defined');\n    }\n    if (typeof fetchFunction !== 'function') {\n      throw new Error('fetchFunction must be a asynchronous function');\n    }\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = this:: ensureExist(auth, 'auth');\n    this._client = this:: ensureExist(client, 'client');\n    if (!disableCache) {\n      this._storage = storage;\n    }\n    this._subscription = subscription;\n    this._tabManager = tabManager;\n    this._ttl = ttl;\n    this._timeToRetry = timeToRetry;\n    this._polling = polling;\n    this._fetchFunction = fetchFunction;\n    this._forbiddenHandler = forbiddenHandler;\n    this._subscriptionFilters = subscriptionFilters;\n    this._subscriptionHandler = subscriptionHandler;\n    this._readyCheckFn = readyCheckFn;\n    this._cleanOnReset = cleanOnReset;\n\n    this._storageKey = `${name}-data`; // differentiate from old key\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: combineReducers({\n          data: getDataReducer(this.actionTypes),\n          timestamp: getTimestampReducer(this.actionTypes),\n        }),\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        timestamp: getTimestampReducer(this.actionTypes),\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this._promise = null;\n    this._lastMessage = null;\n  }\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this._hasPermission) {\n        await this._init();\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          hasPermission: false\n        });\n      }\n    } else if (this._isDataReady()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n        hasPermission: this._hasPermission\n      });\n    } else if (this._shouldReset()) {\n      this._clearTimeout();\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n        cleanOnReset: this._cleanOnReset,\n      });\n    } else if (this._shouldSubscribe()) {\n      this._processSubscription();\n    }\n  }\n  _shouldInit() {\n    return !!(\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._readyCheckFn || this._readyCheckFn()) &&\n      (!this._subscription || this._subscription.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n  _shouldReset() {\n    return !!(\n      (\n        !this._auth.loggedIn ||\n        (this._storage && !this._storage.ready) ||\n        (this._readyCheckFn && !this._readyCheckFn()) ||\n        (this._subscription && !this._subscription.ready) ||\n        (this._tabManager && !this._tabManager.ready)\n      ) &&\n      !this.pending\n    );\n  }\n  _shouldSubscribe() {\n    return !!(\n      this.ready &&\n      this._subscription &&\n      this._subscription.ready &&\n      this._subscriptionHandler &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    );\n  }\n  _shouldFetch() {\n    return (\n      (!this._tabManager || this._tabManager.active) &&\n      (\n        this._auth.isFreshLogin ||\n        !this.timestamp ||\n        Date.now() - this.timestamp > this.ttl\n      )\n    );\n  }\n  _isDataReady() {\n    // only turns ready when data has been fetched\n    // (could be from other tabs)\n    return this.status === moduleStatuses.initializing &&\n      this.data !== null;\n  }\n  async _init() {\n    if (this._shouldFetch()) {\n      try {\n        await this.fetchData();\n      } catch (e) {\n        console.error('fetchData error:', e);\n        this._retry();\n      }\n    } else if (this._polling) {\n      this._startPolling();\n    } else {\n      this._retry();\n    }\n    if (this._subscription && this._subscriptionFilters) {\n      this._subscription.subscribe(this._subscriptionFilters);\n    }\n  }\n  _processSubscription() {\n    this._lastMessage = this._subscription.message;\n    this._subscriptionHandler(this._lastMessage);\n  }\n  get data() {\n    if (this._storage) {\n      return (\n        this._storage.getItem(this._storageKey) &&\n        this._storage.getItem(this._storageKey).data\n      ) || null;\n    }\n    return this.state.data;\n  }\n\n  get timestamp() {\n    if (this._storage) {\n      return (\n        this._storage.getItem(this._storageKey) &&\n        this._storage.getItem(this._storageKey).timestamp\n      ) || null;\n    }\n    return this.state.timestamp;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ttl() {\n    return this._ttl;\n  }\n\n  get retryCount() {\n    return this.state.retryCount;\n  }\n\n  get timeToRetry() {\n    if (this.status === moduleStatuses.initializing) {\n      return RETRY_INTERVALS[this.retryCount] || this._timeToRetry;\n    }\n    return this._timeToRetry;\n  }\n\n  get _hasPermission() {\n    return true;\n  }\n\n  // handle 403 Forbidden error\n  async _fetchWithForbiddenCheck() {\n    try {\n      const data = await this._fetchFunction();\n      return data;\n    } catch (error) {\n      if (\n        error &&\n        error.apiResponse &&\n        error.apiResponse._response &&\n        error.apiResponse._response.status === 403 &&\n        typeof this._forbiddenHandler === 'function'\n      ) {\n        const result = await this._forbiddenHandler(error);\n        return result;\n      }\n      throw error;\n    }\n  }\n\n  @proxify\n  async _fetchData() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    const { ownerId } = this._auth;\n    try {\n      const data = await this._fetchWithForbiddenCheck();\n      if (this._auth.ownerId === ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          data,\n          timestamp: Date.now(),\n        });\n        if (this._polling) {\n          this._startPolling();\n        }\n        this._promise = null;\n      }\n    } catch (error) {\n      if (this._auth.ownerId === ownerId) {\n        this._promise = null;\n        this.store.dispatch({\n          type: this.actionTypes.fetchError,\n          error,\n        });\n        if (this._polling) {\n          this._startPolling(this.timeToRetry);\n        } else {\n          this._retry();\n        }\n        throw error;\n      }\n    }\n  }\n  @proxify\n  async fetchData() {\n    if (!this._promise) {\n      this._promise = this._fetchData();\n    }\n    return this._promise;\n  }\n\n  _retry(t = this.timeToRetry) {\n    this._clearTimeout();\n    this._timeoutId = setTimeout(() => {\n      if (this.status === moduleStatuses.initializing) {\n        this.store.dispatch({\n          type: this.actionTypes.retry,\n        });\n      }\n      this._timeoutId = null;\n      if (!this.timestamp || Date.now() - this.timestamp > this.ttl) {\n        if (!this._tabManager || this._tabManager.active) {\n          this.fetchData();\n        } else {\n          // continue retry checks in case tab becomes main tab\n          this._retry();\n        }\n      }\n    }, t);\n  }\n}\n"]}