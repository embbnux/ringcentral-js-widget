{"version":3,"sources":["lib/formatDuration/index.js"],"names":["formatDuration","duration","intDuration","Math","round","parseInt","seconds","minutes","floor","hours"],"mappings":";;;;;;;;;;kBAEwBA,c;;AAFxB;;;;;;AAEe,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAC/C,MAAI,qBAAaA,QAAb,CAAJ,EAA4B;AAC1B,WAAO,OAAP;AACD;AACD,MAAMC,cAAc,OAAOD,QAAP,KAAoB,QAApB,GAClBE,KAAKC,KAAL,CAAWH,QAAX,CADkB,GAElBI,SAASJ,QAAT,EAAmB,EAAnB,CAFF;;AAIA,MAAMK,UAAU,uBAAQJ,cAAc,EAAtB,EAA0B,GAA1B,EAA+B,CAA/B,CAAhB;AACA,MAAMK,UAAU,uBAAQJ,KAAKK,KAAL,CAAWN,cAAc,EAAzB,IAA+B,EAAvC,EAA2C,GAA3C,EAAgD,CAAhD,CAAhB;AACA,MAAMO,QAAQN,KAAKK,KAAL,CAAWN,cAAc,IAAzB,IAAiC,EAA/C;;AAEA,eAAUO,QAAQ,CAAR,GAAgB,uBAAQA,KAAR,EAAe,GAAf,EAAoB,CAApB,CAAhB,SAA6C,EAAvD,IAA4DF,OAA5D,SAAuED,OAAvE;AACD","file":"index.js","sourcesContent":["import padLeft from 'ringcentral-integration/lib/padLeft';\n\nexport default function formatDuration(duration) {\n  if (Number.isNaN(duration)) {\n    return '--:--';\n  }\n  const intDuration = typeof duration === 'number' ?\n    Math.round(duration) :\n    parseInt(duration, 10);\n\n  const seconds = padLeft(intDuration % 60, '0', 2);\n  const minutes = padLeft(Math.floor(intDuration / 60) % 60, '0', 2);\n  const hours = Math.floor(intDuration / 3600) % 24;\n\n  return `${hours > 0 ? (`${padLeft(hours, '0', 2)}:`) : ''}${minutes}:${seconds}`;\n}\n"]}