{"version":3,"sources":["lib/Tabbie.js"],"names":["HEART_BEAT_INTERVAL","HEART_BEAT_EXPIRE","GC_INTERVAL","FIGHT_TIMEOUT","Tabbie","prefix","heartBeatInterval","heartBeatExpire","gcInterval","fightTimeout","_heartBeat","localStorage","setItem","_heartBeatKey","Date","now","_gc","expiredCut","_heartBeatExpire","_getHeartBeatKeys","forEach","key","getItem","removeItem","replace","_heartBeatRegExp","getMainTabId","_fightForMainTab","_setAsVisibleTab","currentMainTabId","_mainTabKey","document","hidden","id","_setAsMainTab","_prefix","_enabled","window","visibilityState","_id","uuid","v4","RegExp","_eventRegExp","_heartBeatInterval","_gcInterval","_fightTimeout","enabled","_heartBeatIntervalId","setInterval","_gcIntervalId","addEventListener","e","emit","test","newValue","payload","JSON","parse","event","args","clearInterval","length","keys","i","add","originalMainTabId","mainTabId","resolve","once","prototype"],"mappings":"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","file":"Tabbie.js","sourcesContent":["import uuid from 'uuid';\nimport emitter from 'event-emitter';\nimport sleep from './sleep';\n\nconst HEART_BEAT_INTERVAL = 1000;\n// heatbeat older than HEART_BEAT_EXPIRE will be gc'ed\n// chrome and firefox throttles intervals when inactive expire time of 2000\n// sometimes would kill live heartbeats and cause the mainTabId to change\nconst HEART_BEAT_EXPIRE = 3000;\nconst GC_INTERVAL = 5000;\n\nconst FIGHT_TIMEOUT = 20;\n\n/**\n * @class\n * @description The base active tab and cross tab event handling class.\n */\nexport default class Tabbie {\n  constructor({\n    prefix = '',\n    heartBeatInterval = HEART_BEAT_INTERVAL,\n    heartBeatExpire = HEART_BEAT_EXPIRE,\n    gcInterval = GC_INTERVAL,\n    fightTimeout = FIGHT_TIMEOUT,\n  }) {\n    this._prefix = (prefix && prefix !== '') ? `${prefix}-` : '';\n    this._enabled = typeof window !== 'undefined' &&\n      typeof document.visibilityState !== 'undefined' &&\n      typeof localStorage !== 'undefined';\n    this._id = uuid.v4();\n    this._heartBeatKey = `${this.prefix}tabbie-heartBeat-${this.id}`;\n    this._heartBeatRegExp = new RegExp(`^${this.prefix}tabbie-heartBeat-`);\n    this._mainTabKey = `${this.prefix}tabbie-mainTab-id`;\n    this._eventRegExp = new RegExp(`^${this.prefix}tabbie-event-`);\n    this._heartBeatExpire = heartBeatExpire;\n    this._heartBeatInterval = heartBeatInterval;\n    this._gcInterval = gcInterval;\n    this._fightTimeout = fightTimeout;\n\n    if (this.enabled) {\n      this._heartBeatIntervalId = setInterval(this._heartBeat, heartBeatInterval);\n      this._heartBeat();\n\n      this._gcIntervalId = setInterval(this._gc, gcInterval);\n\n      document.addEventListener('visibilitychange', this._setAsVisibleTab);\n\n      window.addEventListener('focus', this._setAsVisibleTab);\n\n      window.addEventListener('storage', async (e) => {\n        if (e.key === this._mainTabKey) {\n          // use the newest main tab id from localhost instead of from the event\n          // to avoid race conditions\n          this.emit('mainTabIdChanged', await this.getMainTabId());\n        } else if (\n          this._heartBeatRegExp.test(e.key) &&\n          (!e.newValue || e.newValue === '')\n        ) {\n          if (e.key.replace(this._heartBeatRegExp, '') === await this.getMainTabId()) {\n            // main tab closed itself, fight to be the main tab\n            // or someone gc'ed the main tab\n            localStorage.removeItem(this._mainTabKey);\n            await this._fightForMainTab();\n          }\n        } else if (\n          this._eventRegExp.test(e.key) &&\n          e.newValue && e.newValue !== ''\n        ) {\n          const payload = JSON.parse(e.newValue);\n          const [id, event, ...args] = payload;\n          if (id !== this.id) { // ie fires storage event on original\n            this.emit('event', event, ...args);\n          }\n        }\n      });\n      window.addEventListener('unload', () => {\n        clearInterval(this._gcIntervalId);\n        clearInterval(this._heartBeatIntervalId);\n        if (localStorage.getItem(this._mainTabKey) === this.id) {\n          localStorage.removeItem(this._mainTabKey);\n        }\n        localStorage.removeItem(this._heartBeatKey);\n      });\n      if (!document.hidden) {\n        this._setAsMainTab();\n      } else if (!localStorage.getItem(this._mainTabKey)) {\n        this._fightForMainTab();\n      }\n    }\n  }\n  _heartBeat = () => {\n    localStorage.setItem(this._heartBeatKey, Date.now());\n  }\n  _gc = () => {\n    const expiredCut = Date.now() - this._heartBeatExpire;\n    this._getHeartBeatKeys().forEach(async (key) => {\n      if (localStorage.getItem(key) < expiredCut) {\n        localStorage.removeItem(key);\n        if (key.replace(this._heartBeatRegExp, '') === await this.getMainTabId()) {\n          // the tab that gc's the main tab will not receive the storage event\n          this._fightForMainTab();\n        }\n      }\n    });\n  }\n  _getHeartBeatKeys() {\n    const { length } = localStorage;\n    const keys = new Set();\n    for (let i = 0; i < length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && this._heartBeatRegExp.test(key)) keys.add(key);\n    }\n    return [...keys];\n  }\n  _setAsMainTab() {\n    localStorage.setItem(this._mainTabKey, this.id);\n    this.emit('mainTabIdChanged', this.id);\n  }\n\n  _setAsVisibleTab = () => {\n    // avoid setting mainTabId repeatedly which may result in forced rendering\n    const currentMainTabId = localStorage.getItem(this._mainTabKey);\n    if (!document.hidden && currentMainTabId !== this.id) this._setAsMainTab();\n  }\n\n  async _fightForMainTab() {\n    const originalMainTabId = localStorage.getItem(this._mainTabKey);\n    // if a tab becomes visible during the delay, it can just assume the main tab role\n    await sleep(this._fightTimeout);\n    if (localStorage.getItem(this._mainTabKey) === originalMainTabId) {\n      this._setAsMainTab();\n    }\n  }\n\n  /**\n   * @function\n   * @return {Promise} - Resolves to current main tab id\n   */\n  async getMainTabId() {\n    const mainTabId = localStorage.getItem(this._mainTabKey);\n    if (mainTabId) return mainTabId;\n\n    return new Promise((resolve) => {\n      this.once('mainTabIdChanged', resolve);\n    });\n  }\n\n  async checkIsMain() {\n    // assume main if not enabled\n    // this is to ensure that modules depending on this would function\n    // in node like environments\n    return !this.enabled || (await this.getMainTabId() === this.id);\n  }\n\n  get id() {\n    return this._id;\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  get prefix() {\n    return this._prefix;\n  }\n\n  send(event, ...args) {\n    if (this.enabled) {\n      const id = uuid.v4();\n      const key = `${this.prefix}tabbie-event-${id}`;\n      const payload = [this.id, event, ...args];\n      localStorage.setItem(key, JSON.stringify(payload));\n      localStorage.removeItem(key);\n    }\n  }\n}\nemitter(Tabbie.prototype);\n"]}