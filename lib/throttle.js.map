{"version":3,"sources":["lib/throttle.js"],"names":["throttle","func","threshold","Error","timer","firstTime","throttled","args","context","apply","setTimeout","clearTimeout"],"mappings":";;;;;kBASwBA,Q;AATxB;;;;;;;;;AASe,SAASA,QAAT,CAAkBC,IAAlB,EAAyC;AAAA,MAAjBC,SAAiB,uEAAL,GAAK;;AACtD,MAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIE,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,MAAIC,QAAQ,IAAZ;AACA,MAAIC,YAAY,IAAhB;;AAEA,SAAO,SAASC,SAAT,GAA4B;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACjC,QAAMC,UAAU,IAAhB;;AAEA;AACA,QAAIH,SAAJ,EAAe;AACbJ,WAAKQ,KAAL,CAAWD,OAAX,EAAoBD,IAApB;AACAF,kBAAY,KAAZ;AACA;AACD;;AAED,QAAID,KAAJ,EAAW;AACT;AACD;;AAEDA,YAAQM,WAAW,YAAM;AACvBC,mBAAaP,KAAb;AACAA,cAAQ,IAAR;AACAH,WAAKQ,KAAL,CAAWD,OAAX,EAAoBD,IAApB;AACD,KAJO,EAILL,SAJK,CAAR;AAKD,GAnBD;AAoBD","file":"throttle.js","sourcesContent":["/**\n * Throttle the execution of the function,\n * if the frequently invoked function is being throttled,\n * then the function will only be called at threshold time.\n *\n * @param {Function} func - the target function\n * @param {Number} threshold - execution threshold\n * @return {Function}\n */\nexport default function throttle(func, threshold = 500) {\n  if (typeof func !== 'function') {\n    throw new Error('First argument of throttle function should be a function');\n  }\n\n  let timer = null;\n  let firstTime = true;\n\n  return function throttled(...args) {\n    const context = this;\n\n    // It will be triggered at first time\n    if (firstTime) {\n      func.apply(context, args);\n      firstTime = false;\n      return;\n    }\n\n    if (timer) {\n      return;\n    }\n\n    timer = setTimeout(() => {\n      clearTimeout(timer);\n      timer = null;\n      func.apply(context, args);\n    }, threshold);\n  };\n}\n"]}