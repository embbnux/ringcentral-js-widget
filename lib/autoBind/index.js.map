{"version":3,"sources":["lib/autoBind/index.js"],"names":["autoBind","bindFunctionTo","prototype","property","descriptor","value","_autoBind","self","proto","Object","forEach","key"],"mappings":";;;;;;;;;;;;;;kBAAwBA,Q;QAKRC,c,GAAAA,c;;;;AALD,SAASD,QAAT,CAAkBE,SAAlB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmD;AAChEA,aAAWC,KAAX,CAAiBC,SAAjB,GAA6B,IAA7B;AACA,SAAOF,UAAP;AACD;;AAEM,SAASH,cAAT,CAAwBM,IAAxB,EAA8B;AACnC,MAAIC,QAAQ,8BAAsBD,IAAtB,CAAZ;;AAEA,SAAOC,UAAUC,OAAOP,SAAxB,EAAmC;AACjC,uCAA2BM,KAA3B,EAAkCE,OAAlC,CAA0C,UAACC,GAAD,EAAS;AACjD,UACE,OAAOJ,KAAKI,GAAL,CAAP,KAAqB,UAArB,IACAJ,KAAKI,GAAL,EAAUL,SAFZ,EAGE;AACAC,aAAKI,GAAL,IAAkBJ,KAAKI,GAAL,CAAlB,MAAYJ,IAAZ;AACD;AACF,KAPD;AAQAC,YAAQ,8BAAsBA,KAAtB,CAAR;AACD;AACF","file":"index.js","sourcesContent":["export default function autoBind(prototype, property, descriptor) {\n  descriptor.value._autoBind = true;\n  return descriptor;\n}\n\nexport function bindFunctionTo(self) {\n  let proto = Object.getPrototypeOf(self);\n\n  while (proto !== Object.prototype) {\n    Object.getOwnPropertyNames(proto).forEach((key) => {\n      if (\n        typeof self[key] === 'function' &&\n        self[key]._autoBind\n      ) {\n        self[key] = self::self[key];\n      }\n    });\n    proto = Object.getPrototypeOf(proto);\n  }\n}\n"]}