{"version":3,"sources":["modules/ConnectivityMonitor/getConnectivityMonitorReducer.js"],"names":["getConnectivityReducer","getConnectivityMonitorReducer","types","state","type","connectFail","connectSuccess","status","connectivity"],"mappings":";;;;;QAIgBA,sB,GAAAA,sB;kBAaQC,6B;;AAjBxB;;AACA;;;;;;AAGO,SAASD,sBAAT,CAAgCE,KAAhC,EAAuC;AAC5C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,MAAMG,WAAX;AACE,eAAO,KAAP;AACF,WAAKH,MAAMI,cAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOH,KAAP;AANJ;AAQD,GATD;AAUD;;AAEc,SAASF,6BAAT,CAAuCC,KAAvC,EAA8C;AAC3D,SAAO,4BAAgB;AACrBK,YAAQ,sCAAuBL,KAAvB,CADa;AAErBM,kBAAcR,uBAAuBE,KAAvB;AAFO,GAAhB,CAAP;AAID","file":"getConnectivityMonitorReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\n\nexport function getConnectivityReducer(types) {\n  return (state = true, { type }) => {\n    switch (type) {\n      case types.connectFail:\n        return false;\n      case types.connectSuccess:\n        return true;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getConnectivityMonitorReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    connectivity: getConnectivityReducer(types),\n  });\n}\n"]}