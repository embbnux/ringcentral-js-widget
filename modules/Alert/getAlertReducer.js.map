{"version":3,"sources":["modules/Alert/getAlertReducer.js"],"names":["getMessagesReducer","getAlertReducer","types","state","type","message","payload","ttl","level","ids","timestamp","id","allowDuplicates","alert","find","item","dismiss","filter","indexOf","dismissAll","messages"],"mappings":";;;;;;;;;;QAGgBA,kB,GAAAA,kB;kBAsCQC,e;;AAzCxB;;AACA;;;;AAEO,SAASD,kBAAT,CAA4BE,KAA5B,EAAmC;AACxC,SAAO,YAUD;AAAA,QAVEC,KAUF,uEAVU,EAUV;AAAA;AAAA,QATJC,IASI,QATJA,IASI;AAAA,QARJC,OAQI,QARJA,OAQI;AAAA,QAPJC,OAOI,QAPJA,OAOI;AAAA,QANJC,GAMI,QANJA,GAMI;AAAA,QALJC,KAKI,QALJA,KAKI;AAAA,QAJJC,GAII,QAJJA,GAII;AAAA,QAHJC,SAGI,QAHJA,SAGI;AAAA,QAFJC,EAEI,QAFJA,EAEI;AAAA,QADJC,eACI,QADJA,eACI;;AACJ,YAAQR,IAAR;AACE,WAAKF,MAAMW,KAAX;AACE,YAAI,CAACD,eAAD,IAAoBT,MAAMW,IAAN,CAAW;AAAA,iBAAQC,KAAKV,OAAL,KAAiBA,OAAzB;AAAA,SAAX,CAAxB,EAAsE;AACpE,iBAAOF,KAAP;AACD;AACD,0DACKA,KADL,IAEE;AACEQ,gBADF;AAEEN,0BAFF;AAGEC,0BAHF;AAIEC,kBAJF;AAKEC,sBALF;AAMEE;AANF,SAFF;AAWF,WAAKR,MAAMc,OAAX;AACE,eAAOb,MAAMc,MAAN,CAAa;AAAA,iBAAQR,IAAIS,OAAJ,CAAYH,KAAKJ,EAAjB,MAAyB,CAAC,CAAlC;AAAA,SAAb,CAAP;AACF,WAAKT,MAAMiB,UAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOhB,KAAP;AArBJ;AAuBD,GAlCD;AAmCD;;AAEc,SAASF,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,SAAO,4BAAgB;AACrBkB,cAAUpB,mBAAmBE,KAAnB;AADW,GAAhB,CAAP;AAGD","file":"getAlertReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport 'core-js/fn/array/find';\n\nexport function getMessagesReducer(types) {\n  return (state = [], {\n    type,\n    message,\n    payload,\n    ttl,\n    level,\n    ids,\n    timestamp,\n    id,\n    allowDuplicates,\n  }) => {\n    switch (type) {\n      case types.alert:\n        if (!allowDuplicates && state.find(item => item.message === message)) {\n          return state;\n        }\n        return [\n          ...state,\n          {\n            id,\n            message,\n            payload,\n            ttl,\n            level,\n            timestamp,\n          },\n        ];\n      case types.dismiss:\n        return state.filter(item => ids.indexOf(item.id) === -1);\n      case types.dismissAll:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAlertReducer(types) {\n  return combineReducers({\n    messages: getMessagesReducer(types),\n  });\n}\n\n"]}