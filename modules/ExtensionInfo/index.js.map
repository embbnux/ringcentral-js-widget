{"version":3,"sources":["modules/ExtensionInfo/index.js"],"names":["DEFAULT_MASK","join","DEFAULT_COUNTRY","id","isoCode","callingCode","extensionRegExp","extractData","info","serviceFeatures","forEach","f","featureName","enabled","reason","output","DEFAULT_TTL","DEFAULT_TIME_TO_RETRY","ExtensionInfo","deps","dep","optional","client","ttl","timeToRetry","polling","alert","options","name","subscriptionFilters","extensionInfo","subscriptionHandler","message","_subscriptionHandleFn","cleanOnReset","fetchFunction","_client","account","extension","get","forbiddenHandler","_auth","logout","_alert","danger","permissionsMessages","insufficientPrivilege","addSelector","data","_selectors","body","test","event","fetchData","extensionNumber","regionalSettings","homeCountry","departments","Array","isArray","length","DataFetcher"],"mappings":"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","file":"index.js","sourcesContent":["import mask from 'json-mask';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport permissionsMessages from '../RolesAndPermissions/permissionsMessages';\n\nconst DEFAULT_MASK = [\n  'id',\n  'extensionNumber',\n  'contact(*)',\n  'name',\n  'type',\n  'status',\n  'permissions',\n  'profileImage',\n  'departments',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id,isoCode,callingCode)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\nconst DEFAULT_COUNTRY = {\n  id: '1',\n  isoCode: 'US',\n  callingCode: '1',\n};\n\nconst extensionRegExp = /.*\\/extension\\/\\d+$/;\n\nfunction extractData(info) {\n  const serviceFeatures = {};\n  info.serviceFeatures.forEach((f) => {\n    serviceFeatures[f.featureName] = {\n      enabled: f.enabled,\n    };\n    if (!f.enabled) {\n      serviceFeatures[f.featureName].reason = f.reason;\n    }\n  });\n  const output = mask(info, DEFAULT_MASK);\n  output.serviceFeatures = serviceFeatures;\n  return output;\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000; // half hour update\nconst DEFAULT_TIME_TO_RETRY = 62 * 1000;\n\n/**\n * @class\n * @description Extension info module\n */\n@Module({\n  deps: [\n    'Client',\n    { dep: 'Alert', optional: true },\n    { dep: 'ExtensionInfoOptions', optional: true }\n  ]\n})\nexport default class ExtensionInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    ttl = DEFAULT_TTL,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    polling = true,\n    alert,\n    ...options\n  }) {\n    super({\n      name: 'extensionInfo',\n      client,\n      ttl,\n      polling,\n      timeToRetry,\n      subscriptionFilters: [subscriptionFilters.extensionInfo],\n      subscriptionHandler: async (message) => {\n        await this._subscriptionHandleFn(message);\n      },\n      cleanOnReset: true,\n      fetchFunction: async () => extractData(await this._client.account().extension().get()),\n      forbiddenHandler: async () => {\n        await this._auth.logout();\n        if (this._alert) {\n          this._alert.danger({\n            message: permissionsMessages.insufficientPrivilege,\n            ttl: 0,\n          });\n        }\n        return {};\n      },\n      ...options\n    });\n\n    this._alert = alert;\n\n    this.addSelector('info',\n      () => this.data,\n      data => (data || {}),\n    );\n    this.addSelector('serviceFeatures',\n      this._selectors.info,\n      info => (info.serviceFeatures || {}),\n    );\n  }\n\n  async _subscriptionHandleFn(message) {\n    if (\n      message &&\n      message.body &&\n      extensionRegExp.test(message.event)\n    ) {\n      await this.fetchData();\n    }\n  }\n\n\n  get info() {\n    return this._selectors.info();\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get extensionNumber() {\n    return this.info.extensionNumber;\n  }\n\n  get serviceFeatures() {\n    return this._selectors.serviceFeatures();\n  }\n\n  get country() {\n    return (this.info.regionalSettings && this.info.regionalSettings.homeCountry) ||\n      DEFAULT_COUNTRY;\n  }\n\n  get departments() {\n    return this.info.departments;\n  }\n\n  get isCallQueueMember() {\n    return !!this.departments && Array.isArray(this.departments) && this.departments.length > 0;\n  }\n}\n"]}