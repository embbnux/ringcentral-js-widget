{"version":3,"sources":["modules/Analytics/index.js"],"names":["INIT_TRACK_LIST","Analytics","deps","dep","optional","analyticsKey","appName","appVersion","brandCode","auth","call","webphone","contacts","messageSender","adapter","routerInteraction","messageStore","contactDetails","callHistory","conference","userGuide","callMonitor","conferenceCall","options","actionTypes","_analyticsKey","_appName","_appVersion","_brandCode","_auth","_call","_webphone","_contacts","_messageSender","_adapter","_router","_messageStore","_contactDetails","_callHistory","_conference","_userGuide","_callMonitor","_conferenceCall","_reducer","_segment","_trackList","store","subscribe","_onStateChange","load","userId","name","global","analytics","identify","event","properties","trackProps","brand","track","router","eventPostfix","ready","lastActions","length","_promise","_processActions","forEach","action","key","dispatch","type","clear","methodNames","push","loginSuccess","ownerId","logout","connect","callSettingMode","callingModes","connectSuccess","registered","send","sendOver","createCallLog","createSMSLog","clickToDial","clickToSMS","viewEntity","createEntity","editCallLog","editSMSLog","locationChange","path","payload","pathname","target","_getTrackTarget","trackNavigation","callAnswer","isOnTransfer","updateSessions","clickToCall","fromType","removeMessage","markMessages","inviteWithText","updateAdditionalNumbers","joinAsHost","updateCarousel","curIdx","playing","allCallsClickHoldTrack","allCallsClickHangupTrack","callItemClickTrack","callControlClickAddTrack","callControlClickMergeTrack","state","mergingPair","mergeControlClickHangupTrack","callsOnHoldClickAddTrack","callsOnHoldClickMergeTrack","confirmMergeClickCloseTrack","confirmMergeClickMergeTrack","removeParticipantClickRemoveTrack","removeParticipantClickCancelTrack","participantListClickHangupTrack","callControlClickParticipantAreaClickTrack","callsOnHoldClickHangupTrack","routes","split","formatRoute","needMatchSecondRoutes","indexOf","targets","find","undefined","lastAction","moduleStatuses","RcModule"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getAnalyticsReducer from './getAnalyticsReducer';\n\nimport { Segment } from '../../lib/Analytics';\nimport callingModes from '../CallingSettings/callingModes';\n\nconst INIT_TRACK_LIST = [\n  '_authentication',\n  '_logout',\n  '_callAttempt',\n  '_callConnected',\n  '_webRTCRegistration',\n  '_smsAttempt',\n  '_smsSent',\n  '_logCall',\n  '_logSMS',\n  '_clickToDial',\n  '_clickToSMS',\n  '_viewEntity',\n  '_createEntity',\n  '_editCallLog',\n  '_editSMSLog',\n  '_navigate',\n  '_inboundCall',\n  '_coldTransfer',\n  '_textClickToDial',\n  '_voicemailClickToDial',\n  '_voicemailClickToSMS',\n  '_voicemailDelete',\n  '_voicemailFlag',\n  '_contactDetailClickToDial',\n  '_contactDetailClickToSMS',\n  '_callHistoryClickToDial',\n  '_callHistoryClickToSMS',\n  '_conferenceInviteWithText',\n  '_conferenceAddDialInNumber',\n  '_conferenceJoinAsHost',\n  '_showWhatsNew',\n  '_allCallsClickHangup',\n  '_allCallsClickHold',\n  '_allCallsCallItemClick',\n  '_callControlClickAdd',\n  '_mergeCallControlClickMerge',\n  '_mergeCallControlClickHangup',\n  '_callsOnHoldClickHangup',\n  '_callsOnHoldClickAdd',\n  '_callsOnHoldClickMerge',\n  '_confirmMergeClickClose',\n  '_confirmMergeClickMerge',\n  '_removeParticipantClickRemove',\n  '_removeParticipantClickCancel',\n  '_participantListClickHangup',\n  '_callControlClickMerge',\n  '_callControlClickParticipantArea',\n];\n\n/**\n * @class\n * @description Analytics module.\n */\n@Module({\n  deps: [\n    { dep: 'Auth', optional: true },\n    { dep: 'Call', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'Contacts', optional: true },\n    { dep: 'MessageSender', optional: true },\n    { dep: 'MessageStore', optional: true },\n    { dep: 'ContactDetails', optional: true },\n    { dep: 'CallHistory', optional: true },\n    { dep: 'Conference', optional: true },\n    { dep: 'RouterInteraction', optional: true },\n    { dep: 'AnalyticsAdapter', optional: true },\n    { dep: 'AnalyticsOptions', optional: true },\n    { dep: 'UserGuide', optional: true },\n    { dep: 'CallMonitor', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n  ]\n})\nexport default class Analytics extends RcModule {\n  constructor({\n    // config\n    analyticsKey,\n    appName,\n    appVersion,\n    brandCode,\n    // modules\n    auth,\n    call,\n    webphone,\n    contacts,\n    messageSender,\n    adapter,\n    routerInteraction,\n    messageStore,\n    contactDetails,\n    callHistory,\n    conference,\n    userGuide,\n    callMonitor,\n    conferenceCall,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes\n    });\n    // config\n    this._analyticsKey = analyticsKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._brandCode = brandCode;\n    // modules\n    this._auth = auth;\n    this._call = call;\n    this._webphone = webphone;\n    this._contacts = contacts;\n    this._messageSender = messageSender;\n    this._adapter = adapter;\n    this._router = routerInteraction;\n    this._messageStore = messageStore;\n    this._contactDetails = contactDetails;\n    this._callHistory = callHistory;\n    this._conference = conference;\n    this._userGuide = userGuide;\n    this._callMonitor = callMonitor;\n    this._conferenceCall = conferenceCall;\n    // init\n    this._reducer = getAnalyticsReducer(this.actionTypes);\n    this._segment = Segment();\n    this._trackList = INIT_TRACK_LIST;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    this._segment.load(this._analyticsKey);\n  }\n\n  identify({\n    userId,\n    name,\n  }) {\n    global.analytics.identify(userId, {\n      name\n    });\n  }\n\n  track(event, {\n    ...properties\n  }) {\n    const trackProps = {\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n      ...properties,\n    };\n    global.analytics.track(event, trackProps);\n  }\n\n  trackNavigation({ router, eventPostfix }) {\n    const trackProps = {\n      router,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      brand: this._brandCode,\n    };\n    this.track(`Navigator Clicked (${eventPostfix})`, trackProps);\n  }\n\n  async _onStateChange() {\n    if (this.ready && this.lastActions.length && !this._promise) {\n      this._promise = this._processActions();\n    }\n  }\n  async _processActions() {\n    if (this.lastActions.length) {\n      await sleep(300);\n      this.lastActions.forEach((action) => {\n        this._trackList.forEach((key) => {\n          this[key](action);\n        });\n      });\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.clear,\n      });\n    }\n  }\n\n  /**\n   * Append more action to track\n   * First, Inherit this class and declare channel specific method on it\n   * Then append more method name to track using this method\n   * @param {string[]} methodNames\n   */\n  appendTrackList(methodNames) {\n    this._trackList.push(...methodNames);\n  }\n\n  _authentication(action) {\n    if (this._auth && this._auth.actionTypes.loginSuccess === action.type) {\n      this.identify({\n        userId: this._auth.ownerId,\n      });\n      this.track('Authentication');\n    }\n  }\n\n  _logout(action) {\n    if (this._auth && this._auth.actionTypes.logout === action.type) {\n      this.track('Logout');\n    }\n  }\n\n  _callAttempt(action) {\n    if (this._call && this._call.actionTypes.connect === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Call Attempt WebRTC');\n      } else {\n        this.track('Call Attempt', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _callConnected(action) {\n    if (this._call && this._call.actionTypes.connectSuccess === action.type) {\n      if (action.callSettingMode === callingModes.webphone) {\n        this.track('Outbound WebRTC Call Connected');\n      } else {\n        this.track('Outbound Call Connected', {\n          callSettingMode: action.callSettingMode\n        });\n      }\n    }\n  }\n\n  _webRTCRegistration(action) {\n    if (this._webphone && this._webphone.actionTypes.registered === action.type) {\n      this.track('WebRTC registration');\n    }\n  }\n\n  _smsAttempt(action) {\n    if (this._messageSender && this._messageSender.actionTypes.send === action.type) {\n      this.track('SMS Attempt');\n    }\n  }\n\n  _smsSent(action) {\n    if (this._messageSender && this._messageSender.actionTypes.sendOver === action.type) {\n      this.track('SMS Sent');\n    }\n  }\n\n  _logCall(action) {\n    if (this._adapter && this._adapter.actionTypes.createCallLog === action.type) {\n      this.track('Log Call');\n    }\n  }\n\n  _logSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.createSMSLog === action.type) {\n      this.track('Log SMS');\n    }\n  }\n\n  _clickToDial(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToDial === action.type) {\n      this.track('Click To Dial');\n    }\n  }\n\n  _clickToSMS(action) {\n    if (this._adapter && this._adapter.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS');\n    }\n  }\n\n  _viewEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.viewEntity === action.type) {\n      this.track('View Entity Details');\n    }\n  }\n\n  _createEntity(action) {\n    if (this._adapter && this._adapter.actionTypes.createEntity === action.type) {\n      this.track('Add Entity');\n    }\n  }\n\n  _editCallLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editCallLog === action.type) {\n      this.track('Edit Call Log');\n    }\n  }\n\n  _editSMSLog(action) {\n    if (this._adapter && this._adapter.actionTypes.editSMSLog === action.type) {\n      this.track('Edit SMS Log');\n    }\n  }\n\n  _navigate(action) {\n    if (this._router && this._router.actionTypes.locationChange === action.type) {\n      const path = action.payload && action.payload.pathname;\n      const target = this._getTrackTarget(path);\n      if (target) {\n        this.trackNavigation({\n          ...target\n        });\n      }\n    }\n  }\n\n  _inboundCall(action) {\n    if (this._webphone && this._webphone.actionTypes.callAnswer === action.type) {\n      this.track('Inbound WebRTC Call Connected');\n    }\n  }\n\n  _coldTransfer(action) {\n    if (this._webphone\n      && this._webphone.isOnTransfer === true\n      && this._webphone.actionTypes.updateSessions === action.type\n    ) {\n      this.track('Cold Transfer Call');\n    }\n  }\n\n  _textClickToDial(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.clickToCall === action.type\n      && (action.fromType === 'Pager' || action.fromType === 'SMS')) {\n      this.track('Click To Dial (Text List)');\n    }\n  }\n\n  _voicemailClickToDial(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.clickToCall === action.type\n      && action.fromType === 'VoiceMail') {\n      this.track('Click To Dial (Voicemail List)');\n    }\n  }\n\n  _voicemailClickToSMS(action) {\n    if (this._messageStore && this._messageStore.actionTypes.clickToSMS === action.type) {\n      this.track('Click to SMS (Voicemail List)');\n    }\n  }\n\n  _voicemailDelete(action) {\n    if (this._messageStore && this._messageStore.actionTypes.removeMessage === action.type) {\n      this.track('Delete Voicemail');\n    }\n  }\n\n  _voicemailFlag(action) {\n    if (this._messageStore\n      && this._messageStore.actionTypes.markMessages === action.type) {\n      this.track('Flag Voicemail');\n    }\n  }\n\n  _contactDetailClickToDial(action) {\n    if (this._contactDetails\n      && this._contactDetails.actionTypes.clickToCall === action.type) {\n      this.track('Click To Dial (Contact Details)');\n    }\n  }\n\n  _contactDetailClickToSMS(action) {\n    if (this._contactDetails\n      && this._contactDetails.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS (Contact Details)');\n    }\n  }\n\n  _callHistoryClickToDial(action) {\n    if (this._callHistory\n      && this._callHistory.actionTypes.clickToCall === action.type) {\n      this.track('Click To dial (Call History)');\n    }\n  }\n\n  _callHistoryClickToSMS(action) {\n    if (this._callHistory\n      && this._callHistory.actionTypes.clickToSMS === action.type) {\n      this.track('Click To SMS (Call History)');\n    }\n  }\n\n\n  _conferenceInviteWithText(action) {\n    if (this._conference\n      && this._conference.actionTypes.inviteWithText === action.type) {\n      this.track('Invite With Text (Conference)');\n    }\n  }\n\n  _conferenceAddDialInNumber(action) {\n    if (this._conference\n      && this._conference.actionTypes.updateAdditionalNumbers === action.type) {\n      this.track('Select Additional Dial-in Number (Conference)');\n    }\n  }\n\n  _conferenceJoinAsHost(action) {\n    if (this._conference\n      && this._conference.actionTypes.joinAsHost === action.type) {\n      this.track('Join As Host (Conference)');\n    }\n  }\n\n  _showWhatsNew(action) {\n    if (this._userGuide\n      && this._userGuide.actionTypes.updateCarousel === action.type\n      && action.curIdx === 0\n      && action.playing) {\n      this.track('What\\'s New');\n    }\n  }\n\n  _allCallsClickHold(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.allCallsClickHoldTrack === action.type\n    ) {\n      this.track('Click Hold (All Calls)');\n    }\n  }\n\n  _allCallsClickHangup(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.allCallsClickHangupTrack === action.type\n    ) {\n      this.track('Click Hangup (All Calls)');\n    }\n  }\n\n  _allCallsCallItemClick(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callItemClickTrack === action.type\n    ) {\n      this.track('Click Call Item (All Calls)');\n    }\n  }\n  _callControlClickAdd(action) {\n    if (this._callMonitor\n     && this._callMonitor.actionTypes.callControlClickAddTrack === action.type\n    ) {\n      this.track('Click Add (Call Control)');\n    }\n  }\n\n  _callControlClickMerge(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callControlClickMergeTrack === action.type\n      && !Object.values(this._conferenceCall.state.mergingPair).length\n    ) {\n      this.track('Click Merge (Call Control)');\n    }\n  }\n\n  _mergeCallControlClickMerge(action) {\n    if (this._callMonitor\n     && this._callMonitor.actionTypes.callControlClickMergeTrack === action.type\n     && Object.values(this._conferenceCall.state.mergingPair).length\n    ) {\n      this.track('Click Merge (Merge Call Control)');\n    }\n  }\n\n  _mergeCallControlClickHangup(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.mergeControlClickHangupTrack === action.type\n    ) {\n      this.track('Click Hangup (Merge Call Control)');\n    }\n  }\n\n  _callsOnHoldClickAdd(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callsOnHoldClickAddTrack === action.type\n    ) {\n      this.track('Click Add (Calls OnHold)');\n    }\n  }\n\n  _callsOnHoldClickMerge(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callsOnHoldClickMergeTrack === action.type\n    ) {\n      this.track('Click Merge (Calls OnHold)');\n    }\n  }\n\n  _confirmMergeClickClose(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.confirmMergeClickCloseTrack === action.type\n    ) {\n      this.track('Click Close (ConfirmMerge Modal)');\n    }\n  }\n\n  _confirmMergeClickMerge(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.confirmMergeClickMergeTrack === action.type\n    ) {\n      this.track('Click Merge (ConfirmMerge Modal)');\n    }\n  }\n\n  _removeParticipantClickRemove(action) {\n    if (this._conferenceCall\n      && this._conferenceCall.actionTypes.removeParticipantClickRemoveTrack === action.type\n    ) {\n      this.track('Click Remove (RemoveParticipants Modal)');\n    }\n  }\n\n  _removeParticipantClickCancel(action) {\n    if (this._conferenceCall\n      && this._conferenceCall.actionTypes.removeParticipantClickCancelTrack === action.type\n    ) {\n      this.track('Cancel Remove (RemoveParticipants Modal)');\n    }\n  }\n\n  _participantListClickHangup(action) {\n    if (this._conferenceCall\n      && this._conferenceCall.actionTypes.participantListClickHangupTrack === action.type\n    ) {\n      this.track('Click Hangup (Participant List)');\n    }\n  }\n\n  _callControlClickParticipantArea(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callControlClickParticipantAreaClickTrack === action.type\n    ) {\n      this.track('Click Participant Area (Call Control)');\n    }\n  }\n  _callsOnHoldClickHangup(action) {\n    if (this._callMonitor\n      && this._callMonitor.actionTypes.callsOnHoldClickHangupTrack === action.type\n    ) {\n      this.track('Click Hangup (Calls OnHold)');\n    }\n  }\n\n  _getTrackTarget(path) {\n    if (path) {\n      const routes = path.split('/');\n      let formatRoute = null;\n      const needMatchSecondRoutes = ['calls'];\n      if (routes.length >= 3 && needMatchSecondRoutes.indexOf(routes[1]) !== -1) {\n        formatRoute = `/${routes[1]}/${routes[2]}`;\n      } else if (routes.length > 1) {\n        formatRoute = `/${routes[1]}`;\n      }\n\n      const targets = [{\n        eventPostfix: 'Dialer',\n        router: '/dialer',\n      }, {\n        eventPostfix: 'Compose SMS',\n        router: '/composeText',\n      }, {\n        eventPostfix: 'Messages',\n        router: '/messages',\n      }, {\n        eventPostfix: 'Conversation',\n        router: '/conversations',\n      }, {\n        eventPostfix: 'Call History',\n        router: '/history',\n      }, {\n        eventPostfix: 'Call List',\n        router: '/calls',\n      }, {\n        eventPostfix: 'Settings',\n        router: '/settings',\n      }, {\n        eventPostfix: 'Conference',\n        router: '/conference',\n      }, {\n        eventPostfix: 'Meeting',\n        router: '/meeting',\n      }, {\n        eventPostfix: 'Contacts',\n        router: '/contacts',\n      }, {\n        eventPostfix: 'Call Control',\n        router: '/calls/active'\n      }];\n      return targets.find(target => formatRoute === target.router);\n    }\n    return undefined;\n  }\n\n  get analytics() {\n    return global.analytics;\n  }\n\n  get lastActions() {\n    return this.state.lastAction;\n  }\n\n  get status() {\n    return moduleStatuses.ready;\n  }\n\n  get ready() {\n    return true;\n  }\n\n  get pending() {\n    return false;\n  }\n}\n"]}