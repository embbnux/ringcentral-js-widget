{"version":3,"sources":["modules/Analytics/getAnalyticsReducer.js"],"names":["getLastAction","getAnalyticsReducer","types","state","action","type","clear","status","lastAction"],"mappings":";;;;;;;;;;QAIgBA,a,GAAAA,a;kBASQC,mB;;AAbxB;;AACA;;;;;;AAGO,SAASD,aAAT,CAAuBE,KAAvB,EAA8B;AACnC,SAAO,YAAwB;AAAA,QAAvBC,KAAuB,uEAAf,EAAe;AAAA,QAAXC,MAAW;;AAC7B,QAAIA,OAAOC,IAAP,KAAgBH,MAAMI,KAA1B,EAAiC;AAC/B,aAAO,EAAP;AACD;AACD,sDAAWH,KAAX,IAAkBC,MAAlB;AACD,GALD;AAMD;;AAEc,SAASH,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,SAAO,4BAAgB;AACrBK,YAAQ,sCAAuBL,KAAvB,CADa;AAErBM,gBAAYR,cAAcE,KAAd;AAFS,GAAhB,CAAP;AAID","file":"getAnalyticsReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\n\nexport function getLastAction(types) {\n  return (state = [], action) => {\n    if (action.type === types.clear) {\n      return [];\n    }\n    return [...state, action];\n  };\n}\n\nexport default function getAnalyticsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    lastAction: getLastAction(types),\n  });\n}\n"]}