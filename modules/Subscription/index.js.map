{"version":3,"sources":["modules/Subscription/index.js"],"names":["DEFAULT_TIME_TO_RETRY","Subscription","deps","dep","optional","auth","client","storage","timeToRetry","options","actionTypes","_auth","_client","_storage","_timeToRetry","_cacheStorageKey","_reducer","registerReducer","key","reducer","_resetPromise","_removePromise","_retryTimeoutId","_registerTimeoutId","store","subscribe","loginStatus","loggedIn","ready","status","moduleStatuses","pending","_startSleepDetection","dispatch","type","initSuccess","notLoggedIn","reset","addBeforeLogoutHandler","_stopSleepDetection","_detectSleep","_sleepTimeout","clearTimeout","t","Date","now","setTimeout","_subscription","remove","_subscribe","service","createSubscription","cachedSubscription","setSubscription","error","on","events","notification","message","removeSuccess","removeError","renewSuccess","subscription","renewError","_retry","subscribeSuccess","subscribeError","delay","setEventFilters","filters","register","_createSubscription","_register","oldFilters","addFilters","concat","length","removeFilters","fiters","_stopRetry","_remove","resetSuccess","_reset","state","subscriptionStatus","getItem","_pubnub","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport loginStatus from '../Auth/loginStatus';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getSubscriptionReducer, { getCachedSubscriptionReducer, } from './getSubscriptionReducer';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_TIME_TO_RETRY = 60 * 1000;\n\n/**\n * @class\n * @description Subscription module to subscibe notification\n */\n@Module({\n  deps: [\n    'Auth', 'Client', 'Storage', { dep: 'SubscriptionOptions', optional: true }\n  ]\n})\nexport default class Subscription extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {Number} params.timeToRetry - time to retry, default 60 seconds\n   */\n  constructor({\n    auth,\n    client,\n    storage,\n    timeToRetry = DEFAULT_TIME_TO_RETRY,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = auth;\n    this._client = client;\n    this._storage = storage;\n    this._timeToRetry = timeToRetry;\n    this._cacheStorageKey = 'cachedSubscription';\n    this._reducer = getSubscriptionReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._cacheStorageKey,\n      reducer: getCachedSubscriptionReducer(this.actionTypes),\n    });\n\n    this._resetPromise = null;\n    this._removePromise = null;\n    this._retryTimeoutId = null;\n    this._registerTimeoutId = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this._startSleepDetection();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        (\n          this._auth.loginStatus === loginStatus.notLoggedIn ||\n          !this._storage.ready\n        ) &&\n        this.ready\n      ) {\n        this.reset();\n      }\n    });\n    this._auth.addBeforeLogoutHandler(async () => {\n      if (this.ready) {\n        await this.reset();\n      }\n    });\n  }\n\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get filters() {\n    return this.state.filters;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get subscriptionStatus() {\n    return this.state.subscriptionStatus;\n  }\n\n  get cachedSubscription() {\n    return this._storage.getItem(this._cacheStorageKey);\n  }\n  _startSleepDetection() {\n    this._stopSleepDetection();\n    this._detectSleep();\n  }\n  _stopSleepDetection() {\n    if (this._sleepTimeout) {\n      clearTimeout(this._sleepTimeout);\n      this._sleepTimeout = null;\n    }\n  }\n  _detectSleep() {\n    const t = Date.now();\n    this._sleepTimeout = setTimeout(async () => {\n      if (this.ready && this._subscription && Date.now() - t > 20 * 1000) {\n        await this.remove();\n        await this._subscribe();\n      }\n      this._detectSleep();\n    }, 10 * 1000);\n  }\n  _createSubscription() {\n    this._subscription = this._client.service.createSubscription();\n    if (this.cachedSubscription) {\n      try {\n        this._subscription.setSubscription(this.cachedSubscription);\n      } catch (error) {\n        /* falls through */\n      }\n    }\n    this._subscription.on(this._subscription.events.notification, (message) => {\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        message,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeSuccess, () => {\n      this.store.dispatch({\n        type: this.actionTypes.removeSuccess,\n      });\n    });\n    this._subscription.on(this._subscription.events.removeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.removeError,\n        error,\n      });\n    });\n    this._subscription.on(this._subscription.events.renewSuccess, () => {\n      if (this._subscription) {\n        this.store.dispatch({\n          type: this.actionTypes.renewSuccess,\n          subscription: this._subscription.subscription(),\n        });\n      }\n    });\n    this._subscription.on(this._subscription.events.renewError, (error) => {\n      if (this._subscription) {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.renewError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        // immediately start the retry process after the first renewError\n        this._retry(0);\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeSuccess, () => {\n      if (this._subscription) {\n        this.store.dispatch({\n          type: this.actionTypes.subscribeSuccess,\n          subscription: this._subscription.subscription(),\n        });\n      }\n    });\n    this._subscription.on(this._subscription.events.subscribeError, (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.subscribeError,\n        error,\n      });\n      if (\n        this._auth.loginStatus === loginStatus.loggedIn &&\n        this._storage.ready\n      ) {\n        this._retry();\n      }\n    });\n  }\n\n  _register(delay = 2000) {\n    if (this._registerTimeoutId) {\n      clearTimeout(this._registerTimeoutId);\n    }\n    this._registerTimeoutId = setTimeout(() => {\n      this._registerTimeoutId = null;\n      this.store.dispatch({\n        type: this.actionTypes.subscribe,\n      });\n      if (this._subscription) {\n        this._subscription.setEventFilters(this.filters);\n        this._subscription.register();\n      }\n    }, delay);\n  }\n\n  _subscribe(delay) {\n    if (!this._subscription) {\n      this._createSubscription();\n    }\n    this._subscription.setEventFilters(this.filters);\n    this._register(delay);\n  }\n\n  @proxify\n  async subscribe(events = [], delay = 2000) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.addFilters,\n        filters: [].concat(events),\n      });\n      if (oldFilters.length !== this.filters.length) {\n        await this._subscribe(delay);\n      }\n    }\n  }\n\n  @proxify\n  async unsubscribe(events = []) {\n    if (this.ready) {\n      const oldFilters = this.filters;\n      this.store.dispatch({\n        type: this.actionTypes.removeFilters,\n        fiters: [].concat(events),\n      });\n      if (this.filters.length === 0) {\n        this.remove();\n      } else if (oldFilters.length !== this.filters.length) {\n        this._subscribe();\n      }\n    }\n  }\n\n  async _stopRetry() {\n    if (this._retryTimeoutId) {\n      clearTimeout(this._retryTimeoutId);\n      this._retryTimeoutId = null;\n    }\n  }\n\n  async _retry(t = this._timeToRetry) {\n    this._stopRetry();\n    this._retryTimeoutId = setTimeout(() => {\n      if (this.ready) {\n        this._subscribe();\n      }\n    }, t);\n  }\n\n  async _remove() {\n    if (this._subscription) {\n      try {\n        this.store.dispatch({\n          type: this.actionTypes.remove,\n        });\n        await this._subscription.remove();\n      } catch (error) {\n        /* falls through */\n      }\n      if (this._subscription) { // check again in case subscription object was removed while waiting\n        this._subscription.reset();\n        this._subscription = null;\n      }\n      this._removePromise = null;\n    }\n  }\n\n  @proxify\n  async remove() {\n    if (!this._removePromise) {\n      this._removePromise = this._remove();\n    }\n    return this._removePromise;\n  }\n\n  async _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._stopSleepDetection();\n    this._stopRetry();\n    if (this._subscription) {\n      if (this._auth.loggedIn) {\n        try {\n          await this.remove();\n        } catch (error) {\n          /* falls through */\n        }\n      } else {\n        this._subscription.reset();\n        this._subscription = null;\n      }\n    }\n    this._resetPromise = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async reset() {\n    if (!this._resetPromise) {\n      this._resetPromise = this._reset();\n    }\n    return this._resetPromise;\n  }\n\n  get pubnub() {\n    return this._subscription && this._subscription._pubnub;\n  }\n}\n"]}