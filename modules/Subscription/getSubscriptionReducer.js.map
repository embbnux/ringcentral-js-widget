{"version":3,"sources":["modules/Subscription/getSubscriptionReducer.js"],"names":["getCachedSubscriptionReducer","getSubscriptionStatusReducer","getMessageReducer","getFiltersReducer","getSubscriptionReducer","types","state","type","subscription","renewSuccess","subscribeSuccess","removeSuccess","subscribeError","renewError","subscriptionStatus","notSubscribed","subscribe","subscribing","subscribed","resetSuccess","removeError","remove","unsubscribing","message","notification","filters","setFilters","addFilters","filterMap","concat","filter","f","removeFilters","forEach","status"],"mappings":"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","file":"getSubscriptionReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport subscriptionStatus from './subscriptionStatus';\n\nexport function getCachedSubscriptionReducer(types) {\n  return (state = null, { type, subscription }) => {\n    switch (type) {\n      case types.renewSuccess:\n      case types.subscribeSuccess:\n        return subscription;\n\n      case types.removeSuccess:\n      case types.subscribeError:\n      case types.renewError:\n        return null;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSubscriptionStatusReducer(types) {\n  return (state = subscriptionStatus.notSubscribed, { type }) => {\n    switch (type) {\n      case types.subscribe:\n        return subscriptionStatus.subscribing;\n\n      case types.subscribeSuccess:\n      case types.renewSuccess:\n        return subscriptionStatus.subscribed;\n\n      case types.renewError:\n      case types.resetSuccess:\n      case types.removeSuccess:\n      case types.removeError:\n      case types.subscribeError:\n        return subscriptionStatus.notSubscribed;\n\n      case types.remove:\n        return subscriptionStatus.unsubscribing;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageReducer(types) {\n  return (state = null, { type, message = state }) => {\n    if (type === types.notification) {\n      return message;\n    } else if (type === types.resetSuccess) {\n      return null;\n    }\n    return state;\n  };\n}\n\n\nexport function getFiltersReducer(types) {\n  return (state = [], { type, filters }) => {\n    switch (type) {\n      case types.setFilters:\n        return filters;\n\n      case types.addFilters: {\n        const filterMap = {};\n        return state.concat(filters).filter((f) => {\n          if (!filterMap[f]) {\n            filterMap[f] = true;\n            return true;\n          }\n          return false;\n        });\n      }\n      case types.removeFilters: {\n        const filterMap = {};\n        filters.forEach((f) => {\n          filterMap[f] = true;\n        });\n        return state.filter(f => !filterMap[f]);\n      }\n      case types.resetSuccess:\n        return [];\n\n      default:\n        return state;\n    }\n  };\n}\n\n\nexport default function getSubscriptionReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    message: getMessageReducer(types),\n    filters: getFiltersReducer(types),\n    subscriptionStatus: getSubscriptionStatusReducer(types),\n  });\n}\n"]}