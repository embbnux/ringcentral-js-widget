{"version":3,"sources":["modules/Meeting/index.js"],"names":["UTC_TIMEZONE_ID","MeetingType","SCHEDULED","RECURRING","INSTANT","getDefaultMeetingSettings","extensionName","startTime","topic","meetingType","password","schedule","durationInMinutes","timeZone","id","host","allowJoinBeforeHost","startHostVideo","startParticipantsVideo","audioOptions","_requireMeetingPassword","_showDate","_showTime","_saved","MeetingErrors","type","_errors","push","message","length","Meeting","deps","dep","optional","alert","client","extensionInfo","storage","options","actionTypes","_alert","_client","_extensionInfo","_storage","_reducer","_lastMeetingSettingKey","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","ready","pending","dispatch","initSuccess","resetSuccess","_initMeeting","info","name","now","Date","setHours","getHours","updateMeeting","meeting","lastMeetingInfo","isAlertSuccess","opener","isScheduling","initScheduling","_validate","formattedMeeting","_format","account","extension","post","resp","serviceInfo","get","scheduled","result","scheduledHook","setTimeout","meetingStatus","scheduledSuccess","resetScheduling","all","error","warning","formatted","_schedule","moment","utc","format","invalidMeetingInfo","errors","emptyTopic","noPassword","durationIncorrect","state","getItem","schedulingStatus","scheduleStatus","scheduling","status","RcModule","background","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import moment from 'moment';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport actionTypes from './actionTypes';\nimport scheduleStatus from './scheduleStatus';\nimport meetingStatus from './meetingStatus';\nimport getMeetingReducer, { getMeetingStorageReducer } from './getMeetingReducer';\n\nexport const UTC_TIMEZONE_ID = '1';\nexport const MeetingType = {\n  SCHEDULED: 'Scheduled',\n  RECURRING: 'Recurring',\n  INSTANT: 'Instant',\n};\n\n// Basic default meeting type information\nexport const getDefaultMeetingSettings = (extensionName, startTime) => ({\n  topic: `${extensionName}'s Meeting`,\n  meetingType: MeetingType.SCHEDULED,\n  password: null,\n  schedule: {\n    startTime,\n    durationInMinutes: 60,\n    timeZone: {\n      id: UTC_TIMEZONE_ID\n    }\n  },\n  host: {\n    id: null,\n  },\n  allowJoinBeforeHost: false,\n  startHostVideo: false,\n  startParticipantsVideo: false,\n  audioOptions: ['Phone', 'ComputerAudio'],\n  _requireMeetingPassword: false,\n  _showDate: false,\n  _showTime: false,\n  _saved: false,\n});\n\nclass MeetingErrors {\n  constructor(type) {\n    this._errors = [];\n    if (type) this._errors.push({ message: type });\n  }\n\n  push(type) {\n    if (type) this._errors.push({ message: type });\n  }\n\n  get all() {\n    return this._errors;\n  }\n\n  get length() {\n    return this._errors.length;\n  }\n}\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'MeetingOptions', optional: true }\n  ]\n})\nexport default class Meeting extends RcModule {\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._storage = storage;\n    this._reducer = getMeetingReducer(this.actionTypes);\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes)\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      this.pending\n    );\n  }\n\n  _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting settings from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  _initMeeting() {\n    const extensionName = this._extensionInfo.info.name || '';\n    const now = new Date();\n    const startTime = now.setHours(now.getHours() + 1, 0, 0);\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting: {\n        ...getDefaultMeetingSettings(extensionName, startTime),\n        // Load last meeting settings\n        ...this.lastMeetingInfo\n      }\n    });\n  }\n\n  @proxify\n  update(meeting) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting\n    });\n  }\n\n  @proxify\n  async schedule(meeting, { isAlertSuccess = true } = {}, opener) {\n    if (this.isScheduling) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      const resp = await this._client\n        .account()\n        .extension()\n        .meeting()\n        .post(formattedMeeting);\n      const serviceInfo = await this._client\n        .account()\n        .extension()\n        .meeting()\n        .serviceInfo()\n        .get();\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        }\n      });\n      const result = {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n      if (typeof this.scheduledHook === 'function') {\n        await this.scheduledHook(result, opener);\n      }\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting) {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n    } = meeting;\n    const formatted = {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n    };\n    if (password) {\n      formatted.password = password;\n    }\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID }\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n    }\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const {\n      topic,\n      password,\n      schedule,\n      _requireMeetingPassword,\n    } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get lastMeetingInfo() {\n    const state = this._storage.getItem(this._lastMeetingSettingKey);\n    return state;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}