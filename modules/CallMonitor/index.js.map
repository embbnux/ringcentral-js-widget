{"version":3,"sources":["modules/CallMonitor/index.js"],"names":["CallMonitor","deps","dep","optional","call","conferenceCall","accountInfo","detailedPresence","activityMatcher","contactMatcher","tabManager","webphone","onRinging","onNewCall","onCallUpdated","onCallEnded","storage","options","actionTypes","_call","_conferenceCall","_accountInfo","ensureExist","_detailedPresence","_contactMatcher","_activityMatcher","_tabManager","_webphone","_onRinging","_onNewCall","_onCallUpdated","_onCallEnded","_storage","_callMatchedKey","_reducer","registerReducer","key","reducer","_normalizedCalls","addSelector","calls","countryCode","sessions","cachedSessions","callsFromPresence","cachedCalls","length","filter","x","webphoneSession","find","i","id","combinedCalls","forEach","cachedCall","push","theSessions","map","callItem","fromNumber","phoneNumber","from","toNumber","to","startTime","sort","l","r","_selectors","normalizedCalls","dataMapping","callMatched","contactMapping","activityMapping","fromMatches","toMatches","toNumberEntity","sessionId","activityMatches","allCalls","isMerging","_activeOnHoldCalls","_activeCurrentCalls","slice","lastEndedSessions","sessionsCache","endCall","output","numberMap","addIfNotExist","number","addQuerySource","getQueriesFn","uniqueNumbers","readyCheckFn","ready","sessionIds","_lastProcessedNumbers","_lastProcessedCalls","_lastProcessedIds","pending","store","dispatch","type","init","initSuccess","reset","resetSuccess","active","triggerMatch","oldCalls","toNumberEntities","cleanToNumberEntities","entities","sortByStartTime","oldCallIndex","findIndex","item","oldCall","splice","telephonyStatus","entity","index","toEntity","toMatch","entityId","undefined","_removeMatched","_setMatchedData","toEntityId","subscribe","_onStateChange","console","log","matched","setData","callItemClickTrack","allCallsClickHoldTrack","allCallsClickHangupTrack","allCallsClickRejectTrack","callControlClickAddTrack","mergeControlClickHangupTrack","callControlClickMergeTrack","confirmMergeClickCloseTrack","confirmMergeClickMergeTrack","callsOnHoldClickAddTrack","callsOnHoldClickMergeTrack","callsOnHoldClickHangupTrack","callControlClickParticipantAreaClickTrack","state","status","moduleStatuses","getItem","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","RcModule","getter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;;IAkBqBA,W,WAdpB,gBAAO;AACNC,QAAM,CACJ,aADI,EAEJ,SAFI,EAGJ,kBAHI,EAIJ,EAAEC,KAAK,gBAAP,EAAyBC,UAAU,IAAnC,EAJI,EAKJ,EAAED,KAAK,UAAP,EAAmBC,UAAU,IAA7B,EALI,EAMJ,EAAED,KAAK,MAAP,EAAeC,UAAU,IAAzB,EANI,EAOJ,EAAED,KAAK,gBAAP,EAAyBC,UAAU,IAAnC,EAPI,EAQJ,EAAED,KAAK,iBAAP,EAA0BC,UAAU,IAApC,EARI,EASJ,EAAED,KAAK,oBAAP,EAA6BC,UAAU,IAAvC,EATI,EAUJ,EAAED,KAAK,YAAP,EAAqBC,UAAU,IAA/B,EAVI;AADA,CAAP,C;;;AAeC;;;;;;;;;;;;;;;;AAgBA,6BAeG;AAAA,QAdDC,IAcC,QAdDA,IAcC;AAAA,QAbDC,cAaC,QAbDA,cAaC;AAAA,QAZDC,WAYC,QAZDA,WAYC;AAAA,QAXDC,gBAWC,QAXDA,gBAWC;AAAA,QAVDC,eAUC,QAVDA,eAUC;AAAA,QATDC,cASC,QATDA,cASC;AAAA,QARDC,UAQC,QARDA,UAQC;AAAA,QAPDC,QAOC,QAPDA,QAOC;AAAA,QANDC,SAMC,QANDA,SAMC;AAAA,QALDC,SAKC,QALDA,SAKC;AAAA,QAJDC,aAIC,QAJDA,aAIC;AAAA,QAHDC,WAGC,QAHDA,WAGC;AAAA,QAFDC,OAEC,QAFDA,OAEC;AAAA,QADEC,OACF;AAAA;;AAAA,2KAEIA,OAFJ;AAGCC;AAHD;;AAAA;;AAAA;;AAAA;;AAKD,UAAKC,KAAL,GAAaf,IAAb;AACA,UAAKgB,eAAL,GAAuBf,cAAvB;AACA,UAAKgB,YAAL,GAA0BC,qBAAN,aAAkBhB,WAAlB,EAA+B,aAA/B,CAApB;AACA,UAAKiB,iBAAL,GAA+BD,qBAAN,aAAkBf,gBAAlB,EAAoC,kBAApC,CAAzB;AACA,UAAKiB,eAAL,GAAuBf,cAAvB;AACA,UAAKgB,gBAAL,GAAwBjB,eAAxB;AACA,UAAKkB,WAAL,GAAmBhB,UAAnB;AACA,UAAKiB,SAAL,GAAiBhB,QAAjB;AACA,UAAKiB,UAAL,GAAkBhB,SAAlB;AACA,UAAKiB,UAAL,GAAkBhB,SAAlB;AACA,UAAKiB,cAAL,GAAsBhB,aAAtB;AACA,UAAKiB,YAAL,GAAoBhB,WAApB;AACA,UAAKiB,QAAL,GAAsBV,qBAAN,aAAkBN,OAAlB,EAA2B,SAA3B,CAAhB;AACA,UAAKiB,eAAL,GAAuB,aAAvB;;AAEA,UAAKC,QAAL,GAAgB,qCAAsB,MAAKhB,WAA3B,CAAhB;;AAEA,UAAKc,QAAL,CAAcG,eAAd,CAA8B;AAC5BC,WAAK,MAAKH,eADkB;AAE5BI,eAAS,kDAAsB,MAAKnB,WAA3B;AAFmB,KAA9B;;AAKA,QAAIoB,yBAAJ;AACA,UAAKC,WAAL,CAAiB,iBAAjB,EACE;AAAA,aAAM,MAAKhB,iBAAL,CAAuBiB,KAA7B;AAAA,KADF,EAEE;AAAA,aAAM,MAAKnB,YAAL,CAAkBoB,WAAxB;AAAA,KAFF,EAGE;AAAA,aAAM,MAAKd,SAAL,IAAkB,MAAKA,SAAL,CAAee,QAAvC;AAAA,KAHF,EAIE;AAAA,aAAM,MAAKf,SAAL,IAAkB,MAAKA,SAAL,CAAegB,cAAvC;AAAA,KAJF,EAKE,UAACC,iBAAD,EAAoBH,WAApB,EAAiCC,QAAjC,EAA2CC,cAA3C,EAA8D;AAC5D;AACA,UAAIE,cAAc,EAAlB;AACA,UAAIP,oBAAoBK,cAApB,IAAsCA,eAAeG,MAAzD,EAAiE;AAC/DD,sBAAcP,iBAAiBS,MAAjB,CAAwB;AAAA,iBACpCC,EAAEC,eAAF,IACAN,eAAeO,IAAf,CAAoB;AAAA,mBAAKC,EAAEC,EAAF,KAASJ,EAAEC,eAAF,CAAkBG,EAAhC;AAAA,WAApB,CAFoC;AAAA,SAAxB,CAAd;AAID;;AAED;AACA,UAAMC,2DAAoBT,iBAApB,EAAN,CAX4D,CAWd;AAC9CC,kBAAYS,OAAZ,CAAoB,UAACC,UAAD,EAAgB;AAClC,YAAI,CAACX,kBAAkBM,IAAlB,CAAuB;AAAA,iBAAKF,EAAEI,EAAF,KAASG,WAAWH,EAAzB;AAAA,SAAvB,CAAL,EAA0D;AACxDC,wBAAcG,IAAd,CAAmBD,UAAnB;AACD;AACF,OAJD;;AAMA;AACA,UAAIE,cAAcf,YAAY,EAA9B;AACAJ,yBAAmBe,cAAcK,GAAd,CAAkB,UAACC,QAAD,EAAc;AACjD;AACA,YAAMC,aAAa,+BAAgB;AACjCC,uBAAaF,SAASG,IAAT,IAAiBH,SAASG,IAAT,CAAcD,WADX;AAEjCpB;AAFiC,SAAhB,CAAnB;AAIA,YAAMsB,WAAW,+BAAgB;AAC/BF,uBAAaF,SAASK,EAAT,IAAeL,SAASK,EAAT,CAAYH,WADT;AAE/BpB;AAF+B,SAAhB,CAAjB;AAIA,YAAMQ,kBAAkB,0DAAkCQ,WAAlC,EAA+CE,QAA/C,CAAxB;AACAF,sBAAcA,YAAYV,MAAZ,CAAmB;AAAA,iBAAKC,MAAMC,eAAX;AAAA,SAAnB,CAAd;AACA,0CACKU,QADL;AAEEG,gBAAM;AACJD,yBAAaD;AADT,WAFR;AAKEI,cAAI;AACFH,yBAAaE;AADX,WALN;AAQEE,qBACGhB,mBAAmBA,gBAAgBgB,SAApC,IACAN,SAASM,SAVb;AAYEhB;AAZF;AAcD,OA1BkB,EA0BhBiB,IA1BgB,CA0BX,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACN,8CAAyBD,EAAElB,eAA3B,EAA4CmB,EAAEnB,eAA9C,CADM;AAAA,OA1BW,CAAnB;;AA8BA,aAAOX,gBAAP;AACD,KAxDH;;AA2DA,UAAKC,WAAL,CAAiB,UAAjB,EACE,MAAK8B,UAAL,CAAgBC,eADlB,EAEE;AAAA,aAAO,MAAK9C,eAAL,IAAwB,MAAKA,eAAL,CAAqB+C,WAApD;AAAA,KAFF,EAGE;AAAA,aAAO,MAAK9C,gBAAL,IAAyB,MAAKA,gBAAL,CAAsB8C,WAAtD;AAAA,KAHF,EAIE;AAAA,aAAO,MAAKC,WAAZ;AAAA,KAJF,EAKE,UAACF,eAAD,EAA6E;AAAA,UAA3DG,cAA2D,uEAA1C,EAA0C;AAAA,UAAtCC,eAAsC,uEAApB,EAAoB;AAAA,UAAhBF,WAAgB;;AAC3E,UAAMhC,QAAQ8B,gBAAgBZ,GAAhB,CAAoB,UAACC,QAAD,EAAc;AAC9C,YAAMC,aAAaD,SAASG,IAAT,IAAiBH,SAASG,IAAT,CAAcD,WAAlD;AACA,YAAME,WAAWJ,SAASK,EAAT,IAAeL,SAASK,EAAT,CAAYH,WAA5C;AACA,YAAMc,cAAef,cAAca,eAAeb,UAAf,CAAf,IAA8C,EAAlE;AACA,YAAMgB,YAAab,YAAYU,eAAeV,QAAf,CAAb,IAA0C,EAA5D;AACA,YAAMc,iBAAiBL,YAAYb,SAASmB,SAArB,CAAvB;AACA,0CACKnB,QADL;AAEEgB,kCAFF;AAGEC,8BAHF;AAIEG,2BAAkBL,gBAAgBf,SAASmB,SAAzB,CAAD,IAAyC,EAJ5D;AAKED;AALF;AAOD,OAba,CAAd;AAcA,aAAOrC,KAAP;AACD,KArBH;;AAwBA,UAAKD,WAAL,CAAiB,OAAjB,EACE,MAAK8B,UAAL,CAAgBW,QADlB,EAEE;AAAA,aAAM,MAAK5D,eAAL,IAAwB,MAAKA,eAAL,CAAqB6D,SAAnD;AAAA,KAFF,EAGE,UAACzC,KAAD,EAAQyC,SAAR;AAAA,aACEzC,MAAMO,MAAN,CAAa,UAACY,QAAD,EAAc;AACzB;AACA,YAAIsB,SAAJ,EAAe;AACb,iBAAO,CAAC,yCAAoBtB,SAASV,eAA7B,CAAR;AACD;AACD,eAAO,IAAP;AACD,OAND,CADF;AAAA,KAHF;;AAcA,UAAKV,WAAL,CAAiB,iBAAjB,EACE,MAAK8B,UAAL,CAAgB7B,KADlB,EAEE;AAAA,aAASA,MAAMO,MAAN,CAAa;AAAA,eACpBY,SAASV,eAAT,IACA,4BAAOU,SAASV,eAAhB,CAFoB;AAAA,OAAb,CAAT;AAAA,KAFF;;AAQA,UAAKV,WAAL,CAAiB,oBAAjB,EACE,MAAK8B,UAAL,CAAgB7B,KADlB,EAEE;AAAA,aAASA,MAAMO,MAAN,CAAa;AAAA,eACpBY,SAASV,eAAT,IACA,8BAASU,SAASV,eAAlB,CAFoB;AAAA,OAAb,CAAT;AAAA,KAFF;;AAQA,UAAKV,WAAL,CAAiB,qBAAjB,EACE,MAAK8B,UAAL,CAAgB7B,KADlB,EAEE;AAAA,aAASA,MAAMO,MAAN,CAAa;AAAA,eACpBY,SAASV,eAAT,IACA,CAAC,8BAASU,SAASV,eAAlB,CADD,IAEA,CAAC,4BAAOU,SAASV,eAAhB,CAHmB;AAAA,OAAb,CAAT;AAAA,KAFF;;AASA,UAAKV,WAAL,CAAiB,mBAAjB,EACE,MAAK8B,UAAL,CAAgBa,kBADlB,EAEE,MAAKb,UAAL,CAAgBc,mBAFlB,EAGE,UAACD,kBAAD,EAAqBC,mBAArB;AAAA,aACGD,mBAAmBpC,MAAnB,IAA6B,CAACqC,oBAAoBrC,MAAnD,GACEoC,mBAAmBE,KAAnB,CAAyB,CAAzB,CADF,GAEEF,kBAHJ;AAAA,KAHF;;AAUA,UAAK3C,WAAL,CAAiB,oBAAjB,EACE,MAAK8B,UAAL,CAAgBc,mBADlB,EAEE,MAAKd,UAAL,CAAgBa,kBAFlB,EAGE,UAACC,mBAAD,EAAsBD,kBAAtB;AAAA,aACG,CAACC,oBAAoBrC,MAArB,IAA+BoC,mBAAmBpC,MAAnD,GACEoC,mBAAmBE,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,CADF,GAEED,mBAHJ;AAAA,KAHF;;AAUA,UAAK5C,WAAL,CAAiB,kBAAjB,EACE,MAAK8B,UAAL,CAAgB7B,KADlB,EAEE;AAAA,aAAM,MAAKb,SAAL,IAAkB,MAAKA,SAAL,CAAe0D,iBAAvC;AAAA,KAFF,EAGE,UAAC7C,KAAD,EAAQ6C,iBAAR,EAA8B;AAC5B,UAAIC,gBAAgBD,iBAApB;AACA,aAAO7C,MAAMO,MAAN,CAAa,UAACY,QAAD,EAAc;AAChC,YAAIA,SAASV,eAAb,EAA8B;AAC5B,iBAAO,KAAP;AACD;AACD,YAAI,CAACqC,aAAL,EAAoB;AAClB,iBAAO,IAAP;AACD;AACD,YAAMC,UAAU,0DAAkCD,aAAlC,EAAiD3B,QAAjD,CAAhB;AACA2B,wBAAgBA,cAAcvC,MAAd,CAAqB;AAAA,iBAAKC,MAAMuC,OAAX;AAAA,SAArB,CAAhB;AACA,eAAO,CAACA,OAAR;AACD,OAVM,CAAP;AAWD,KAhBH;;AAmBA,UAAKhD,WAAL,CAAiB,eAAjB,EACE,MAAK8B,UAAL,CAAgBC,eADlB,EAEE,UAACA,eAAD,EAAqB;AACnB,UAAMkB,SAAS,EAAf;AACA,UAAMC,YAAY,EAAlB;AACA,eAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,YAAI,CAACF,UAAUE,MAAV,CAAL,EAAwB;AACtBH,iBAAOhC,IAAP,CAAYmC,MAAZ;AACAF,oBAAUE,MAAV,IAAoB,IAApB;AACD;AACF;AACDrB,sBAAgBhB,OAAhB,CAAwB,UAACK,QAAD,EAAc;AACpC,YAAIA,SAASG,IAAT,IAAiBH,SAASG,IAAT,CAAcD,WAAnC,EAAgD;AAC9C6B,wBAAc/B,SAASG,IAAT,CAAcD,WAA5B;AACD;AACD,YAAIF,SAASK,EAAT,IAAeL,SAASK,EAAT,CAAYH,WAA/B,EAA4C;AAC1C6B,wBAAc/B,SAASK,EAAT,CAAYH,WAA1B;AACD;AACF,OAPD;AAQA,aAAO2B,MAAP;AACD,KApBH;;AAuBA,QAAI,MAAKhE,eAAT,EAA0B;AACxB,YAAKA,eAAL,CAAqBoE,cAArB,CAAoC;AAClCC,sBAAc,MAAKxB,UAAL,CAAgByB,aADI;AAElCC,sBAAc;AAAA,iBACZ,MAAK1E,YAAL,CAAkB2E,KAAlB,IACA,MAAKzE,iBAAL,CAAuByE,KAFX;AAAA;AAFoB,OAApC;AAOD;;AAED,UAAKzD,WAAL,CAAiB,YAAjB,EACE;AAAA,aAAM,MAAKhB,iBAAL,CAAuBiB,KAA7B;AAAA,KADF,EAEE;AAAA,aAASA,MAAMkB,GAAN,CAAU;AAAA,eAAYC,SAASmB,SAArB;AAAA,OAAV,CAAT;AAAA,KAFF;;AAKA,QAAI,MAAKrD,gBAAT,EAA2B;AACzB,YAAKA,gBAAL,CAAsBmE,cAAtB,CAAqC;AACnCC,sBAAc,MAAKxB,UAAL,CAAgB4B,UADK;AAEnCF,sBAAc;AAAA,iBAAM,MAAKxE,iBAAL,CAAuByE,KAA7B;AAAA;AAFqB,OAArC;AAID;;AAED,UAAKE,qBAAL,GAA6B,IAA7B;AACA,UAAKC,mBAAL,GAA2B,IAA3B;AACA,UAAKC,iBAAL,GAAyB,IAAzB;AA5OC;AA6OF;;;;;;;;;;;;;AAGC,oBACE,CAAC,CAAC,KAAKjF,KAAN,IAAe,KAAKA,KAAL,CAAW6E,KAA3B,MACC,CAAC,KAAK5E,eAAN,IAAyB,KAAKA,eAAL,CAAqB4E,KAD/C,KAEA,KAAK3E,YAAL,CAAkB2E,KAFlB,IAGA,KAAKzE,iBAAL,CAAuByE,KAHvB,KAIC,CAAC,KAAKxE,eAAN,IAAyB,KAAKA,eAAL,CAAqBwE,KAJ/C,MAKC,CAAC,KAAKvE,gBAAN,IAA0B,KAAKA,gBAAL,CAAsBuE,KALjD,MAMC,CAAC,KAAKtE,WAAN,IAAqB,KAAKA,WAAL,CAAiBsE,KANvC,KAOA,KAAKhE,QAAL,CAAcgE,KAPd,IAQA,KAAKK,OATP,EAUE;AACA,uBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKtF,WAAL,CAAiBuF;AADL,mBAApB;AAGA,uBAAKH,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKtF,WAAL,CAAiBwF;AADL,mBAApB;AAGD,iBAjBD,MAiBO,IACL,CACG,KAAKvF,KAAL,IAAc,CAAC,KAAKA,KAAL,CAAW6E,KAA3B,IACC,KAAK5E,eAAL,IAAwB,CAAC,KAAKA,eAAL,CAAqB4E,KAD/C,IAEA,CAAC,KAAK3E,YAAL,CAAkB2E,KAFnB,IAGA,CAAC,KAAKzE,iBAAL,CAAuByE,KAHxB,IAIC,KAAKxE,eAAL,IAAwB,CAAC,KAAKA,eAAL,CAAqBwE,KAJ/C,IAKC,KAAKvE,gBAAL,IAAyB,CAAC,KAAKA,gBAAL,CAAsBuE,KALjD,IAMC,KAAKtE,WAAL,IAAoB,CAAC,KAAKA,WAAL,CAAiBsE,KANvC,IAOA,CAAC,KAAKhE,QAAL,CAAcgE,KARjB,KAUA,KAAKA,KAXA,EAYL;AACA,uBAAKM,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKtF,WAAL,CAAiByF;AADL,mBAApB;AAGA,uBAAKR,mBAAL,GAA2B,IAA3B;AACA,uBAAKC,iBAAL,GAAyB,IAAzB;AACA,uBAAKF,qBAAL,GAA6B,IAA7B;AACA,uBAAKI,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKtF,WAAL,CAAiB0F;AADL,mBAApB;AAGD,iBAtBM,MAsBA,IACL,KAAKZ,KADA,EAEL;AACMF,+BADN,GACsB,KAAKzB,UAAL,CAAgByB,aAAhB,EADtB;;AAEA,sBACE,KAAKI,qBAAL,KAA+BJ,aAA/B,KACC,CAAC,KAAKpE,WAAN,IAAqB,KAAKA,WAAL,CAAiBmF,MADvC,CADF,EAGE;AACA,yBAAKX,qBAAL,GAA6BJ,aAA7B;AACA,wBAAI,KAAKtE,eAAL,IAAwB,KAAKA,eAAL,CAAqBwE,KAAjD,EAAwD;AACtD,2BAAKxE,eAAL,CAAqBsF,YAArB;AACD;AACF;AACKb,4BAXN,GAWmB,KAAK5B,UAAL,CAAgB4B,UAAhB,EAXnB;;AAYA,sBACE,KAAKG,iBAAL,KAA2BH,UAA3B,KACC,CAAC,KAAKvE,WAAN,IAAqB,KAAKA,WAAL,CAAiBmF,MADvC,CADF,EAGE;AACA,yBAAKT,iBAAL,GAAyBH,UAAzB;AACA,wBAAI,KAAKxE,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBuE,KAAnD,EAA0D;AACxD,2BAAKvE,gBAAL,CAAsBqF,YAAtB;AACD;AACF;;AAED,sBACE,KAAKX,mBAAL,KAA6B,KAAK3D,KADpC,EAEE;AACMuE,4BADN,GAEE,KAAKZ,mBAAL,IACA,KAAKA,mBAAL,CAAyBf,KAAzB,EAFe,IAGZ,EAJL;;;AAMA,yBAAKe,mBAAL,GAA2B,KAAK3D,KAAhC;;AAEA;AACA,wBACE,KAAKrB,KAAL,IACA4F,SAASjE,MAAT,KAAoB,CADpB,IAEA,KAAKN,KAAL,CAAWM,MAAX,KAAsB,CAFtB,IAGA,KAAK3B,KAAL,CAAW6F,gBAHX,IAIA,KAAK7F,KAAL,CAAW6F,gBAAX,CAA4BlE,MAA5B,KAAuC,CALzC,EAME;AACA;AACA,2BAAK3B,KAAL,CAAW8F,qBAAX;AACD;;AAEGC,4BApBJ,GAoBe,KAAK/F,KAAL,GAAa,KAAKA,KAAL,CAAW6F,gBAAX,CAA4B9C,IAA5B,CAAiCiD,+BAAjC,CAAb,GAAiE,EApBhF;AAqBA;;AACA,yBAAK3E,KAAL,CAAWc,OAAX,CAAmB,UAAClD,IAAD,EAAU;AAC3B,0BAAMgH,eAAeL,SAASM,SAAT,CAAmB;AAAA,+BAAQC,KAAKxC,SAAL,KAAmB1E,KAAK0E,SAAhC;AAAA,uBAAnB,CAArB;AACA,0BAAIsC,iBAAiB,CAAC,CAAtB,EAAyB;AACvB,4BAAI,OAAO,OAAKvF,UAAZ,KAA2B,UAA/B,EAA2C;AACzC,iCAAKA,UAAL,CAAgBzB,IAAhB;AACD;AACD,4BAAI,OAAO,OAAKwB,UAAZ,KAA2B,UAA3B,IAAyC,+BAAUxB,IAAV,CAA7C,EAA8D;AAC5D,iCAAKwB,UAAL,CAAgBxB,IAAhB;AACD;AACF,uBAPD,MAOO;AACL,4BAAMmH,UAAUR,SAASK,YAAT,CAAhB;AACAL,iCAASS,MAAT,CAAgBJ,YAAhB,EAA8B,CAA9B;AACA,4BAAI,CACFhH,KAAKqH,eAAL,KAAyBF,QAAQE,eAAjC,IACA,CAACF,QAAQzD,IAAR,IAAgByD,QAAQzD,IAAR,CAAaD,WAA9B,OAAgDzD,KAAK0D,IAAL,IAAa1D,KAAK0D,IAAL,CAAUD,WAAvE,CAFE,KAIF,OAAO,OAAK/B,cAAZ,KAA+B,UAJjC,EAKE;AACA,iCAAKA,cAAL,CAAoB1B,IAApB;AACD;AACF;AACD8G,+BAAShE,IAAT,CAAc,UAACwE,MAAD,EAASC,KAAT,EAAmB;AAC/B,4BAAMC,WAAWxH,KAAKwE,SAAL,CAAe1B,IAAf,CAAoB;AAAA,iCACnC2E,QAAQzE,EAAR,KAAesE,OAAOI,QADa;AAAA,yBAApB,CAAjB;AAGA,4BAAIF,aAAaG,SAAjB,EAA4B;AAC1Bb,qCAAW,OAAKc,cAAL,CAAoBL,KAApB,EAA2BT,QAA3B,CAAX;AACA,iCAAKe,eAAL,CAAqB;AACnBnD,uCAAW1E,KAAK0E,SADG;AAEnBoD,wCAAYN,SAASxE;AAFF,2BAArB;AAIA,iCAAO,IAAP;AACD;AACD,+BAAO,KAAP;AACD,uBAbD;AAcD,qBAnCD;;AAqCA2D,6BAASzD,OAAT,CAAiB,UAAClD,IAAD,EAAU;AACzB,0BAAI,OAAO,OAAK2B,YAAZ,KAA6B,UAAjC,EAA6C;AAC3C,+BAAKA,YAAL,CAAkB3B,IAAlB;AACD;AACF,qBAJD;AAKD;AACF;;;;;;;;;;;;;;;;;;iCAEU;AAAA;;AACX,WAAKkG,KAAL,CAAW6B,SAAX,CAAqB;AAAA,eAAM,OAAKC,cAAL,EAAN;AAAA,OAArB;AACD;;;mCAEcT,K,EAAOT,Q,EAAU;AAC9BmB,cAAQC,GAAR,CAAY,gBAAZ,EAA8BX,KAA9B;AACAT,eAASM,MAAT,CAAgBG,KAAhB,EAAuB,CAAvB;AACAU,cAAQC,GAAR,CAAY,wBAAZ,EAAsCpB,QAAtC;AACA,aAAOA,QAAP;AACD;;;oCAEeqB,O,EAAS;AACvB,WAAKjC,KAAL,CAAWC,QAAX;AACEC,cAAM,KAAKtF,WAAL,CAAiBsH;AADzB,SAEKD,OAFL;AAID;AACD;;;;yCACqB;AACnB,WAAKjC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBuH;AADL,OAApB;AAGD;;;6CAEwB;AACvB,WAAKnC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBwH;AADL,OAApB;AAGD;;;+CAE0B;AACzB,WAAKpC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiByH;AADL,OAApB;AAGD;;;+CAE0B;AACzB,WAAKrC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB0H;AADL,OAApB;AAGD;;;+CAG0B;AACzB,WAAKtC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB2H;AADL,OAApB;AAGD;;;mDAE8B;AAC7B,WAAKvC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB4H;AADL,OAApB;AAGD;;;iDAE4B;AAC3B,WAAKxC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB6H;AADL,OAApB;AAGD;;;kDAE6B;AAC5B,WAAKzC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB8H;AADL,OAApB;AAGD;;;kDAE6B;AAC5B,WAAK1C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiB+H;AADL,OAApB;AAGD;;;+CAE0B;AACzB,WAAK3C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBgI;AADL,OAApB;AAGD;;;iDAE4B;AAC3B,WAAK5C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBiI;AADL,OAApB;AAGD;;;kDAE6B;AAC5B,WAAK7C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBkI;AADL,OAApB;AAGD;;;2DAEsC;AACrC,WAAK9C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,cAAM,KAAKtF,WAAL,CAAiBmI;AADL,OAApB;AAGD;;;wBAEqB;AACpB,aAAO,qCAAgB,KAAK7G,KAArB,CAAP;AACD;;;wBAEY;AACX,aAAO,KAAK8G,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsBC,yBAAexD,KAA5C;AACD;;;wBAEa;AACZ,aAAO,KAAKsD,KAAL,CAAWC,MAAX,KAAsBC,yBAAenD,OAA5C;AACD;;;wBAEW;AACV,aAAO,KAAKhC,UAAL,CAAgB7B,KAAhB,EAAP;AACD;;;wBAEc;AACb,aAAO,KAAK6B,UAAL,CAAgBW,QAAhB,EAAP;AACD;;;wBAEiB;AAChB,aAAO,KAAKhD,QAAL,CAAcyH,OAAd,CAAsB,KAAKxH,eAA3B,CAAP;AACD;;;wBAEqB;AACpB,aAAO,KAAKoC,UAAL,CAAgBqF,eAAhB,EAAP;AACD;;;wBAEuB;AACtB,aAAO,KAAKrF,UAAL,CAAgBsF,iBAAhB,EAAP;AACD;;;wBAEwB;AACvB,aAAO,KAAKtF,UAAL,CAAgBuF,kBAAhB,EAAP;AACD;;;wBAEsB;AACrB,aAAO,KAAKvF,UAAL,CAAgBwF,gBAAhB,EAAP;AACD;;;EA/hBsCC,kB,oFAiiBtCC,gB;;;;;WACkB,8BACjB;AAAA,aAAM,OAAKF,gBAAX;AAAA,KADiB,EAEjB;AAAA,aAAoBA,iBAAiB9G,MAAjB,CAAwB;AAAA,eAC1C,0CAAqBY,QAArB,CAD0C;AAAA,OAAxB,CAApB;AAAA,KAFiB,C;;wFAMlBoG,gB;;;;;WACqB,8BACpB;AAAA,aAAM,OAAKF,gBAAX;AAAA,KADoB,EAEpB;AAAA,aAAoBA,iBAAiB9G,MAAjB,CAAwB;AAAA,eAC1C,CAAC,0CAAqBY,QAArB,CAAD,IACA,CAAC,8BAAgBA,QAAhB,CAFyC;AAAA,OAAxB,CAApB;AAAA,KAFoB,C;;uFAOrBoG,gB;;;;;WACoB,8BACnB;AAAA,aAAM,OAAKF,gBAAX;AAAA,KADmB,EAEnB;AAAA,aAAoBA,iBAAiB9G,MAAjB,CAAwB;AAAA,eAC1C,8BAAgBY,QAAhB,CAD0C;AAAA,OAAxB,CAApB;AAAA,KAFmB,C;;;kBAjjBF3D,W","file":"index.js","sourcesContent":["import 'core-js/fn/array/find';\nimport { createSelector } from 'reselect';\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport actionTypes from './actionTypes';\nimport getCallMonitorReducer, { getCallMatchedReducer } from './getCallMonitorReducer';\nimport ensureExist from '../../lib/ensureExist';\nimport normalizeNumber from '../../lib/normalizeNumber';\nimport { matchWephoneSessionWithAcitveCall } from './callMonitorHelper';\nimport getter from '../../lib/getter';\n\nimport {\n  isRinging,\n  hasRingingCalls,\n  sortByStartTime,\n  isRingingInboundCall,\n  isOnHold as isRingOutOnHold\n} from '../../lib/callLogHelpers';\nimport {\n  isRing,\n  isOnHold,\n  isConferenceSession,\n  sortByLastActiveTimeDesc,\n} from '../Webphone/webphoneHelper';\n\n/**\n * @class\n * @description active calls monitor module\n */\n@Module({\n  deps: [\n    'AccountInfo',\n    'Storage',\n    'DetailedPresence',\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'Webphone', optional: true },\n    { dep: 'Call', optional: true },\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'ActivityMatcher', optional: true },\n    { dep: 'CallMonitorOptions', optional: true },\n    { dep: 'TabManager', optional: true },\n  ]\n})\nexport default class CallMonitor extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Call} params.call - call module instance\n   * @param {ConferenceCall} params.conferenceCall - conference call module instance\n   * @param {AccountInfo} params.accountInfo - accountInfo module instance\n   * @param {DetailedPresence} params.detailedPresence - detailedPresence module instance\n   * @param {ActivityMatcher} params.activityMatcher - activityMatcher module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance\n   * @param {Webphone} params.webphone - webphone module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {Function} params.onRinging - function on ring\n   * @param {Function} params.onNewCall - function on new call\n   * @param {Function} params.onCallUpdated - function on call updated\n   * @param {Function} params.onCallEnded - function on call ended\n   */\n  constructor({\n    call,\n    conferenceCall,\n    accountInfo,\n    detailedPresence,\n    activityMatcher,\n    contactMatcher,\n    tabManager,\n    webphone,\n    onRinging,\n    onNewCall,\n    onCallUpdated,\n    onCallEnded,\n    storage,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._call = call;\n    this._conferenceCall = conferenceCall;\n    this._accountInfo = this::ensureExist(accountInfo, 'accountInfo');\n    this._detailedPresence = this::ensureExist(detailedPresence, 'detailedPresence');\n    this._contactMatcher = contactMatcher;\n    this._activityMatcher = activityMatcher;\n    this._tabManager = tabManager;\n    this._webphone = webphone;\n    this._onRinging = onRinging;\n    this._onNewCall = onNewCall;\n    this._onCallUpdated = onCallUpdated;\n    this._onCallEnded = onCallEnded;\n    this._storage = this::ensureExist(storage, 'storage');\n    this._callMatchedKey = 'callMatched';\n\n    this._reducer = getCallMonitorReducer(this.actionTypes);\n\n    this._storage.registerReducer({\n      key: this._callMatchedKey,\n      reducer: getCallMatchedReducer(this.actionTypes),\n    });\n\n    let _normalizedCalls;\n    this.addSelector('normalizedCalls',\n      () => this._detailedPresence.calls,\n      () => this._accountInfo.countryCode,\n      () => this._webphone && this._webphone.sessions,\n      () => this._webphone && this._webphone.cachedSessions,\n      (callsFromPresence, countryCode, sessions, cachedSessions) => {\n        // match cached calls\n        let cachedCalls = [];\n        if (_normalizedCalls && cachedSessions && cachedSessions.length) {\n          cachedCalls = _normalizedCalls.filter(x =>\n            x.webphoneSession &&\n            cachedSessions.find(i => i.id === x.webphoneSession.id)\n          );\n        }\n\n        // combine\n        const combinedCalls = [...callsFromPresence]; // clone\n        cachedCalls.forEach((cachedCall) => {\n          if (!callsFromPresence.find(x => x.id === cachedCall.id)) {\n            combinedCalls.push(cachedCall);\n          }\n        });\n\n        // mapping and sort\n        let theSessions = sessions || [];\n        _normalizedCalls = combinedCalls.map((callItem) => {\n          // use account countryCode to normalize number due to API issues [RCINT-3419]\n          const fromNumber = normalizeNumber({\n            phoneNumber: callItem.from && callItem.from.phoneNumber,\n            countryCode,\n          });\n          const toNumber = normalizeNumber({\n            phoneNumber: callItem.to && callItem.to.phoneNumber,\n            countryCode,\n          });\n          const webphoneSession = matchWephoneSessionWithAcitveCall(theSessions, callItem);\n          theSessions = theSessions.filter(x => x !== webphoneSession);\n          return {\n            ...callItem,\n            from: {\n              phoneNumber: fromNumber,\n            },\n            to: {\n              phoneNumber: toNumber,\n            },\n            startTime: (\n              (webphoneSession && webphoneSession.startTime) ||\n              callItem.startTime\n            ),\n            webphoneSession,\n          };\n        }).sort((l, r) => (\n          sortByLastActiveTimeDesc(l.webphoneSession, r.webphoneSession)\n        ));\n\n        return _normalizedCalls;\n      },\n    );\n\n    this.addSelector('allCalls',\n      this._selectors.normalizedCalls,\n      () => (this._contactMatcher && this._contactMatcher.dataMapping),\n      () => (this._activityMatcher && this._activityMatcher.dataMapping),\n      () => (this.callMatched),\n      (normalizedCalls, contactMapping = {}, activityMapping = {}, callMatched) => {\n        const calls = normalizedCalls.map((callItem) => {\n          const fromNumber = callItem.from && callItem.from.phoneNumber;\n          const toNumber = callItem.to && callItem.to.phoneNumber;\n          const fromMatches = (fromNumber && contactMapping[fromNumber]) || [];\n          const toMatches = (toNumber && contactMapping[toNumber]) || [];\n          const toNumberEntity = callMatched[callItem.sessionId];\n          return {\n            ...callItem,\n            fromMatches,\n            toMatches,\n            activityMatches: (activityMapping[callItem.sessionId]) || [],\n            toNumberEntity,\n          };\n        });\n        return calls;\n      }\n    );\n\n    this.addSelector('calls',\n      this._selectors.allCalls,\n      () => this._conferenceCall && this._conferenceCall.isMerging,\n      (calls, isMerging) => (\n        calls.filter((callItem) => {\n          // filtering out the conferece during merging\n          if (isMerging) {\n            return !isConferenceSession(callItem.webphoneSession);\n          }\n          return true;\n        })\n      ),\n    );\n\n    this.addSelector('activeRingCalls',\n      this._selectors.calls,\n      calls => calls.filter(callItem =>\n        callItem.webphoneSession &&\n        isRing(callItem.webphoneSession)\n      )\n    );\n\n    this.addSelector('_activeOnHoldCalls',\n      this._selectors.calls,\n      calls => calls.filter(callItem =>\n        callItem.webphoneSession &&\n        isOnHold(callItem.webphoneSession)\n      )\n    );\n\n    this.addSelector('_activeCurrentCalls',\n      this._selectors.calls,\n      calls => calls.filter(callItem =>\n        callItem.webphoneSession &&\n        !isOnHold(callItem.webphoneSession) &&\n        !isRing(callItem.webphoneSession)\n      )\n    );\n\n    this.addSelector('activeOnHoldCalls',\n      this._selectors._activeOnHoldCalls,\n      this._selectors._activeCurrentCalls,\n      (_activeOnHoldCalls, _activeCurrentCalls) => (\n        (_activeOnHoldCalls.length && !_activeCurrentCalls.length) ?\n          _activeOnHoldCalls.slice(1) :\n          _activeOnHoldCalls\n      ),\n    );\n\n    this.addSelector('activeCurrentCalls',\n      this._selectors._activeCurrentCalls,\n      this._selectors._activeOnHoldCalls,\n      (_activeCurrentCalls, _activeOnHoldCalls) => (\n        (!_activeCurrentCalls.length && _activeOnHoldCalls.length) ?\n          _activeOnHoldCalls.slice(0, 1) :\n          _activeCurrentCalls\n      )\n    );\n\n    this.addSelector('otherDeviceCalls',\n      this._selectors.calls,\n      () => this._webphone && this._webphone.lastEndedSessions,\n      (calls, lastEndedSessions) => {\n        let sessionsCache = lastEndedSessions;\n        return calls.filter((callItem) => {\n          if (callItem.webphoneSession) {\n            return false;\n          }\n          if (!sessionsCache) {\n            return true;\n          }\n          const endCall = matchWephoneSessionWithAcitveCall(sessionsCache, callItem);\n          sessionsCache = sessionsCache.filter(x => x !== endCall);\n          return !endCall;\n        });\n      },\n    );\n\n    this.addSelector('uniqueNumbers',\n      this._selectors.normalizedCalls,\n      (normalizedCalls) => {\n        const output = [];\n        const numberMap = {};\n        function addIfNotExist(number) {\n          if (!numberMap[number]) {\n            output.push(number);\n            numberMap[number] = true;\n          }\n        }\n        normalizedCalls.forEach((callItem) => {\n          if (callItem.from && callItem.from.phoneNumber) {\n            addIfNotExist(callItem.from.phoneNumber);\n          }\n          if (callItem.to && callItem.to.phoneNumber) {\n            addIfNotExist(callItem.to.phoneNumber);\n          }\n        });\n        return output;\n      }\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.uniqueNumbers,\n        readyCheckFn: () => (\n          this._accountInfo.ready &&\n          this._detailedPresence.ready\n        ),\n      });\n    }\n\n    this.addSelector('sessionIds',\n      () => this._detailedPresence.calls,\n      calls => calls.map(callItem => callItem.sessionId)\n    );\n\n    if (this._activityMatcher) {\n      this._activityMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionIds,\n        readyCheckFn: () => this._detailedPresence.ready,\n      });\n    }\n\n    this._lastProcessedNumbers = null;\n    this._lastProcessedCalls = null;\n    this._lastProcessedIds = null;\n  }\n\n  async _onStateChange() {\n    if (\n      (!this._call || this._call.ready) &&\n      (!this._conferenceCall || this._conferenceCall.ready) &&\n      this._accountInfo.ready &&\n      this._detailedPresence.ready &&\n      (!this._contactMatcher || this._contactMatcher.ready) &&\n      (!this._activityMatcher || this._activityMatcher.ready) &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this._storage.ready &&\n      this.pending\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      (\n        (this._call && !this._call.ready) ||\n        (this._conferenceCall && !this._conferenceCall.ready) ||\n        !this._accountInfo.ready ||\n        !this._detailedPresence.ready ||\n        (this._contactMatcher && !this._contactMatcher.ready) ||\n        (this._activityMatcher && !this._activityMatcher.ready) ||\n        (this._tabManager && !this._tabManager.ready) ||\n        !this._storage.ready\n      ) &&\n      this.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this._lastProcessedCalls = null;\n      this._lastProcessedIds = null;\n      this._lastProcessedNumbers = null;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    } else if (\n      this.ready\n    ) {\n      const uniqueNumbers = this._selectors.uniqueNumbers();\n      if (\n        this._lastProcessedNumbers !== uniqueNumbers &&\n        (!this._tabManager || this._tabManager.active)\n      ) {\n        this._lastProcessedNumbers = uniqueNumbers;\n        if (this._contactMatcher && this._contactMatcher.ready) {\n          this._contactMatcher.triggerMatch();\n        }\n      }\n      const sessionIds = this._selectors.sessionIds();\n      if (\n        this._lastProcessedIds !== sessionIds &&\n        (!this._tabManager || this._tabManager.active)\n      ) {\n        this._lastProcessedIds = sessionIds;\n        if (this._activityMatcher && this._activityMatcher.ready) {\n          this._activityMatcher.triggerMatch();\n        }\n      }\n\n      if (\n        this._lastProcessedCalls !== this.calls\n      ) {\n        const oldCalls = (\n          this._lastProcessedCalls &&\n          this._lastProcessedCalls.slice()\n        ) || [];\n\n        this._lastProcessedCalls = this.calls;\n\n        // no ringing calls\n        if (\n          this._call &&\n          oldCalls.length !== 0 &&\n          this.calls.length === 0 &&\n          this._call.toNumberEntities &&\n          this._call.toNumberEntities.length !== 0\n        ) {\n          // console.log('no calls clean to number:');\n          this._call.cleanToNumberEntities();\n        }\n\n        let entities = this._call ? this._call.toNumberEntities.sort(sortByStartTime) : [];\n        // const matchedMap = {};\n        this.calls.forEach((call) => {\n          const oldCallIndex = oldCalls.findIndex(item => item.sessionId === call.sessionId);\n          if (oldCallIndex === -1) {\n            if (typeof this._onNewCall === 'function') {\n              this._onNewCall(call);\n            }\n            if (typeof this._onRinging === 'function' && isRinging(call)) {\n              this._onRinging(call);\n            }\n          } else {\n            const oldCall = oldCalls[oldCallIndex];\n            oldCalls.splice(oldCallIndex, 1);\n            if ((\n              call.telephonyStatus !== oldCall.telephonyStatus ||\n              (oldCall.from && oldCall.from.phoneNumber) !== (call.from && call.from.phoneNumber)\n            ) &&\n              typeof this._onCallUpdated === 'function'\n            ) {\n              this._onCallUpdated(call);\n            }\n          }\n          entities.find((entity, index) => {\n            const toEntity = call.toMatches.find(toMatch =>\n              toMatch.id === entity.entityId\n            );\n            if (toEntity !== undefined) {\n              entities = this._removeMatched(index, entities);\n              this._setMatchedData({\n                sessionId: call.sessionId,\n                toEntityId: toEntity.id,\n              });\n              return true;\n            }\n            return false;\n          });\n        });\n\n        oldCalls.forEach((call) => {\n          if (typeof this._onCallEnded === 'function') {\n            this._onCallEnded(call);\n          }\n        });\n      }\n    }\n  }\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _removeMatched(index, entities) {\n    console.log('removeMatched:', index);\n    entities.splice(index, 1);\n    console.log('entities after splice:', entities);\n    return entities;\n  }\n\n  _setMatchedData(matched) {\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      ...matched,\n    });\n  }\n  // user action track funtions\n  callItemClickTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callItemClickTrack,\n    });\n  }\n\n  allCallsClickHoldTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.allCallsClickHoldTrack\n    });\n  }\n\n  allCallsClickHangupTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.allCallsClickHangupTrack,\n    });\n  }\n\n  allCallsClickRejectTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.allCallsClickRejectTrack,\n    });\n  }\n\n\n  callControlClickAddTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callControlClickAddTrack\n    });\n  }\n\n  mergeControlClickHangupTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.mergeControlClickHangupTrack\n    });\n  }\n\n  callControlClickMergeTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callControlClickMergeTrack\n    });\n  }\n\n  confirmMergeClickCloseTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.confirmMergeClickCloseTrack,\n    });\n  }\n\n  confirmMergeClickMergeTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.confirmMergeClickMergeTrack,\n    });\n  }\n\n  callsOnHoldClickAddTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callsOnHoldClickAddTrack\n    });\n  }\n\n  callsOnHoldClickMergeTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callsOnHoldClickMergeTrack\n    });\n  }\n\n  callsOnHoldClickHangupTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callsOnHoldClickHangupTrack\n    });\n  }\n\n  callControlClickParticipantAreaTrack() {\n    this.store.dispatch({\n      type: this.actionTypes.callControlClickParticipantAreaClickTrack\n    });\n  }\n\n  get hasRingingCalls() {\n    return hasRingingCalls(this.calls);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get calls() {\n    return this._selectors.calls();\n  }\n\n  get allCalls() {\n    return this._selectors.allCalls();\n  }\n\n  get callMatched() {\n    return this._storage.getItem(this._callMatchedKey);\n  }\n\n  get activeRingCalls() {\n    return this._selectors.activeRingCalls();\n  }\n\n  get activeOnHoldCalls() {\n    return this._selectors.activeOnHoldCalls();\n  }\n\n  get activeCurrentCalls() {\n    return this._selectors.activeCurrentCalls();\n  }\n\n  get otherDeviceCalls() {\n    return this._selectors.otherDeviceCalls();\n  }\n\n  @getter\n  ringoutRingCalls = createSelector(\n    () => this.otherDeviceCalls,\n    otherDeviceCalls => otherDeviceCalls.filter(callItem =>\n      isRingingInboundCall(callItem)\n    )\n  );\n  @getter\n  ringoutCurrentCalls = createSelector(\n    () => this.otherDeviceCalls,\n    otherDeviceCalls => otherDeviceCalls.filter(callItem =>\n      !isRingingInboundCall(callItem) &&\n      !isRingOutOnHold(callItem)\n    )\n  );\n  @getter\n  ringoutOnHoldCalls = createSelector(\n    () => this.otherDeviceCalls,\n    otherDeviceCalls => otherDeviceCalls.filter(callItem =>\n      isRingOutOnHold(callItem)\n    )\n  );\n}\n"]}