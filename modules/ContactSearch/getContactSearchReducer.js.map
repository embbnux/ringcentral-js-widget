{"version":3,"sources":["modules/ContactSearch/getContactSearchReducer.js"],"names":["getContactSearchStatusReducer","getSearchingReducer","getContactSearchReducer","types","state","contactSearchStatus","idle","type","search","searching","prepareSearch","searchSuccess","searchError","initialState","searchOnSources","searchString","result","entities","join","resultMap","newResult","forEach","item","id","push","resetSuccess","reset","reducers","status","searchStatus"],"mappings":";;;;;;;;;;QAIgBA,6B,GAAAA,6B;QAiBAC,mB,GAAAA,mB;kBAqDQC,uB;;AA1ExB;;AACA;;;;AACA;;;;;;AAEO,SAASF,6BAAT,CAAuCG,KAAvC,EAA8C;AACnD,SAAO,YAAgD;AAAA,QAA/CC,KAA+C,uEAAvCC,8BAAoBC,IAAmB;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AACrD,YAAQA,IAAR;AACE,WAAKJ,MAAMK,MAAX;AACE,eAAOH,8BAAoBI,SAA3B;;AAEF,WAAKN,MAAMO,aAAX;AACA,WAAKP,MAAMQ,aAAX;AACA,WAAKR,MAAMS,WAAX;AACE,eAAOP,8BAAoBC,IAA3B;;AAEF;AACE,eAAOF,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEM,SAASH,mBAAT,CAA6BE,KAA7B,EAAoC;AACzC,MAAMU,eAAe;AACnBC,qBAAiB,EADE;AAEnBC,kBAAc,EAFK;AAGnBC,YAAQ;AAHW,GAArB;AAKA,SAAO,YAKD;AAAA,QALEZ,KAKF,uEALUS,YAKV;AAAA;AAAA,QAJJN,IAII,SAJJA,IAII;AAAA,QAHJO,eAGI,SAHJA,eAGI;AAAA,QAFJC,YAEI,SAFJA,YAEI;AAAA,QADJE,QACI,SADJA,QACI;;AACJ,YAAQV,IAAR;AACE,WAAKJ,MAAMQ,aAAX;AACE,YACEP,MAAMW,YAAN,KAAuBA,YAAvB,IACAX,MAAMU,eAAN,CAAsBI,IAAtB,CAA2B,GAA3B,MAAoCJ,gBAAgBI,IAAhB,CAAqB,GAArB,CAFtC,EAGE;AACA,cAAMC,YAAY,EAAlB;AACA,cAAMC,YAAY,EAAlB;AACAhB,gBAAMY,MAAN,CAAaK,OAAb,CAAqB,UAACC,IAAD,EAAU;AAC7BH,sBAAUG,KAAKC,EAAf,IAAqB,CAArB;AACAH,sBAAUI,IAAV,CAAeF,IAAf;AACD,WAHD;AAIAL,mBAASI,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,gBAAIH,UAAUG,KAAKC,EAAf,CAAJ,EAAwB;AACtB;AACD;AACDH,sBAAUI,IAAV,CAAeF,IAAf;AACAH,sBAAUG,KAAKC,EAAf,IAAqB,CAArB;AACD,WAND;AAOA,4CACKnB,KADL;AAEEY,oBAAQI;AAFV;AAID;AACD,eAAO;AACLN,0CADK;AAELC,oCAFK;AAGLC,kBAAQC;AAHH,SAAP;AAKF,WAAKd,MAAMsB,YAAX;AACA,WAAKtB,MAAMO,aAAX;AACA,WAAKP,MAAMuB,KAAX;AACA,WAAKvB,MAAMS,WAAX;AACE,eAAOC,YAAP;AACF,WAAKV,MAAMK,MAAX;AACA;AACE,eAAOJ,KAAP;AApCJ;AAsCD,GA5CD;AA6CD;;AAEc,SAASF,uBAAT,CAAiCC,KAAjC,EAAuD;AAAA,MAAfwB,QAAe,uEAAJ,EAAI;;AACpE,SAAO,uDACFA,QADE;AAELC,YAAQ,sCAAuBzB,KAAvB,CAFH;AAGL0B,kBAAc7B,8BAA8BG,KAA9B,CAHT;AAILM,eAAWR,oBAAoBE,KAApB;AAJN,KAAP;AAMD","file":"getContactSearchReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport contactSearchStatus from './contactSearchStatus';\n\nexport function getContactSearchStatusReducer(types) {\n  return (state = contactSearchStatus.idle, { type }) => {\n    switch (type) {\n      case types.search:\n        return contactSearchStatus.searching;\n\n      case types.prepareSearch:\n      case types.searchSuccess:\n      case types.searchError:\n        return contactSearchStatus.idle;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSearchingReducer(types) {\n  const initialState = {\n    searchOnSources: [],\n    searchString: '',\n    result: [],\n  };\n  return (state = initialState, {\n    type,\n    searchOnSources,\n    searchString,\n    entities,\n  }) => {\n    switch (type) {\n      case types.searchSuccess:\n        if (\n          state.searchString === searchString &&\n          state.searchOnSources.join(',') === searchOnSources.join(',')\n        ) {\n          const resultMap = {};\n          const newResult = [];\n          state.result.forEach((item) => {\n            resultMap[item.id] = 1;\n            newResult.push(item);\n          });\n          entities.forEach((item) => {\n            if (resultMap[item.id]) {\n              return;\n            }\n            newResult.push(item);\n            resultMap[item.id] = 1;\n          });\n          return {\n            ...state,\n            result: newResult,\n          };\n        }\n        return {\n          searchOnSources,\n          searchString,\n          result: entities\n        };\n      case types.resetSuccess:\n      case types.prepareSearch:\n      case types.reset:\n      case types.searchError:\n        return initialState;\n      case types.search:\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactSearchReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    searchStatus: getContactSearchStatusReducer(types),\n    searching: getSearchingReducer(types),\n  });\n}\n"]}