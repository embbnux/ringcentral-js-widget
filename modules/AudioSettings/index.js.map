{"version":3,"sources":["modules/AudioSettings/index.js"],"names":["polyfillGetUserMedia","navigator","mediaDevices","undefined","getUserMedia","webkitGetUserMedia","mozGetUserMedia","resolve","reject","call","constraints","AudioSettings","deps","auth","alert","storage","rolesAndPermissions","options","actionTypes","_storage","ensureExist","_auth","_alert","_rolesAndPermissions","_storageKey","registerReducer","key","reducer","_reducer","addSelector","state","availableDevices","device","kind","devices","supportDevices","_checkDevices","store","subscribe","ready","loggedIn","webphoneEnabled","userMedia","hasAutoPrompted","markAutoPrompted","dispatch","type","autoPrompted","_onStateChange","addEventListener","pending","_shouldInit","init","initSuccess","_shouldReset","reset","resetSuccess","enumerateDevices","setAvailableDevices","map","d","toJSON","audio","stream","_onGetUserMediaSuccess","getTracks","forEach","track","stop","onGetUserMediaError","userMediaAlert","item","message","audioSettingsErrors","userMediaPermission","messages","dismiss","id","getUserMediaSuccess","error","getUserMediaError","danger","allowDuplicates","ttl","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","outputDeviceId","inputDeviceId","setData","getItem","deviceId","HTMLMediaElement","prototype","setSinkId","_selectors","availableOutputDevices","availableInputDevices","cacheData","isFirefox","userAgent","indexOf","length","label","status","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import { find, filter } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport proxify from '../../lib/proxy/proxify';\nimport { Module } from '../../lib/di';\nimport ensureExist from '../../lib/ensureExist';\nimport actionTypes from './actionTypes';\nimport getAudioSettingsReducer from './getAudioSettingsReducer';\nimport getStorageReducer from './getStorageReducer';\nimport audioSettingsErrors from './audioSettingsErrors';\n\nfunction polyfillGetUserMedia() {\n  if (navigator.mediaDevices === undefined) {\n    navigator.mediaDevices = {};\n  }\n  navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia;\n  if (navigator.mediaDevices.getUserMedia === undefined && navigator.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = constraints =>\n      new Promise((resolve, reject) => {\n        navigator.getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n  }\n}\npolyfillGetUserMedia();\n\n/**\n * @class\n * @description AudioSettings module.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Storage',\n    'RolesAndPermissions',\n  ],\n})\nexport default class AudioSettings extends RcModule {\n  constructor({\n    auth,\n    alert,\n    storage,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._storage = this:: ensureExist(storage, 'storage');\n    this._auth = this:: ensureExist(auth, 'auth');\n    this._alert = this:: ensureExist(alert, 'alert');\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._storageKey = 'audioSettings';\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getStorageReducer(this.actionTypes),\n    });\n    this._reducer = getAudioSettingsReducer(this.actionTypes);\n\n    this.addSelector('availableOutputDevices',\n      () => this.state.availableDevices,\n      devices => filter(device => device.kind === 'audiooutput', devices),\n    );\n    this.addSelector('availableInputDevices',\n      () => this.state.availableDevices,\n      devices => filter(device => device.kind === 'audioinput', devices),\n    );\n  }\n\n  initializeProxy() {\n    // Check audio permissions everytime app client starts\n    if (this.supportDevices) {\n      this._checkDevices();\n    }\n    this.store.subscribe(() => {\n      if (\n        this.ready &&\n        this._auth.loggedIn &&\n        this._rolesAndPermissions.webphoneEnabled &&\n        !this.userMedia\n      ) {\n        // Make sure it only prompts once\n        if (this.hasAutoPrompted) return;\n        this.getUserMedia();\n        this.markAutoPrompted();\n      }\n    });\n  }\n\n  @proxify\n  async markAutoPrompted() {\n    this.store.dispatch({\n      type: this.actionTypes.autoPrompted\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n    if (\n      navigator &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.addEventListener\n    ) {\n      navigator.mediaDevices.addEventListener('devicechange', () => {\n        this._checkDevices();\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      this._storage.ready &&\n      this._auth.ready &&\n      this._rolesAndPermissions.ready\n    );\n  }\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (\n        !this._auth.ready ||\n        !this._storage.ready ||\n        !this._rolesAndPermissions.ready\n      )\n    );\n  }\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      if (this.supportDevices) {\n        await this._checkDevices();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async _checkDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    this.store.dispatch({\n      type: this.actionTypes.setAvailableDevices,\n      devices: devices.map(d => d.toJSON()),\n    });\n  }\n\n  async getUserMedia() {\n    if (!navigator.mediaDevices.getUserMedia) {\n      return;\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      this._onGetUserMediaSuccess();\n      if (typeof stream.getTracks === 'function') {\n        stream.getTracks().forEach((track) => {\n          track.stop();\n        });\n      } else if (typeof stream.stop === 'function') {\n        stream.stop();\n      }\n    } catch (error) {\n      this.onGetUserMediaError(error);\n    }\n  }\n\n  @proxify\n  async _onGetUserMediaSuccess() {\n    const userMediaAlert = find(\n      item => item.message === audioSettingsErrors.userMediaPermission,\n      this._alert.messages,\n    );\n    if (userMediaAlert) {\n      this._alert.dismiss(userMediaAlert.id);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaSuccess,\n    });\n    this._checkDevices();\n  }\n\n  @proxify\n  async onGetUserMediaError(error) {\n    this.store.dispatch({\n      type: this.actionTypes.getUserMediaError,\n      error,\n    });\n    this._alert.danger({\n      message: audioSettingsErrors.userMediaPermission,\n      allowDuplicates: false,\n    });\n  }\n\n  @proxify\n  async showAlert() {\n    if (!this.userMedia) {\n      this._alert.danger({\n        message: audioSettingsErrors.userMediaPermission,\n        allowDuplicates: false,\n        ttl: 30 * 1000,\n      });\n    }\n  }\n\n  @proxify\n  async setData({\n    dialButtonVolume = this.dialButtonVolume,\n    dialButtonMuted = this.dialButtonMuted,\n    ringtoneVolume = this.ringtoneVolume,\n    ringtoneMuted = this.ringtoneMuted,\n    callVolume = this.callVolume,\n    outputDeviceId = this.outputDeviceId,\n    inputDeviceId = this.inputDeviceId,\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    });\n  }\n\n  get outputDeviceId() {\n    return this._storage.getItem(this._storageKey).outputDeviceId;\n  }\n  get outputDevice() {\n    return find(device => (\n      device.kind === 'audiooutput' &&\n      device.deviceId === this.outputDeviceId\n    ), this.availableDevices);\n  }\n  get inputDeviceId() {\n    return this._storage.getItem(this._storageKey).inputDeviceId;\n  }\n  get inputDevice() {\n    return find(device => (\n      device.kind === 'audioinput' &&\n      device.deviceId === this.inputDeviceId\n    ), this.availableDevices);\n  }\n  get supportDevices() {\n    return !!(\n      HTMLMediaElement.prototype.setSinkId &&\n      navigator.mediaDevices &&\n      navigator.mediaDevices.enumerateDevices\n    );\n  }\n  get availableDevices() {\n    return this.state.availableDevices;\n  }\n  get availableOutputDevices() {\n    return this._selectors.availableOutputDevices();\n  }\n  get availableInputDevices() {\n    return this._selectors.availableInputDevices();\n  }\n\n  get cacheData() {\n    return this._storage.getItem(this._storageKey) || {};\n  }\n\n  get dialButtonVolume() {\n    return this.cacheData.dialButtonVolume;\n  }\n  get dialButtonMuted() {\n    return this.cacheData.dialButtonMuted;\n  }\n  get ringtoneVolume() {\n    return this.cacheData.ringtoneVolume;\n  }\n  get ringtoneMuted() {\n    return this.cacheData.ringtoneMuted;\n  }\n  get callVolume() {\n    return this.cacheData.callVolume;\n  }\n\n  get userMedia() {\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    if (isFirefox) {\n      return this.state.userMedia || this.availableDevices.length;\n    }\n    // this detection method may not work in the future\n    // currently there is no good way to detect this\n    return !!(\n      this.availableDevices.length &&\n      this.availableDevices[0].label !== ''\n    );\n  }\n\n  get hasAutoPrompted() {\n    return this.cacheData.hasAutoPrompted;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}