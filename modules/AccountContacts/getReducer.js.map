{"version":3,"sources":["modules/AccountContacts/getReducer.js"],"names":["getProfileImagesReducer","getContactPresencesReducer","getContactsReducer","types","state","type","imageId","imageUrl","ttl","fetchImageSuccess","data","forEach","key","Date","now","timestamp","URL","revokeObjectURL","resetSuccess","presenceMap","batchFetchPresenceSuccess","presence","status","profileImages","presences"],"mappings":";;;;;;;;;;QAGgBA,uB,GAAAA,uB;QAgCAC,0B,GAAAA,0B;kBA0BQC,kB;;AA7DxB;;AACA;;;;;;AAEO,SAASF,uBAAT,CAAiCG,KAAjC,EAAwC;AAC7C,SAAO,YAED;AAAA,QAFEC,KAEF,uEAFU,EAEV;AAAA;AAAA,QADJC,IACI,QADJA,IACI;AAAA,QADEC,OACF,QADEA,OACF;AAAA,QADWC,QACX,QADWA,QACX;AAAA,QADqBC,GACrB,QADqBA,GACrB;;AACJ,YAAQH,IAAR;AACE,WAAKF,MAAMM,iBAAX;AAA8B;AAC5B,cAAMC,OAAO,EAAb;AACA,8BAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,KAAKC,GAAL,KAAaV,MAAMQ,GAAN,EAAWG,SAAxB,GAAoCP,GAAxC,EAA6C;AAC3CE,mBAAKE,GAAL,IAAYR,MAAMQ,GAAN,CAAZ;AACD,aAFD,MAEO;AACLI,kBAAIC,eAAJ,CAAoBb,MAAMQ,GAAN,EAAWL,QAA/B;AACD;AACF,WAND;AAOAG,eAAKJ,OAAL,IAAgB;AACdC,8BADc;AAEdQ,uBAAWF,KAAKC,GAAL;AAFG,WAAhB;AAIA,iBAAOJ,IAAP;AACD;AACD,WAAKP,MAAMe,YAAX;AAAyB;AACvB,8BAAYd,KAAZ,EAAmBO,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClCI,gBAAIC,eAAJ,CAAoBb,MAAMQ,GAAN,EAAWL,QAA/B;AACD,WAFD;AAGA,iBAAO,EAAP;AACD;AACD;AACE,eAAOH,KAAP;AAvBJ;AAyBD,GA5BD;AA6BD;;AAEM,SAASH,0BAAT,CAAoCE,KAApC,EAA2C;AAChD,SAAO,YAAiD;AAAA,QAAhDC,KAAgD,uEAAxC,EAAwC;AAAA;AAAA,QAAlCC,IAAkC,SAAlCA,IAAkC;AAAA,kCAA5Bc,WAA4B;AAAA,QAA5BA,WAA4B,qCAAd,EAAc;AAAA,QAAVX,GAAU,SAAVA,GAAU;;AACtD,YAAQH,IAAR;AACE,WAAKF,MAAMiB,yBAAX;AAAsC;AACpC,cAAMV,OAAO,EAAb;AACA,8BAAYN,KAAZ,EAAmBO,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAClC,gBAAIC,KAAKC,GAAL,KAAaV,MAAMQ,GAAN,EAAWG,SAAxB,GAAoCP,GAAxC,EAA6C;AAC3CE,mBAAKE,GAAL,IAAYR,MAAMQ,GAAN,CAAZ;AACD;AACF,WAJD;AAKA,8BAAYO,WAAZ,EAAyBR,OAAzB,CAAiC,UAACC,GAAD,EAAS;AACxCF,iBAAKE,GAAL,IAAY;AACVS,wBAAUF,YAAYP,GAAZ,CADA;AAEVG,yBAAWF,KAAKC,GAAL;AAFD,aAAZ;AAID,WALD;AAMA,iBAAOJ,IAAP;AACD;AACD,WAAKP,MAAMe,YAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOd,KAAP;AAnBJ;AAqBD,GAtBD;AAuBD;;AAEc,SAASF,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,SAAO,4BAAgB;AACrBmB,YAAQ,sCAAuBnB,KAAvB,CADa;AAErBoB,mBAAevB,wBAAwBG,KAAxB,CAFM;AAGrBqB,eAAWvB,2BAA2BE,KAA3B;AAHU,GAAhB,CAAP;AAKD","file":"getReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getProfileImagesReducer(types) {\n  return (state = {}, {\n    type, imageId, imageUrl, ttl\n  }) => {\n    switch (type) {\n      case types.fetchImageSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          } else {\n            URL.revokeObjectURL(state[key].imageUrl);\n          }\n        });\n        data[imageId] = {\n          imageUrl,\n          timestamp: Date.now(),\n        };\n        return data;\n      }\n      case types.resetSuccess: {\n        Object.keys(state).forEach((key) => {\n          URL.revokeObjectURL(state[key].imageUrl);\n        });\n        return {};\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getContactPresencesReducer(types) {\n  return (state = {}, { type, presenceMap = {}, ttl }) => {\n    switch (type) {\n      case types.batchFetchPresenceSuccess: {\n        const data = {};\n        Object.keys(state).forEach((key) => {\n          if (Date.now() - state[key].timestamp < ttl) {\n            data[key] = state[key];\n          }\n        });\n        Object.keys(presenceMap).forEach((key) => {\n          data[key] = {\n            presence: presenceMap[key],\n            timestamp: Date.now(),\n          };\n        });\n        return data;\n      }\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getContactsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    profileImages: getProfileImagesReducer(types),\n    presences: getContactPresencesReducer(types),\n  });\n}\n"]}