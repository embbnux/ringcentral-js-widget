{"version":3,"sources":["modules/Locale/index.js"],"names":["Locale","deps","dep","optional","defaultLocale","DEFAULT_LOCALE","detectBrowser","polling","pollingInterval","options","_defaultLocale","_detectBrowser","_polling","_pollingInterval","setLocale","browserLocale","store","dispatch","type","actionTypes","initSuccess","_syncBrowserLocale","debugMode","currentLocale","setTimeout","proxyInit","_setLocale","proxyInitSuccess","subscribe","state","proxyState","proxyLocale","syncProxyLocale","locale","toggleDebugMode","PSEUDO_LOCALE","I18n","formatMessage","setup","setLocaleSuccess","setLocaleError","error","Enum","moduleActionTypes","proxyActionTypes","status","_transport","RcModule","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AAIA;;;;AACA;;;;AACA;;AACA;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAOqBA,M,WAHpB,gBAAO;AACNC,QAAM,CAAC,EAAEC,KAAK,eAAP,EAAwBC,UAAU,IAAlC,EAAD;AADA,CAAP,C;;;AAIC;;;;;AAKA,oBAMQ;AAAA,mFAAJ,EAAI;;AAAA,kCALNC,aAKM;AAAA,QALNA,aAKM,sCALUC,oBAKV;AAAA,kCAJNC,aAIM;AAAA,QAJNA,aAIM,sCAJU,IAIV;AAAA,4BAHNC,OAGM;AAAA,QAHNA,OAGM,gCAHI,KAGJ;AAAA,oCAFNC,eAEM;AAAA,QAFNA,eAEM,wCAFY,IAEZ;AAAA,QADHC,OACG;AAAA;;AAAA,iKAEDA,OAFC;;AAIN,UAAKC,cAAL,GAAsBN,aAAtB;AACA,UAAKO,cAAL,GAAsBL,aAAtB;AACA,UAAKM,QAAL,GAAgBL,OAAhB;AACA,UAAKM,gBAAL,GAAwBL,eAAxB;AAPM;AAQP;;;;;;;;;;;uBA8BO,KAAKM,SAAL,CACJ,KAAKH,cAAL,GACE,KAAKI,aADP,GAEE,KAAKL,cAHH,C;;;AAKN,qBAAKM,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBC;AADL,iBAApB;AAGA,oBAAI,KAAKR,QAAT,EAAmB;AACjB,uBAAKS,kBAAL;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;sBAGG,CAAC,KAAKC,SAAN,IAAmB,KAAKP,aAAL,KAAuB,KAAKQ,a;;;;;;uBAC3C,KAAKT,SAAL,CAAe,KAAKC,aAApB,C;;;AAERS,2BAAW;AAAA,yBAAM,OAAKH,kBAAL,EAAN;AAAA,iBAAX,EAA4C,KAAKR,gBAAjD;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,qBAAKG,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBM;AADL,iBAApB;;uBAGM,KAAKC,UAAL,CAAgB,KAAKH,aAArB,C;;;AACN,qBAAKP,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBQ;AADL,iBAApB;AAGA,qBAAKX,KAAL,CAAWY,SAAX,0EAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,gCACf,OAAKC,KAAL,CAAWN,aAAX,KAA6B,OAAKO,UAAL,CAAgBC,WAD9B;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAEX,OAAKL,UAAL,CAAgB,OAAKG,KAAL,CAAWN,aAA3B,CAFW;;AAAA;AAGjB,iCAAKP,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kCAAM,OAAKC,WAAL,CAAiBa,eADL;AAElBC,oCAAQ,OAAKJ,KAAL,CAAWN;AAFD,2BAApB;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB;;;;;;;;;;;;;;;;;AAWF;;;;;;;;;;;;AAiCE,qBAAKP,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBe,eADL;AAElBZ,6BAAW,KAAKA;AAFE,iBAApB;AAIA,oBAAI,KAAKA,SAAT,EAAoB;AAClB,uBAAKR,SAAL,CAAeqB,mBAAf;AACD;;;;;;;;;;;;;;;;;;;6GAGcF,M;;;;;;uBACTG,eAAKtB,SAAL,CAAemB,MAAf,C;;;AACNI,wCAAcC,KAAd,CAAoB;AAClBL,0BAAQ,KAAKV,aAAL,KAAuBY,mBAAvB,GAAuC9B,oBAAvC,GAAwD,KAAKkB;AADnD,iBAApB;;;;;;;;;;;;;;;;;AAKF;;;;;;;;;;;;6GASgBU,M;;;;;AACd,qBAAKjB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBL,SADL;AAElBmB;AAFkB,iBAApB;;;uBAKQ,KAAKP,UAAL,CAAgBO,MAAhB,C;;;AACN,qBAAKjB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBoB,gBADL;AAElBN;AAFkB,iBAApB;;;;;;;;AAKA,qBAAKjB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKC,WAAL,CAAiBqB,cADL;AAElBC;AAFkB,iBAApB;;;;;;;;;;;;;;;;;;wBAxIe;AACjB,aAAO,IAAIC,cAAJ,4CACF,oBAAYC,2BAAZ,CADE,oCAEF,oBAAYC,0BAAZ,CAFE,IAGL,WAHK,EAIL,kBAJK,EAKL,gBALK,EAML,iBANK,EAOL,iBAPK,IAQJ,QARI,CAAP;AASD;;;wBAEa;AACZ,aAAO,4BAAgB;AACrBC,gBAAQ,sCAAuB,KAAK1B,WAA5B,CADa;AAErBI,uBAAe,uCAAwB,KAAKJ,WAA7B,CAFM;AAGrBG,mBAAW,kCAAmB,KAAKH,WAAxB;AAHU,OAAhB,CAAP;AAKD;;;wBAEkB;AACjB,aAAO,4BAAgB;AACrB0B,gBAAQ,qCAAsB,KAAK1B,WAA3B,CADa;AAErBY,qBAAa,qCAAsB,KAAKZ,WAA3B;AAFQ,OAAhB,CAAP;AAID;;;wBA4CmB;AAClB,aAEI,KAAK2B,UAAL,IACA,KAAKhB,UADL,KAEC,KAAKA,UAAL,CAAgBC,WAAhB,IAA+B,KAAKrB,cAFrC,CADF,IAKA,KAAKmB,KAAL,CAAWN,aALX,IAMA,KAAKb,cAPP;AASD;;;wBAEmB;AAClB,aAAO,mCAAoB,KAAKA,cAAzB,CAAP;AACD;;;wBAEY;AACX,aAAQ,KAAKoB,UAAL,IAAmB,KAAKA,UAAL,CAAgBe,MAApC,IAA+C,KAAKhB,KAAL,CAAWgB,MAAjE;AACD;;;wBAEiB;AAChB,aAAO,KAAKf,UAAL,CAAgBe,MAAvB;AACD;;;wBAEe;AACd,aAAO,KAAKhB,KAAL,CAAWP,SAAlB;AACD;;;EArHiCyB,kB,qEAuHjCC,iB,iKA0BAA,iB;kBAjJkBhD,M","file":"index.js","sourcesContent":["import formatMessage from 'format-message';\nimport { combineReducers } from 'redux';\nimport I18n, {\n  DEFAULT_LOCALE,\n  PSEUDO_LOCALE,\n} from '@ringcentral-integration/i18n';\nimport RcModule from '../../lib/RcModule';\nimport proxify from '../../lib/proxy/proxify';\nimport { Module } from '../../lib/di';\nimport {\n  getCurrentLocaleReducer,\n  getProxyLocaleReducer,\n  getToggleDebugMode\n} from './reducers';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport getProxyStatusReducer from '../../lib/getProxyStatusReducer';\nimport detectBrowserLocale from '../../lib/detectBrowserLocale';\nimport Enum from '../../lib/Enum';\nimport moduleActionTypes from '../../enums/moduleActionTypes';\nimport proxyActionTypes from '../../enums/proxyActionTypes';\n\n/**\n * @class\n * @description Locale managing module\n */\n@Module({\n  deps: [{ dep: 'LocaleOptions', optional: true }]\n})\nexport default class Locale extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {String} params.defaultLocale - default 'en-US'\n   */\n  constructor({\n    defaultLocale = DEFAULT_LOCALE,\n    detectBrowser = true,\n    polling = false,\n    pollingInterval = 2000,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n    });\n    this._defaultLocale = defaultLocale;\n    this._detectBrowser = detectBrowser;\n    this._polling = polling;\n    this._pollingInterval = pollingInterval;\n  }\n\n  get _actionTypes() {\n    return new Enum([\n      ...Object.keys(moduleActionTypes),\n      ...Object.keys(proxyActionTypes),\n      'setLocale',\n      'setLocaleSuccess',\n      'setLocaleError',\n      'syncProxyLocale',\n      'toggleDebugMode',\n    ], 'locale');\n  }\n\n  get reducer() {\n    return combineReducers({\n      status: getModuleStatusReducer(this.actionTypes),\n      currentLocale: getCurrentLocaleReducer(this.actionTypes),\n      debugMode: getToggleDebugMode(this.actionTypes),\n    });\n  }\n\n  get proxyReducer() {\n    return combineReducers({\n      status: getProxyStatusReducer(this.actionTypes),\n      proxyLocale: getProxyLocaleReducer(this.actionTypes),\n    });\n  }\n\n  async initialize() {\n    await this.setLocale(\n      this._detectBrowser ?\n        this.browserLocale :\n        this._defaultLocale\n    );\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n    if (this._polling) {\n      this._syncBrowserLocale();\n    }\n  }\n  async _syncBrowserLocale() {\n    if (!this.debugMode && this.browserLocale !== this.currentLocale) {\n      await this.setLocale(this.browserLocale);\n    }\n    setTimeout(() => this._syncBrowserLocale(), this._pollingInterval);\n  }\n\n  async initializeProxy() {\n    this.store.dispatch({\n      type: this.actionTypes.proxyInit,\n    });\n    await this._setLocale(this.currentLocale);\n    this.store.dispatch({\n      type: this.actionTypes.proxyInitSuccess,\n    });\n    this.store.subscribe(async () => {\n      if (this.state.currentLocale !== this.proxyState.proxyLocale) {\n        await this._setLocale(this.state.currentLocale);\n        this.store.dispatch({\n          type: this.actionTypes.syncProxyLocale,\n          locale: this.state.currentLocale,\n        });\n      }\n    });\n  }\n\n  /**\n   * @property {String} currentLocale\n   */\n  get currentLocale() {\n    return (\n      (\n        this._transport &&\n        this.proxyState &&\n        (this.proxyState.proxyLocale || this._defaultLocale)\n      ) ||\n      this.state.currentLocale ||\n      this._defaultLocale\n    );\n  }\n\n  get browserLocale() {\n    return detectBrowserLocale(this._defaultLocale);\n  }\n\n  get status() {\n    return (this.proxyState && this.proxyState.status) || this.state.status;\n  }\n\n  get proxyStatus() {\n    return this.proxyState.status;\n  }\n\n  get debugMode() {\n    return this.state.debugMode;\n  }\n\n  @proxify\n  async toggleDebugMode() {\n    this.store.dispatch({\n      type: this.actionTypes.toggleDebugMode,\n      debugMode: this.debugMode,\n    });\n    if (this.debugMode) {\n      this.setLocale(PSEUDO_LOCALE);\n    }\n  }\n\n  async _setLocale(locale) {\n    await I18n.setLocale(locale);\n    formatMessage.setup({\n      locale: this.currentLocale === PSEUDO_LOCALE ? DEFAULT_LOCALE : this.currentLocale,\n    });\n  }\n\n  /**\n   *  @function\n   *  @description Sets the desired locale as the current locale. This will also\n   *    set all I18n instances to the same locale, as well as set formatMessage to use\n   *    the same locale.\n   *  @param {String} locale\n   *  @return {Promise}\n   */\n  @proxify\n  async setLocale(locale) {\n    this.store.dispatch({\n      type: this.actionTypes.setLocale,\n      locale,\n    });\n    try {\n      await this._setLocale(locale);\n      this.store.dispatch({\n        type: this.actionTypes.setLocaleSuccess,\n        locale,\n      });\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actionTypes.setLocaleError,\n        error,\n      });\n    }\n  }\n}\n"]}