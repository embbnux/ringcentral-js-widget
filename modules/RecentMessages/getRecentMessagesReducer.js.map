{"version":3,"sources":["modules/RecentMessages/getRecentMessagesReducer.js"],"names":["getContactsReducer","getMessagesReducer","getMessageStatusReducer","getRecentMessagesReducer","types","state","type","contact","sessionId","contactId","String","id","loadSuccess","loadReset","_","rest","messages","initLoad","messageStatus","loading","loaded","status","contacts"],"mappings":";;;;;;;;;;;;;;;;;;QAIgBA,kB,GAAAA,kB;QAgBAC,kB,GAAAA,kB;QAkBAC,uB,GAAAA,uB;kBAcQC,wB;;AApDxB;;AACA;;;;AACA;;;;;;AAEO,SAASH,kBAAT,CAA4BI,KAA5B,EAAmC;AACxC,SAAO,YAA8C;AAAA,QAA7CC,KAA6C,uEAArC,EAAqC;AAAA;AAAA,QAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AACnD,QAAMC,YAAYC,OAAOH,WAAWA,QAAQI,EAA1B,CAAlB;AACA,QAAIL,SAASF,MAAMQ,WAAnB,EAAgC;AAC9B,wCACKP,KADL,oCAEGG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SAF7C,EAEyDF,OAFzD;AAID,KALD,MAKO,IAAID,SAASF,MAAMS,SAAnB,EAA8B;AAAA,UAC4BC,CAD5B,GAC2CT,KAD3C,CAC1BG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SADhB;AAAA,UACkCM,IADlC,0CAC2CV,KAD3C,GAC1BG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SADhB;;AAEnC,aAAOM,IAAP;AACD;AACD,WAAOV,KAAP;AACD,GAZD;AAaD;;AAEM,SAASJ,kBAAT,CAA4BG,KAA5B,EAAmC;AACxC,SAAO,YAED;AAAA,QAFEC,KAEF,uEAFU,EAEV;AAAA;AAAA,QADJC,IACI,SADJA,IACI;AAAA,QADEC,OACF,SADEA,OACF;AAAA,QADWS,QACX,SADWA,QACX;AAAA,QADqBR,SACrB,SADqBA,SACrB;;AACJ,QAAMC,YAAYC,OAAOH,WAAWA,QAAQI,EAA1B,CAAlB;AACA,QAAIL,SAASF,MAAMQ,WAAnB,EAAgC;AAC9B,wCACKP,KADL,oCAEGG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SAF7C,EAEyDO,QAFzD;AAID,KALD,MAKO,IAAIV,SAASF,MAAMS,SAAnB,EAA8B;AAAA,UAC4BC,CAD5B,GAC2CT,KAD3C,CAC1BG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SADhB;AAAA,UACkCM,IADlC,0CAC2CV,KAD3C,GAC1BG,YAAeC,SAAf,SAA4BD,SAA5B,GAA0CC,SADhB;;AAEnC,aAAOM,IAAP;AACD;AACD,WAAOV,KAAP;AACD,GAdD;AAeD;;AAEM,SAASH,uBAAT,CAAiCE,KAAjC,EAAwC;AAC7C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,MAAMa,QAAX;AACE,eAAOC,wBAAcC,OAArB;AACF,WAAKf,MAAMS,SAAX;AACA,WAAKT,MAAMQ,WAAX;AACE,eAAOM,wBAAcE,MAArB;AACF;AACE,eAAOf,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASF,wBAAT,CAAkCC,KAAlC,EAAyC;AACtD,SAAO,4BAAgB;AACrBiB,YAAQ,sCAAuBjB,KAAvB,CADa;AAErBkB,cAAUtB,mBAAmBI,KAAnB,CAFW;AAGrBY,cAAUf,mBAAmBG,KAAnB,CAHW;AAIrBc,mBAAehB,wBAAwBE,KAAxB;AAJM,GAAhB,CAAP;AAMD","file":"getRecentMessagesReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport messageStatus from './messageStatus';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getContactsReducer(types) {\n  return (state = {}, { type, contact, sessionId }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: contact\n      };\n    } else if (type === types.loadReset) {\n      const { [sessionId ? `${contactId}-${sessionId}` : contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessagesReducer(types) {\n  return (state = {}, {\n    type, contact, messages, sessionId\n  }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: messages\n      };\n    } else if (type === types.loadReset) {\n      const { [sessionId ? `${contactId}-${sessionId}` : contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessageStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return messageStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return messageStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentMessagesReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    contacts: getContactsReducer(types),\n    messages: getMessagesReducer(types),\n    messageStatus: getMessageStatusReducer(types)\n  });\n}\n"]}