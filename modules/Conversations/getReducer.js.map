{"version":3,"sources":["modules/Conversations/getReducer.js"],"names":["getSearchInputReducer","getTypeFilterReducer","getOldConversationsReducer","getFetchConversationsStatusReducer","getCurrentPageReducer","getCurrentConversationIdReducer","getOldMessagesReducer","getFetchMessagesStatusReducer","getMessageTextsReducer","getConversationStatusReducer","getReducer","types","state","type","input","updateSearchInput","resetSuccess","messageTypes","all","typeFilter","updateTypeFilter","records","conversationId","fetchOldConverstaionsSuccess","concat","map","normalizeRecord","deleteConversation","filter","c","cleanOldConversatioans","initSuccess","status","idle","fetchOldConverstaions","fetching","fetchOldConverstaionsError","increaseCurrentPage","resetCurrentPage","updateCurrentConversationId","fetchOldMessagesSuccess","fetchOldMessages","fetchOldMessagesError","text","updateMessageText","msg","removeMessageText","reply","pushing","replySuccess","replyError","searchInput","oldConversations","currentPage","fetchConversationsStatus","currentConversationId","oldMessages","fetchMessagesStatus","messageTexts","conversationStatus"],"mappings":"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","file":"getReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nimport messageTypes from '../../enums/messageTypes';\nimport { normalizeRecord } from '../../lib/messageHelper';\nimport status from './status';\n\nexport function getSearchInputReducer(types) {\n  return (state = '', { type, input = '' }) => {\n    switch (type) {\n      case types.updateSearchInput:\n        return input;\n      case types.resetSuccess:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTypeFilterReducer(types) {\n  return (state = messageTypes.all, { type, typeFilter }) => {\n    switch (type) {\n      case types.updateTypeFilter:\n        return typeFilter;\n      case types.resetSuccess:\n        return messageTypes.all;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOldConversationsReducer(types) {\n  return (state = [], { type, records, conversationId }) => {\n    switch (type) {\n      case types.fetchOldConverstaionsSuccess:\n        return [].concat(state).concat(records.map(normalizeRecord));\n      case types.deleteConversation:\n        return state.filter(c => c.conversationId !== conversationId);\n      case types.cleanOldConversatioans:\n      case types.resetSuccess:\n      case types.updateTypeFilter:\n      case types.initSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFetchConversationsStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.fetchOldConverstaions:\n        return status.fetching;\n      case types.fetchOldConverstaionsSuccess:\n      case types.fetchOldConverstaionsError:\n      case types.resetSuccess:\n      case types.updateTypeFilter:\n      case types.initSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentPageReducer(types) {\n  return (state = 1, { type }) => {\n    switch (type) {\n      case types.increaseCurrentPage:\n      case types.fetchOldConverstaionsSuccess:\n        return state + 1;\n      case types.updateTypeFilter:\n      case types.resetSuccess:\n      case types.initSuccess:\n      case types.resetCurrentPage:\n        return 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getCurrentConversationIdReducer(types) {\n  return (state = null, { type, conversationId }) => {\n    switch (type) {\n      case types.updateCurrentConversationId:\n        return conversationId;\n      case types.initSuccess:\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getOldMessagesReducer(types) {\n  return (state = [], { type, records }) => {\n    switch (type) {\n      case types.fetchOldMessagesSuccess:\n        return [].concat(state).concat(records.map(normalizeRecord));\n      case types.updateCurrentConversationId:\n      case types.resetSuccess:\n      case types.initSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFetchMessagesStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.fetchOldMessages:\n        return status.fetching;\n      case types.fetchOldMessagesSuccess:\n      case types.fetchOldMessagesError:\n      case types.updateCurrentConversationId:\n      case types.resetSuccess:\n      case types.initSuccess:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getMessageTextsReducer(types) {\n  return (state = [], { type, text, conversationId }) => {\n    switch (type) {\n      case types.updateMessageText:\n        return [{ conversationId, text }].concat(\n          state.filter(msg => typeof msg === 'object' && msg.conversationId !== conversationId),\n        );\n      case types.removeMessageText:\n        return state.filter(msg => typeof msg === 'object' && msg.conversationId !== conversationId);\n      case types.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConversationStatusReducer(types) {\n  return (state = status.idle, { type }) => {\n    switch (type) {\n      case types.reply:\n        return status.pushing;\n      case types.replySuccess:\n      case types.replyError:\n        return status.idle;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    searchInput: getSearchInputReducer(types),\n    typeFilter: getTypeFilterReducer(types),\n    oldConversations: getOldConversationsReducer(types),\n    currentPage: getCurrentPageReducer(types),\n    fetchConversationsStatus: getFetchConversationsStatusReducer(types),\n    currentConversationId: getCurrentConversationIdReducer(types),\n    oldMessages: getOldMessagesReducer(types),\n    fetchMessagesStatus: getFetchMessagesStatusReducer(types),\n    messageTexts: getMessageTextsReducer(types),\n    conversationStatus: getConversationStatusReducer(types),\n  });\n}\n"]}