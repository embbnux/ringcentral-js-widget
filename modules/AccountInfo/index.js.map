{"version":3,"sources":["modules/AccountInfo/index.js"],"names":["DEFAULT_MASK","join","AccountInfo","deps","dep","optional","client","rolesAndPermissions","alert","options","name","fetchFunction","mask","account","get","readyCheckFn","_rolesAndPermissions","ready","ensureExist","_alert","addSelector","data","_auth","loginStatus","loggedIn","_hasPermission","logout","danger","message","permissionsMessages","insufficientPrivilege","ttl","_selectors","info","id","serviceInfo","brand","homeCountry","country","isoCode","mainNumber","permissions","ReadCompanyInfo","DataFetcher"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,CACnB,sBADmB,EAEnB,8BAFmB,EAGnB,6CAHmB,wBAIC,CAClB,wBADkB,EAElB,iBAFkB,EAGlB,sBAHkB,EAIlB,8BAJkB,EAKlB,YALkB,EAMlBC,IANkB,CAMb,GANa,CAJD,QAWnBA,IAXmB,CAWd,GAXc,CAArB;;AAaA;;;;IAYqBC,W,WARpB,gBAAO;AACNC,QAAM,CACJ,QADI,EAEJ,qBAFI,EAGJ,OAHI,EAIJ,EAAEC,KAAK,oBAAP,EAA6BC,UAAU,IAAvC,EAJI;AADA,CAAP,C;;;AASC;;;;;AAKA,6BAKG;AAAA;;AAAA,QAJDC,MAIC,QAJDA,MAIC;AAAA,QAHDC,mBAGC,QAHDA,mBAGC;AAAA,QAFDC,KAEC,QAFDA,KAEC;AAAA,QADEC,OACF;AAAA;;AAAA;AAECC,YAAM,aAFP;AAGCJ,oBAHD;AAICK;AAAA,6FAAe;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAYC,kBAAZ;AAAA;AAAA,yBAAuBN,OAAOO,OAAP,GAAiBC,GAAjB,EAAvB;;AAAA;AAAA;AAAA,gCAA+Cd,YAA/C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAJD;AAKCe,oBAAc;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA;AALf,OAMIR,OANJ;;AASD,UAAKO,oBAAL,GAAmCE,qBAAP,aAAmBX,mBAAnB,EAAwC,qBAAxC,CAA5B;AACA,UAAKY,MAAL,GAAcX,KAAd;;AAEA,UAAKY,WAAL,CACE,MADF,EAEE;AAAA,aAAM,MAAKC,IAAX;AAAA,KAFF,EAGE;AAAA,aAAQA,QAAQ,EAAhB;AAAA,KAHF;AAZC;AAiBF;;;;;;;;;;;;;;sBAKG,KAAKC,KAAL,CAAWC,WAAX,KAA2BA,sBAAYC,QAAvC,IACA,KAAKP,KADL,IAEA,CAAC,KAAKQ,c;;;;;;uBAEA,KAAKH,KAAL,CAAWI,MAAX,E;;;AACN,oBAAI,KAAKP,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAYQ,MAAZ,CAAmB;AACjBC,6BAASC,8BAAoBC,qBADZ;AAEjBC,yBAAK;AAFY,mBAAnB;AAID;;;;;;;;;;;;;;;;;;wBAIM;AACT,aAAO,KAAKC,UAAL,CAAgBC,IAAhB,EAAP;AACD;;;wBAEQ;AACP,aAAO,KAAKA,IAAL,CAAUC,EAAjB;AACD;;;wBAEa;AACZ,aAAO,KAAKD,IAAL,CAAUE,WAAV,IAAyB,KAAKF,IAAL,CAAUE,WAAV,CAAsBC,KAAtB,CAA4BC,WAA5D;AACD;;;wBAEiB;AAChB,aAAQ,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,OAA9B,IAA0C,IAAjD;AACD;;;wBAEuB;AACtB,aAAO,KAAKN,IAAL,CAAUO,UAAjB;AACD;;;wBAEoB;AACnB,aAAO,CAAC,CAAC,KAAKxB,oBAAL,CAA0ByB,WAA1B,CAAsCC,eAA/C;AACD;;;EArEsCC,qB;kBAApBzC,W","file":"index.js","sourcesContent":["import mask from 'json-mask';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport ensureExist from '../../lib/ensureExist';\n\nimport loginStatus from '../Auth/loginStatus';\nimport permissionsMessages from '../RolesAndPermissions/permissionsMessages';\n\nconst DEFAULT_MASK = [\n  'id,mainNumber,status',\n  'operator(id,extensionNumber)',\n  'serviceInfo(brand(id,homeCountry(isoCode)))',\n  `regionalSettings(${[\n    'timezone(id,name,bias)',\n    'homeCountry(id)',\n    'language(localeCode)',\n    'formattingLocale(localeCode)',\n    'timeFormat',\n  ].join(',')})`,\n].join(',');\n\n/**\n * @class\n * @description Accound info managing module.\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    'Alert',\n    { dep: 'AccountInfoOptions', optional: true }\n  ]\n})\nexport default class AccountInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    alert,\n    ...options\n  }) {\n    super({\n      name: 'accountInfo',\n      client,\n      fetchFunction: async () => mask(await client.account().get(), DEFAULT_MASK),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      ...options,\n    });\n\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._alert = alert;\n\n    this.addSelector(\n      'info',\n      () => this.data,\n      data => data || {},\n    );\n  }\n\n  async _onStateChange() {\n    await super._onStateChange();\n    if (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      this.ready &&\n      !this._hasPermission\n    ) {\n      await this._auth.logout();\n      if (this._alert) {\n        this._alert.danger({\n          message: permissionsMessages.insufficientPrivilege,\n          ttl: 0,\n        });\n      }\n    }\n  }\n\n  get info() {\n    return this._selectors.info();\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.info.serviceInfo && this.info.serviceInfo.brand.homeCountry;\n  }\n\n  get countryCode() {\n    return (this.country && this.country.isoCode) || 'US';\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadCompanyInfo;\n  }\n}\n"]}