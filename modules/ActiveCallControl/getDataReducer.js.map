{"version":3,"sources":["modules/ActiveCallControl/getDataReducer.js"],"names":["getDataReducer","updateActiveSessionStatus","state","party","sessionId","newState","muted","standAlone","code","status","direction","id","isOnMute","isOnHold","activeCallControlStatus","hold","isReject","setActiveSessionStatus","activeSession","obj","partyId","getActiveSessionIdReducer","types","type","setActiveSessionId","resetSuccess","removeActiveSession","getRecordingIdsStatusReducer","response","startRecord","stopRecord","recordFail","getActiveSessionsStatusReducer","activeSessionsMap","updateActiveSessions","isOnRecording","mute","unmute","unhold","getTimestampReducer","timestamp","activeSessionId","activeSessionsStatus","recordingIds"],"mappings":"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","file":"getDataReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { isHangUp, isReject } from './helpers';\nimport activeCallControlStatus from '../../enums/activeCallControlStatus';\n\n\nfunction updateActiveSessionStatus({\n  state,\n  party,\n  sessionId\n}) {\n  const newState = { ...state };\n  const {\n    muted,\n    standAlone,\n    status: {\n      code\n    },\n    direction,\n    id,\n  } = party;\n  if (isHangUp(code) && newState[sessionId]) {\n    delete newState[sessionId];\n  } else {\n    if (!newState[sessionId]) {\n      newState[sessionId] = {};\n    }\n    newState[sessionId][id] = {\n      ...newState[sessionId][id],\n      standAlone,\n      sessionId,\n      isOnMute: muted,\n      isOnHold: code === activeCallControlStatus.hold,\n      isReject: isReject({ direction, code })\n    };\n  }\n  return newState;\n}\n\nfunction setActiveSessionStatus(state, activeSession, obj) {\n  const {\n    sessionId,\n    partyId\n  } = activeSession;\n  const newState = { ...state };\n  if (!newState[sessionId]) {\n    newState[sessionId] = {};\n  }\n  newState[sessionId][partyId] = {\n    ...newState[sessionId][partyId],\n    ...obj\n  };\n  return newState;\n}\nfunction getActiveSessionIdReducer(types) {\n  return (state = null, { type, sessionId }) => {\n    switch (type) {\n      case types.setActiveSessionId: {\n        return sessionId;\n      }\n      case types.resetSuccess:\n      case types.removeActiveSession: {\n        return null;\n      }\n      default:\n        return state;\n    }\n  };\n}\nfunction getRecordingIdsStatusReducer(types) {\n  return (state = {}, { type, activeSession, response }) => {\n    switch (type) {\n      case types.startRecord: {\n        const {\n          sessionId,\n          partyId\n        } = activeSession;\n        const newState = { ...state };\n        if (!newState[sessionId]) {\n          newState[sessionId] = {};\n        }\n        newState[sessionId][partyId] = {\n          ...response\n        };\n        return newState;\n      }\n      case types.stopRecord: {\n        const {\n          sessionId,\n        } = activeSession;\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.recordFail:\n      case types.removeActiveSession:\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\nfunction getActiveSessionsStatusReducer(types) {\n  return (state = {}, {\n    type, sessionId, party, activeSessionsMap, activeSession\n  }) => {\n    switch (type) {\n      case types.updateActiveSessions: {\n        let newState = null;\n        for (const sessionId in activeSessionsMap) {\n          if (sessionId) {\n            newState = updateActiveSessionStatus({\n              state,\n              party: activeSessionsMap[sessionId],\n              sessionId\n            });\n          }\n        }\n        return newState;\n      }\n      case types.updateActiveSessionStatus: {\n        return updateActiveSessionStatus({\n          state,\n          party,\n          sessionId\n        });\n      }\n      case types.startRecord:\n      case types.stopRecord: {\n        return setActiveSessionStatus(state, activeSession, { isOnRecording: type === types.startRecord });\n      }\n      case types.mute:\n      case types.unmute: {\n        return setActiveSessionStatus(state, activeSession, { isOnMute: type === types.mute });\n      }\n      case types.hold:\n      case types.unhold: {\n        return setActiveSessionStatus(state, activeSession, { isOnHold: type === types.hold });\n      }\n      case types.removeActiveSession: {\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.resetSuccess: {\n        return {};\n      }\n      default:\n        return state;\n    }\n  };\n}\nfunction getTimestampReducer(types) {\n  return (state = null, { type, timestamp }) => {\n    switch (type) {\n      case types.updateActiveSessions:\n        return timestamp;\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\nexport default function getDataReducer(types) {\n  return combineReducers({\n    activeSessionId: getActiveSessionIdReducer(types),\n    activeSessionsStatus: getActiveSessionsStatusReducer(types),\n    recordingIds: getRecordingIdsStatusReducer(types),\n    timestamp: getTimestampReducer(types),\n  });\n}\n"]}