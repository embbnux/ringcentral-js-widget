{"version":3,"sources":["modules/DialerUI/getReducer.js"],"names":["getToNumberFieldReducer","getRecipientReducer","getReducer","types","state","type","phoneNumber","setToNumberField","loadLastCallState","call","setRecipient","clearToNumberField","resetSuccess","callSuccess","recipient","clearRecipient","reducers","status","toNumberField"],"mappings":";;;;;;;;;;QAGgBA,uB,GAAAA,uB;QAkBAC,mB,GAAAA,mB;kBAiBQC,U;;AAtCxB;;AACA;;;;;;AAEO,SAASF,uBAAT,CAAiCG,KAAjC,EAAwC;AAC7C,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,EAA8B;AAAA;AAAA,QAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,QAAlBC,WAAkB,QAAlBA,WAAkB;;AAC5C,YAAQD,IAAR;AACE,WAAKF,MAAMI,gBAAX;AACA,WAAKJ,MAAMK,iBAAX;AACA,WAAKL,MAAMM,IAAX;AACE,eAAOH,WAAP;AACF,WAAKH,MAAMO,YAAX;AACA,WAAKP,MAAMQ,kBAAX;AACA,WAAKR,MAAMS,YAAX;AACA,WAAKT,MAAMU,WAAX;AACE,eAAO,EAAP;AACF;AACE,eAAOT,KAAP;AAXJ;AAaD,GAdD;AAeD;;AAEM,SAASH,mBAAT,CAA6BE,KAA7B,EAAoC;AACzC,SAAO,YAAuC;AAAA,QAAtCC,KAAsC,uEAA9B,IAA8B;AAAA;AAAA,QAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,QAAhBS,SAAgB,SAAhBA,SAAgB;;AAC5C,YAAQT,IAAR;AACE,WAAKF,MAAMO,YAAX;AACA,WAAKP,MAAMK,iBAAX;AACA,WAAKL,MAAMM,IAAX;AACE,eAAOK,SAAP;AACF,WAAKX,MAAMY,cAAX;AACA,WAAKZ,MAAMS,YAAX;AACA,WAAKT,MAAMU,WAAX;AACE,eAAO,IAAP;AACF;AACE,eAAOT,KAAP;AAVJ;AAYD,GAbD;AAcD;;AAEc,SAASF,UAAT,CAAoBC,KAApB,EAA0C;AAAA,MAAfa,QAAe,uEAAJ,EAAI;;AACvD,SAAO,uDACFA,QADE;AAELC,YAAQ,sCAAuBd,KAAvB,CAFH;AAGLe,mBAAelB,wBAAwBG,KAAxB,CAHV;AAILW,eAAWb,oBAAoBE,KAApB;AAJN,KAAP;AAMD","file":"getReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from 'ringcentral-integration/lib/getModuleStatusReducer';\n\nexport function getToNumberFieldReducer(types) {\n  return (state = '', { type, phoneNumber }) => {\n    switch (type) {\n      case types.setToNumberField:\n      case types.loadLastCallState:\n      case types.call:\n        return phoneNumber;\n      case types.setRecipient:\n      case types.clearToNumberField:\n      case types.resetSuccess:\n      case types.callSuccess:\n        return '';\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRecipientReducer(types) {\n  return (state = null, { type, recipient }) => {\n    switch (type) {\n      case types.setRecipient:\n      case types.loadLastCallState:\n      case types.call:\n        return recipient;\n      case types.clearRecipient:\n      case types.resetSuccess:\n      case types.callSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    toNumberField: getToNumberFieldReducer(types),\n    recipient: getRecipientReducer(types),\n  });\n}\n"]}