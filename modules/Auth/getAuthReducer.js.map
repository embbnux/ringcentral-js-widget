{"version":3,"sources":["modules/Auth/getAuthReducer.js"],"names":["getLoginStatusReducer","getTokenReducer","getFreshLoginReducer","getAuthReducer","types","state","type","loggedIn","refreshTokenValid","login","loginStatus","loggingIn","loginSuccess","refreshSuccess","cancelLogout","loginError","logoutSuccess","logoutError","notLoggedIn","refreshError","logout","loggingOut","beforeLogout","initSuccess","tabSync","token","ownerId","owner_id","endpointId","endpoint_id","accessToken","access_token","expireTime","expire_time","expiresIn","expires_in","status","freshLogin"],"mappings":";;;;;QAIgBA,qB,GAAAA,qB;QAmCAC,e,GAAAA,e;QAwCAC,oB,GAAAA,oB;kBAsBQC,c;;AArGxB;;AACA;;;;AACA;;;;;;AAEO,SAASH,qBAAT,CAA+BI,KAA/B,EAAsC;AAC3C,SAAO,YAAyD;AAAA,QAAxDC,KAAwD,uEAAhD,IAAgD;AAAA;AAAA,QAAxCC,IAAwC,QAAxCA,IAAwC;AAAA,QAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,QAAxBC,iBAAwB,QAAxBA,iBAAwB;;AAC9D,YAAQF,IAAR;AACE,WAAKF,MAAMK,KAAX;AACE,eAAOC,sBAAYC,SAAnB;;AAEF,WAAKP,MAAMQ,YAAX;AACA,WAAKR,MAAMS,cAAX;AACA,WAAKT,MAAMU,YAAX;AACE,eAAOJ,sBAAYH,QAAnB;;AAEF,WAAKH,MAAMW,UAAX;AACA,WAAKX,MAAMY,aAAX;AACA,WAAKZ,MAAMa,WAAX;AACE,eAAOP,sBAAYQ,WAAnB;;AAEF,WAAKd,MAAMe,YAAX;AACE,eAAOX,oBAAoBH,KAApB,GAA4BK,sBAAYQ,WAA/C;;AAEF,WAAKd,MAAMgB,MAAX;AACE,eAAOV,sBAAYW,UAAnB;;AAEF,WAAKjB,MAAMkB,YAAX;AACE,eAAOZ,sBAAYY,YAAnB;;AAEF,WAAKlB,MAAMmB,WAAX;AACA,WAAKnB,MAAMoB,OAAX;AACE,eAAOjB,WAAWG,sBAAYH,QAAvB,GAAkCG,sBAAYQ,WAArD;;AAEF;AACE,eAAOb,KAAP;AA5BJ;AA8BD,GA/BD;AAgCD;;AAEM,SAASJ,eAAT,CAAyBG,KAAzB,EAAgC;AACrC,SAAO,YAAoD;AAAA,QAAnDC,KAAmD,uEAA3C,EAA2C;AAAA;AAAA,QAArCC,IAAqC,SAArCA,IAAqC;AAAA,QAA/BmB,KAA+B,SAA/BA,KAA+B;AAAA,QAAxBjB,iBAAwB,SAAxBA,iBAAwB;;AACzD,YAAQF,IAAR;AACE,WAAKF,MAAMQ,YAAX;AACA,WAAKR,MAAMS,cAAX;AACE,eAAO;AACLa,mBAASD,MAAME,QADV;AAELC,sBAAYH,MAAMI,WAFb;AAGLC,uBAAaL,MAAMM,YAHd;AAILC,sBAAYP,MAAMQ,WAJb;AAKLC,qBAAWT,MAAMU;AALZ,SAAP;AAOF,WAAK/B,MAAMW,UAAX;AACA,WAAKX,MAAMY,aAAX;AACA,WAAKZ,MAAMa,WAAX;AACE,eAAO,EAAP;;AAEF,WAAKb,MAAMe,YAAX;AACE,YAAIX,iBAAJ,EAAuB;AACrB,iBAAOH,KAAP;AACD;AACD,eAAO,EAAP;AACF,WAAKD,MAAMmB,WAAX;AACA,WAAKnB,MAAMoB,OAAX;AACE,YAAIC,KAAJ,EAAW;AACT,iBAAO;AACLC,qBAASD,MAAME,QADV;AAELC,wBAAYH,MAAMI,WAFb;AAGLC,yBAAaL,MAAMM,YAHd;AAILC,wBAAYP,MAAMQ,WAJb;AAKLC,uBAAWT,MAAMU;AALZ,WAAP;AAOD;AACD,eAAO,EAAP;AACF;AACE,eAAO9B,KAAP;AAjCJ;AAmCD,GApCD;AAqCD;;AAEM,SAASH,oBAAT,CAA8BE,KAA9B,EAAqC;AAC1C,SAAO,YAAsC;AAAA,QAArCC,KAAqC,uEAA7B,IAA6B;AAAA;AAAA,QAArBC,IAAqB,SAArBA,IAAqB;AAAA,QAAfC,QAAe,SAAfA,QAAe;;AAC3C,YAAQD,IAAR;AACE,WAAKF,MAAMmB,WAAX;AACA,WAAKnB,MAAMoB,OAAX;AACE,eAAOjB,WAAW,KAAX,GAAmB,IAA1B;;AAEF,WAAKH,MAAMK,KAAX;AACE,eAAO,IAAP;;AAEF,WAAKL,MAAMW,UAAX;AACA,WAAKX,MAAMe,YAAX;AACA,WAAKf,MAAMY,aAAX;AACA,WAAKZ,MAAMa,WAAX;AACE,eAAO,IAAP;;AAEF;AACE,eAAOZ,KAAP;AAfJ;AAiBD,GAlBD;AAmBD;;AAEc,SAASF,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,SAAO,4BAAgB;AACrBgC,YAAQ,sCAAuBhC,KAAvB,CADa;AAErBM,iBAAaV,sBAAsBI,KAAtB,CAFQ;AAGrBiC,gBAAYnC,qBAAqBE,KAArB,CAHS;AAIrBqB,WAAOxB,gBAAgBG,KAAhB;AAJc,GAAhB,CAAP;AAMD","file":"getAuthReducer.js","sourcesContent":["import { combineReducers } from 'redux';\nimport loginStatus from './loginStatus';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getLoginStatusReducer(types) {\n  return (state = null, { type, loggedIn, refreshTokenValid }) => {\n    switch (type) {\n      case types.login:\n        return loginStatus.loggingIn;\n\n      case types.loginSuccess:\n      case types.refreshSuccess:\n      case types.cancelLogout:\n        return loginStatus.loggedIn;\n\n      case types.loginError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return loginStatus.notLoggedIn;\n\n      case types.refreshError:\n        return refreshTokenValid ? state : loginStatus.notLoggedIn;\n\n      case types.logout:\n        return loginStatus.loggingOut;\n\n      case types.beforeLogout:\n        return loginStatus.beforeLogout;\n\n      case types.initSuccess:\n      case types.tabSync:\n        return loggedIn ? loginStatus.loggedIn : loginStatus.notLoggedIn;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTokenReducer(types) {\n  return (state = {}, { type, token, refreshTokenValid }) => {\n    switch (type) {\n      case types.loginSuccess:\n      case types.refreshSuccess:\n        return {\n          ownerId: token.owner_id,\n          endpointId: token.endpoint_id,\n          accessToken: token.access_token,\n          expireTime: token.expire_time,\n          expiresIn: token.expires_in,\n        };\n      case types.loginError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return {};\n\n      case types.refreshError:\n        if (refreshTokenValid) {\n          return state;\n        }\n        return {};\n      case types.initSuccess:\n      case types.tabSync:\n        if (token) {\n          return {\n            ownerId: token.owner_id,\n            endpointId: token.endpoint_id,\n            accessToken: token.access_token,\n            expireTime: token.expire_time,\n            expiresIn: token.expires_in,\n          };\n        }\n        return {};\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getFreshLoginReducer(types) {\n  return (state = null, { type, loggedIn }) => {\n    switch (type) {\n      case types.initSuccess:\n      case types.tabSync:\n        return loggedIn ? false : null;\n\n      case types.login:\n        return true;\n\n      case types.loginError:\n      case types.refreshError:\n      case types.logoutSuccess:\n      case types.logoutError:\n        return null;\n\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAuthReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    loginStatus: getLoginStatusReducer(types),\n    freshLogin: getFreshLoginReducer(types),\n    token: getTokenReducer(types),\n  });\n}\n"]}