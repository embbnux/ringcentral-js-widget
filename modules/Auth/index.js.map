{"version":3,"sources":["modules/Auth/index.js"],"names":["Auth","deps","dep","optional","client","alert","brand","locale","tabManager","environment","connectivityMonitor","options","actionTypes","_client","_alert","_brand","_locale","_tabManager","_environment","_connectivityMonitor","_reducer","_beforeLogoutHandlers","_afterLoggedInHandlers","_proxyFrame","_proxyFrameLoaded","_unbindEvents","_lastEnvironmentCounter","platform","service","onRequestError","apiResponse","Error","message","logout","onLoginSuccess","store","dispatch","type","loginSuccess","token","auth","data","handlers","handler","onLoginError","error","loginError","danger","authMessages","payload","onLogoutSuccess","logoutSuccess","onLogoutError","_cache","clean","logoutError","onRefreshSuccess","refreshSuccess","onRefreshError","isOffline","ready","connectivity","refreshTokenValid","refreshError","access_token","sessionExpired","ttl","addListener","events","requestError","removeListener","loggedIn","subscribe","status","moduleStatuses","pending","init","_bindEvents","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changeCounter","username","password","extension","remember","code","redirectUri","accessToken","expiresIn","endpointId","tokenType","login","ownerId","setData","token_type","expires_in","refresh_token_expires_in","account","get","extensionData","id","endpoint_id","owner_id","state","brandId","display","prompt","force","implicit","loginUrl","dismissAll","beforeLogout","result","cancelLogout","reject","beforeLogoutError","isImplicit","add","removeBeforeLogoutHandler","remove","newAuthData","emit","console","url","resolve","window","location","href","_redirectUri","_proxyUri","freshLogin","_appSecret","length","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import url from 'url';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\n\n/**\n * @class\n * @description Authentication module\n */\n@Module({\n  deps: [\n    'Client',\n    'Alert',\n    'Brand',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n    { dep: 'ConnectivityMonitor', optional: true },\n  ]\n})\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Alert} params.alert - alert module instance\n   * @param {Brand} params.brand - brand module instance\n   * @param {Locale} params.locale - locale module instance\n   * @param {TabManager} params.tabManager - tabManager module instance\n   * @param {environment} params.Environment - environment module instance\n   * @param {connectivityMonitor} params.connectivityMonitor - connectivityMonitor module instance\n   * @param {String} params.redirectUri - redirect uri\n   * @param {String} params.proxyUri - proxyUri module instance\n   * @param {Number} params.defaultProxyRetry - default proxy retry time 5000\n   */\n  constructor({\n    client,\n    alert,\n    brand,\n    locale,\n    tabManager,\n    environment,\n    connectivityMonitor,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = ensureExist(client, 'client');\n    this._alert = ensureExist(alert, 'alert');\n    this._brand = ensureExist(brand, 'brand');\n    this._locale = ensureExist(locale, 'locale');\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._connectivityMonitor = connectivityMonitor;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n    this._afterLoggedInHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n    this._unbindEvents = null;\n    this._lastEnvironmentCounter = 0;\n  }\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._client.service.platform();\n    const client = this._client.service._client;\n    const onRequestError = (apiResponse) => {\n      if (\n        apiResponse instanceof Error &&\n        apiResponse.message === 'Token revoked'\n      ) {\n        this.logout();\n      }\n    };\n\n    const onLoginSuccess = async () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        await (async () => handler())();\n      }\n    };\n    const onLoginError = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    };\n    const onLogoutSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    };\n    const onLogoutError = (error) => {\n      platform._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    };\n    const onRefreshSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    };\n    const onRefreshError = (error) => {\n      // user is still considered logged in if the refreshToken is still valid\n      let isOffline = (error.message === 'Failed to fetch' ||\n      error.message === 'The Internet connection appears to be offline.' ||\n      error.message === 'NetworkError when attempting to fetch resource.' ||\n      error.message === 'Network Error 0x2ee7, Could not complete the operation due to error 00002ee7.');\n      if (\n        this._connectivityMonitor &&\n        this._connectivityMonitor.ready &&\n        this._connectivityMonitor.connectivity === false\n      ) { isOffline = true; }\n\n      const refreshTokenValid = isOffline && platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n      if (!refreshTokenValid && this._client.service.platform().auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n  initialize() {\n    let loggedIn;\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatuses.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this._bindEvents();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      }\n      if (\n        (this._tabManager && this._tabManager.ready) &&\n        this.ready\n      ) {\n        if (\n          (loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n          (!loggedIn && this.loginStatus === loginStatus.loggedIn)\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send('loginStatusChange', loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === 'loginStatusChange' &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          /* eslint { \"prefer-destructuring\": 0 } */\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn ? this._client.service.platform().auth().data() : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get token() {\n    return this.state.token;\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    let ownerId;\n    if (accessToken) {\n      this._client.service.platform().auth().setData({\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n      });\n      const extensionData = await this._client.account().extension().get();\n      ownerId = extensionData.id;\n    }\n    return this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n    });\n  }\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @param {Boolean} options.implicit\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({\n    redirectUri, state, brandId, display, prompt, force, implicit = false\n  }) {\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n      implicit,\n    })}${force ? '&force' : ''}`;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout() {\n    this._alert.dismissAll();\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    if (this.isImplicit) {\n      this._client.service.platform()._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n      return null;\n    }\n    return this._client.service.platform().logout();\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  * @returns {Function}\n  */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.remove(handler);\n  }\n\n  addAfterLoggedInHandler(handler) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this._afterLoggedInHandlers.remove(handler);\n    };\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }) {\n    try {\n      const extensionData = await this._client.account().extension().get();\n      const ownerId = extensionData.id;\n      if (ownerId !== this.ownerId) {\n        return;\n      }\n      const platform = this._client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout;\n  }\n\n  get notLoggedIn() {\n    return this.state.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this._client.service.platform()._appSecret &&\n      this._client.service.platform()._appSecret.length > 0\n    );\n  }\n}\n"]}