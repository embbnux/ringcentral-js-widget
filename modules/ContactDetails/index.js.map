{"version":3,"sources":["modules/ContactDetails/index.js"],"names":["ContactDetails","deps","dep","optional","contacts","options","actionTypes","_contacts","_reducer","addSelector","condition","allContacts","find","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","_shouldReset","resetSuccess","ready","pending","id","updateCondition","resetCondition","contact","getProfileImage","getPresence","clickToSMS","clickToCall","_selectors","currentContact","state","status","RcModule","background","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQqBA,c,WANpB,gBAAO;AACNC,QAAM,CACJ,UADI,EAEJ,EAAEC,KAAK,uBAAP,EAAgCC,UAAU,IAA1C,EAFI;AADA,CAAP,C;;;AAOC,gCAAsC;AAAA,QAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,QAAXC,OAAW;AAAA;;AAAA,iLACzBA,OADyB,IAChBC,kCADgB;;AAGpC,UAAKC,SAAL,GAAiBH,QAAjB;AACA,UAAKI,QAAL,GAAgB,wCAAyB,MAAKF,WAA9B,CAAhB;;AAEA,UAAKG,WAAL,CACE,gBADF,EAEE;AAAA,aAAM,MAAKC,SAAX;AAAA,KAFF,EAGE;AAAA,aAAM,MAAKH,SAAL,CAAeI,WAArB;AAAA,KAHF,EAIE,UAACD,SAAD,EAAe;AACb,UAAIA,SAAJ,EAAe;AAAE,eAAO,MAAKH,SAAL,CAAeK,IAAf,CAAoBF,SAApB,CAAP;AAAwC;AACzD,aAAO,IAAP;AACD,KAPH;AANoC;AAerC;;;;iCAEY;AAAA;;AACX,WAAKG,KAAL,CAAWC,SAAX,CAAqB;AAAA,eAAM,OAAKC,cAAL,EAAN;AAAA,OAArB;AACD;;;qCAEgB;AACf,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,aAAKH,KAAL,CAAWI,QAAX,CAAoB;AAClBC,gBAAM,KAAKZ,WAAL,CAAiBa;AADL,SAApB;AAGD,OAJD,MAIO,IAAI,KAAKC,YAAL,EAAJ,EAAyB;AAC9B,aAAKP,KAAL,CAAWI,QAAX,CAAoB;AAClBC,gBAAM,KAAKZ,WAAL,CAAiBe;AADL,SAApB;AAGD;AACF;;;kCAEa;AACZ,aACE,KAAKd,SAAL,CAAee,KAAf,IACA,KAAKC,OAFP;AAID;;;mCAEc;AACb,aACE,CAAC,KAAKhB,SAAL,CAAee,KAAhB,IACA,KAAKA,KAFP;AAID;;AAED;;;;;;;gCAKmB;AAAA,UAAZE,EAAY,SAAZA,EAAY;AAAA,UAARN,IAAQ,SAARA,IAAQ;;AACjB,WAAKL,KAAL,CAAWI,QAAX,CAAoB;AAClBC,cAAM,KAAKZ,WAAL,CAAiBmB,eADL;AAElBf,mBAAW;AACTc,gBADS;AAETN;AAFS;AAFO,OAApB;AAOD;;;4BAGO;AACN,WAAKL,KAAL,CAAWI,QAAX,CAAoB;AAClBC,cAAM,KAAKZ,WAAL,CAAiBoB;AADL,OAApB;AAGD;;;oCAGeC,O,EAAS;AACvB,aAAO,KAAKpB,SAAL,CAAeqB,eAAf,CAA+BD,OAA/B,EAAwC,KAAxC,CAAP;AACD;;;gCAGWA,O,EAAS;AACnB,aAAO,KAAKpB,SAAL,CAAesB,WAAf,CAA2BF,OAA3B,EAAoC,KAApC,CAAP;AACD;;AAED;;;;mCAEe;AACb,WAAKd,KAAL,CAAWI,QAAX,CAAoB;AAClBC,cAAM,KAAKZ,WAAL,CAAiBwB;AADL,OAApB;AAGD;;AAED;;;;oCAEgB;AACd,WAAKjB,KAAL,CAAWI,QAAX,CAAoB;AAClBC,cAAM,KAAKZ,WAAL,CAAiByB;AADL,OAApB;AAGD;;;wBAEa;AACZ,aAAO,KAAKC,UAAL,CAAgBC,cAAhB,EAAP;AACD;;;wBAEe;AACd,aAAO,KAAKC,KAAL,CAAWxB,SAAlB;AACD;;;wBAEY;AACX,aAAO,KAAKwB,KAAL,CAAWC,MAAlB;AACD;;;EA1GyCC,kB,0DAoDzCC,oB,kJAWAA,oB,6JAOAA,oB,mKAKAA,oB,gKAMAC,iB,kKAQAA,iB;kBAzFkBtC,c","file":"index.js","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport getContactDetailsReducer from './getContactDetailsReducer';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\n\n@Module({\n  deps: [\n    'Contacts',\n    { dep: 'ContactDetailsOptions', optional: true }\n  ]\n})\nexport default class ContactDetails extends RcModule {\n  constructor({ contacts, ...options }) {\n    super({ ...options, actionTypes });\n\n    this._contacts = contacts;\n    this._reducer = getContactDetailsReducer(this.actionTypes);\n\n    this.addSelector(\n      'currentContact',\n      () => this.condition,\n      () => this._contacts.allContacts,\n      (condition) => {\n        if (condition) { return this._contacts.find(condition); }\n        return null;\n      }\n    );\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._contacts.ready &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      !this._contacts.ready &&\n      this.ready\n    );\n  }\n\n  /**\n   * Find contact from all contacts by given conditions.\n   * Stores search conditions to reducers.\n   */\n  @background\n  find({ id, type }) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCondition,\n      condition: {\n        id,\n        type\n      }\n    });\n  }\n\n  @background\n  clear() {\n    this.store.dispatch({\n      type: this.actionTypes.resetCondition\n    });\n  }\n\n  @background\n  getProfileImage(contact) {\n    return this._contacts.getProfileImage(contact, false);\n  }\n\n  @background\n  getPresence(contact) {\n    return this._contacts.getPresence(contact, false);\n  }\n\n  // for track click to sms in contact detail\n  @proxify\n  onClickToSMS() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n\n  // for track click to call in contact detail\n  @proxify\n  onClickToCall() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToCall,\n    });\n  }\n\n  get contact() {\n    return this._selectors.currentContact();\n  }\n\n  get condition() {\n    return this.state.condition;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}