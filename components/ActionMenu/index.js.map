{"version":3,"sources":["components/ActionMenu/index.js"],"names":["ActionMenu","ClickToDialButton","className","currentLocale","onClickToDial","disableLinks","disableClickToDial","phoneNumber","call","propTypes","string","func","bool","isRequired","defaultProps","undefined","ClickToSmsButton","onClickToSms","sms","composeText","LogButton","onLogCall","isLogged","isLogging","spinner","spinnerContainer","log","edit","callLog","EntityButton","onViewEntity","onCreateEntity","hasEntity","entity","record","logButton","baseGroup","entityButton","hasBaseGroup","clickToDialButton","secondGroup","clickToSmsButton","hasSecondGroup","root"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport SlideMenu from '../SlideMenu';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\n\nfunction ClickToDialButton({\n  className,\n  currentLocale,\n  onClickToDial,\n  disableLinks,\n  disableClickToDial,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.call, className)}\n      onClick={onClickToDial}\n      disabled={disableLinks || disableClickToDial || !phoneNumber} >\n      <span className={dynamicsFont.call} />\n    </Button>\n  );\n}\nClickToDialButton.propTypes = {\n  className: PropTypes.string,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToDialButton.defaultProps = {\n  className: undefined,\n  onClickToDial: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  phoneNumber: undefined,\n};\n\nfunction ClickToSmsButton({\n  className,\n  currentLocale,\n  onClickToSms,\n  disableLinks,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.sms, className)}\n      onClick={onClickToSms}\n      disabled={disableLinks || !phoneNumber} >\n      <span className={dynamicsFont.composeText} />\n    </Button>\n  );\n}\nClickToSmsButton.propTypes = {\n  className: PropTypes.string,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToSmsButton.defaultProps = {\n  className: undefined,\n  onClickToSms: undefined,\n  disableLinks: false,\n  phoneNumber: undefined,\n};\n\nfunction LogButton({\n  className,\n  currentLocale,\n  onLogCall,\n  isLogged,\n  disableLinks,\n  isLogging,\n}) {\n  const spinner = isLogging ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  return (\n    <Button\n      className={classnames(styles.log, className)}\n      onClick={onLogCall}\n      disabled={disableLinks || isLogging}\n    >\n      <span\n        className={isLogged ?\n          dynamicsFont.edit :\n          dynamicsFont.callLog\n        } />\n      {spinner}\n    </Button>\n  );\n}\nLogButton.propTypes = {\n  className: PropTypes.string,\n  onLogCall: PropTypes.func,\n  isLogged: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nLogButton.defaultProps = {\n  className: undefined,\n  onLogCall: undefined,\n  isLogged: false,\n  disableLinks: false,\n  isLogging: false,\n};\n\nfunction EntityButton({\n  className,\n  currentLocale,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  disableLinks,\n}) {\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onViewEntity}\n      disabled={disableLinks} >\n\n      <i className={dynamicsFont.record} />\n    </Button>\n  );\n}\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  disableLinks: false,\n};\n\nexport default function ActionMenu({\n  className,\n  currentLocale,\n  onLogCall,\n  isLogged,\n  isLogging,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  onClickToDial,\n  onClickToSms,\n  phoneNumber,\n  disableLinks,\n  disableClickToDial,\n }) {\n  const logButton = onLogCall ?\n    (\n      <LogButton\n        className={styles.baseGroup}\n        onLogCall={onLogCall}\n        disableLinks={disableLinks}\n        isLogged={isLogged}\n        isLogging={isLogging}\n        currentLocale={currentLocale}\n      />\n    ) :\n    null;\n  const entityButton = hasEntity && onViewEntity ?\n    (\n      <EntityButton\n        className={styles.baseGroup}\n        onViewEntity={onViewEntity}\n        onCreateEntity={onCreateEntity}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n      />\n    ) :\n    null;\n  const hasBaseGroup = !!(logButton || entityButton);\n\n  const clickToDialButton = onClickToDial ?\n    (\n      <ClickToDialButton\n        className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n        onClickToDial={onClickToDial}\n        phoneNumber={phoneNumber}\n        disableLinks={disableLinks}\n        disableClickToDial={disableClickToDial}\n        currentLocale={currentLocale}\n      />\n    ) :\n    null;\n  const clickToSmsButton = onClickToSms ?\n    (\n      <ClickToSmsButton\n        className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n        onClickToSms={onClickToSms}\n        phoneNumber={phoneNumber}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n      />\n    ) :\n    null;\n  const hasSecondGroup = hasBaseGroup && !!(clickToDialButton || clickToSmsButton);\n  if (hasSecondGroup) {\n    // slide menu\n    return (\n      <SlideMenu\n        className={classnames(styles.root, className)}\n        minWidth={40}\n        maxWidth={75} >\n        {clickToDialButton}\n        {clickToSmsButton}\n        {entityButton}\n        {logButton}\n      </SlideMenu>\n    );\n  } else if (\n    !clickToDialButton &&\n    !clickToSmsButton &&\n    !entityButton &&\n    !logButton\n  ) {\n    return null;\n  }\n  // no slide menu\n  return (\n    <div className={classnames(styles.root, className)}>\n      {clickToDialButton}\n      {clickToSmsButton}\n      {entityButton}\n      {logButton}\n    </div>\n  );\n}\n\nActionMenu.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  isLogged: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  phoneNumber: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n};\nActionMenu.defaultProps = {\n  className: undefined,\n  onLogCall: undefined,\n  isLogged: false,\n  isLogging: false,\n  onViewEntity: undefined,\n  onCreateEntity: undefined,\n  hasEntity: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  phoneNumber: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n};\n"]}