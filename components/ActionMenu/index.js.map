{"version":3,"sources":["components/ActionMenu/index.js"],"names":["ClickToDialButton","className","currentLocale","onClickToDial","disableLinks","disableClickToDial","phoneNumber","call","propTypes","string","func","bool","isRequired","defaultProps","undefined","ClickToSmsButton","onClickToSms","sms","composeText","EntityButton","onViewEntity","onCreateEntity","hasEntity","isCreating","spinner","spinnerContainer","icon","record","addEntity","onClick","entity","ActionMenu","props","onCreateEnityModal","entityType","closeEntityModal","onCancelEntityModal","openEntityModal","setState","entityModalVisible","captureClick","e","stopPropagation","state","onLog","isLogged","isLogging","logButton","baseGroup","entityButton","entityModal","hasBaseGroup","clickToDialButton","secondGroup","clickToSmsButton","hasSecondGroup","root"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport SlideMenu from '../SlideMenu';\nimport EntityModal from '../EntityModal';\nimport Button from '../Button';\nimport LogButton from '../LogButton';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nfunction ClickToDialButton({\n  className,\n  currentLocale,\n  onClickToDial,\n  disableLinks,\n  disableClickToDial,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.call, className)}\n      onClick={onClickToDial}\n      disabled={disableLinks || disableClickToDial || !phoneNumber} >\n      <span className={dynamicsFont.call} />\n    </Button>\n  );\n}\nClickToDialButton.propTypes = {\n  className: PropTypes.string,\n  onClickToDial: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToDialButton.defaultProps = {\n  className: undefined,\n  onClickToDial: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  phoneNumber: undefined,\n};\n\nfunction ClickToSmsButton({\n  className,\n  currentLocale,\n  onClickToSms,\n  disableLinks,\n  phoneNumber,\n}) {\n  return (\n    <Button\n      className={classnames(styles.sms, className)}\n      onClick={onClickToSms}\n      disabled={disableLinks || !phoneNumber} >\n      <span className={dynamicsFont.composeText} />\n    </Button>\n  );\n}\nClickToSmsButton.propTypes = {\n  className: PropTypes.string,\n  onClickToSms: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\nClickToSmsButton.defaultProps = {\n  className: undefined,\n  onClickToSms: undefined,\n  disableLinks: false,\n  phoneNumber: undefined,\n};\n\nfunction EntityButton({\n  className,\n  currentLocale,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span className={icon} />\n      {spinner}\n    </Button>\n  );\n}\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n};\n\n\nexport default class ActionMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entityModalVisible: false,\n    };\n  }\n  onCreateEnityModal = (entityType) => {\n    this.props.onCreateEntity(entityType);\n    this.closeEntityModal();\n  }\n  onCancelEntityModal = () => {\n    this.closeEntityModal();\n  }\n  openEntityModal = () => {\n    this.setState({\n      entityModalVisible: true\n    });\n  }\n  closeEntityModal = () => {\n    this.setState({\n      entityModalVisible: false\n    });\n  }\n  captureClick = (e) => {\n    e.captureClick = this.props.captureClick;\n    if (this.props.stopPropagation) {\n      e.stopPropagation();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      currentLocale,\n      onLog,\n      isLogged,\n      isLogging,\n      isCreating,\n      onViewEntity,\n      onCreateEntity,\n      hasEntity,\n      onClickToDial,\n      onClickToSms,\n      phoneNumber,\n      disableLinks,\n      disableClickToDial,\n      stopPropagation,\n    } = this.props;\n\n    const logButton = onLog ?\n      (\n        <LogButton\n          className={styles.baseGroup}\n          onLog={onLog}\n          disableLinks={disableLinks}\n          isLogged={isLogged}\n          isLogging={isLogging}\n          currentLocale={currentLocale}\n        />\n      ) :\n      null;\n\n    let entityButton;\n    if (hasEntity && onViewEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onViewEntity={onViewEntity}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n      />);\n    } else if (!hasEntity && phoneNumber && onCreateEntity) {\n      entityButton = (<EntityButton\n        className={styles.baseGroup}\n        onCreateEntity={this.openEntityModal}\n        hasEntity={hasEntity}\n        disableLinks={disableLinks}\n        currentLocale={currentLocale}\n      />);\n    } else {\n      entityButton = null;\n    }\n\n    const entityModal = (!hasEntity && phoneNumber) ?\n      (<EntityModal\n        currentLocale={currentLocale}\n        show={this.state.entityModalVisible}\n        onCreate={this.onCreateEnityModal}\n        onCancel={this.onCancelEntityModal}\n      />\n      ) : null;\n\n    const hasBaseGroup = !!(logButton || entityButton);\n\n    const clickToDialButton = onClickToDial ?\n      (\n        <ClickToDialButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToDial={onClickToDial}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          currentLocale={currentLocale}\n        />\n      ) :\n      null;\n    const clickToSmsButton = onClickToSms ?\n      (\n        <ClickToSmsButton\n          className={hasBaseGroup ? styles.secondGroup : styles.baseGroup}\n          onClickToSms={onClickToSms}\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          currentLocale={currentLocale}\n        />\n      ) :\n      null;\n    const hasSecondGroup = hasBaseGroup && !!(clickToDialButton || clickToSmsButton);\n    if (hasSecondGroup) {\n      // slide menu\n      return (\n        <div\n          onClick={this.captureClick}>\n          <SlideMenu\n            className={classnames(styles.root, className)}\n            minWidth={40}\n            maxWidth={75} >\n            {clickToDialButton}\n            {clickToSmsButton}\n            {entityButton}\n            {logButton}\n            {entityModal}\n          </SlideMenu>\n        </div>\n      );\n    } else if (\n      !clickToDialButton &&\n      !clickToSmsButton &&\n      !entityButton &&\n      !logButton\n    ) {\n      return null;\n    }\n    // no slide menu\n    return (\n      <div\n        onClick={this.captureClick} >\n        <div className={classnames(styles.root, className)}>\n          {clickToDialButton}\n          {clickToSmsButton}\n          {entityButton}\n          {logButton}\n          {entityModal}\n        </div>\n      </div>\n    );\n  }\n}\n\nActionMenu.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onLog: PropTypes.func,\n  isLogged: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  phoneNumber: PropTypes.string,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  stopPropagation: PropTypes.bool,\n  captureClick: PropTypes.bool,\n};\nActionMenu.defaultProps = {\n  className: undefined,\n  onLog: undefined,\n  isLogged: false,\n  isLogging: false,\n  isCreating: false,\n  onViewEntity: undefined,\n  onCreateEntity: undefined,\n  hasEntity: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  phoneNumber: undefined,\n  disableLinks: false,\n  disableClickToDial: false,\n  stopPropagation: false,\n  captureClick: false,\n};\n"]}