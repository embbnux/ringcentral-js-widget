{"version":3,"sources":["components/RegionSettingsPanel/index.js"],"names":["RegionSettings","props","onAreaCodeChange","e","value","currentTarget","replace","state","areaCodeValue","setState","onCountryCodeChange","countryCodeValue","onResetClick","areaCode","countryCode","onSaveClick","onSave","onBackClick","onBackButtonClick","nextProps","buttons","hasChanges","push","label","onClick","placement","hidden","disabled","hasNA","availableCountries","find","c","isoCode","messageId","length","showAreaCode","root","className","getString","currentLocale","content","hint","inputField","select","option","callingCode","children","propTypes","string","node","func","isRequired","arrayOf","shape"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport 'font-awesome/css/font-awesome.css';\n\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport InputField from '../InputField';\nimport TextInput from '../TextInput';\nimport Select from '../Select';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport countryNames from '../../lib/countryNames';\n\n\nexport default class RegionSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      countryCodeValue: props.countryCode,\n      areaCodeValue: props.areaCode,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.areaCode !== this.props.areaCode) {\n      this.setState({\n        areaCodeValue: nextProps.areaCode,\n      });\n    }\n    if (nextProps.countryCode !== this.props.countryCode) {\n      this.setState({\n        countryCodeValue: nextProps.countryCode,\n      });\n    }\n  }\n  onAreaCodeChange = (e) => {\n    const value = e.currentTarget.value.replace(/[^\\d]/g, '');\n    if (value !== this.state.areaCodeValue) {\n      this.setState({\n        areaCodeValue: value,\n      });\n    }\n  }\n  onCountryCodeChange = (e) => {\n    const value = e.currentTarget.value;\n    if (value !== this.state.countryCodeValue) {\n      this.setState({\n        countryCodeValue: value,\n      });\n    }\n  }\n  onResetClick = () => {\n    this.setState({\n      areaCodeValue: this.props.areaCode,\n      countryCodeValue: this.props.countryCode,\n    });\n  }\n  onSaveClick = () => {\n    if (typeof this.props.onSave === 'function') {\n      this.props.onSave({\n        areaCode: this.state.areaCodeValue,\n        countryCode: this.state.countryCodeValue,\n      });\n    }\n  }\n  onBackClick = () => {\n    if (typeof this.props.onBackButtonClick === 'function') {\n      this.props.onBackButtonClick();\n    }\n  }\n  render() {\n    const buttons = [];\n    const hasChanges = this.state.areaCodeValue !== this.props.areaCode ||\n      this.state.countryCodeValue !== this.props.countryCode;\n    if (this.props.onBackButtonClick) {\n      buttons.push({\n        label: <i className=\"fa fa-chevron-left\" />,\n        onClick: this.onBackClick,\n        placement: 'left',\n      });\n      buttons.push({\n        label: <i className=\"fa fa-undo\" />,\n        onClick: this.onResetClick,\n        placement: 'right',\n        hidden: !hasChanges,\n      });\n      buttons.push({\n        label: <i className=\"fa fa-floppy-o\" />,\n        onClick: this.onSaveClick,\n        placement: 'right',\n        disabled: !hasChanges,\n      });\n    }\n    const hasNA = !!this.props.availableCountries.find(c => c.isoCode === 'US') ||\n      !!this.props.availableCountries.find(c => c.isoCode === 'CA');\n    let messageId;\n    if (this.props.availableCountries.length > 1) {\n      if (hasNA) {\n        messageId = 'MultiWithNAMessage';\n      } else {\n        messageId = 'MultiWithoutNAMessage';\n      }\n    } else if (hasNA) {\n      messageId = 'NAOnlyMessage';\n    }\n    const showAreaCode = this.state.countryCodeValue === 'US' ||\n      this.state.countryCodeValue === 'CA';\n\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        <Header\n          buttons={buttons}\n          >\n          {i18n.getString('title', this.props.currentLocale)}\n        </Header>\n        <Panel className={styles.content}>\n          <div className={styles.hint}>\n            {i18n.getString(messageId, this.props.currentLocale)}\n          </div>\n            <InputField\n              className={styles.inputField}\n              label={i18n.getString('country', this.props.currentLocale)}>\n              <Select\n                className={styles.select}\n                value={this.state.countryCodeValue}\n                onChange={this.onCountryCodeChange}\n                options={this.props.availableCountries}\n                valueFunction={option => option.isoCode}\n                renderFunction={\n                  option => `(+${option.callingCode}) ${countryNames.getString(option.isoCode, this.props.currentLocale)}`\n                }\n              />\n            </InputField>\n          {showAreaCode && (\n            <InputField\n              className={styles.inputField}\n              label={i18n.getString('areaCode', this.props.currentLocale)}>\n              <TextInput\n                placeholder={i18n.getString('areaCodePlaceholder', this.props.currentLocale)}\n                maxLength={3}\n                value={this.state.areaCodeValue}\n                onChange={this.onAreaCodeChange} />\n            </InputField>\n          )}\n          {this.props.children}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nRegionSettings.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  onBackButtonClick: PropTypes.func,\n  currentLocale: PropTypes.string.isRequired,\n  availableCountries: PropTypes.arrayOf(PropTypes.shape({\n    isoCode: PropTypes.string,\n    callingCode: PropTypes.string,\n  })).isRequired,\n  countryCode: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  onSave: PropTypes.func,\n};\n"]}