{"version":3,"sources":["components/CallingSettingsPanel/index.js"],"names":["CallingSettingsPanel","props","onSave","state","callWith","myLocation","ringoutPrompt","onReset","setState","onCallWithChange","e","currentTarget","value","availableNumbers","onMyLocationChange","onRingoutPromptChange","checked","newProps","currentLocale","callWithOptions","onBackButtonClick","brand","className","buttons","hasChanges","push","label","onClick","placement","hidden","disabled","ringout","softphone","ringoutHint","getString","inputField","select","iconField","root","content","option","propTypes","string","isRequired","arrayOf","bool","object","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport callingOptions from 'ringcentral-integration/modules/CallingSettings/callingOptions';\nimport 'font-awesome/css/font-awesome.css';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Switch from '../Switch';\nimport IconField from '../IconField';\nimport InputField from '../InputField';\nimport TextInput from '../TextInput';\nimport Select from '../Select';\n\nexport default class CallingSettingsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      callWith: props.callWith,\n      ringoutPrompt: props.ringoutPrompt,\n      myLocation: props.myLocation,\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.callWith !== this.props.callWith) {\n      this.setState({\n        callWith: newProps.callWith,\n      });\n    }\n    if (newProps.ringoutPrompt !== this.props.ringoutPrompt) {\n      this.setState({\n        ringoutPrompt: newProps.ringoutPrompt,\n      });\n    }\n    if (newProps.myLocation !== this.props.myLocation) {\n      this.setState({\n        myLocation: newProps.myLocation,\n      });\n    }\n  }\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const {\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      } = this.state;\n      this.props.onSave({\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      });\n    }\n  }\n  onReset = () => {\n    const {\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    } = this.props;\n    this.setState({\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    });\n  }\n  onCallWithChange = (e) => {\n    const callWith = e.currentTarget.value;\n    this.setState({\n      callWith,\n      myLocation: (this.props.availableNumbers[callWith] &&\n        this.props.availableNumbers[callWith][0]) ||\n        '',\n    });\n  }\n  onMyLocationChange = (e) => {\n    this.setState({\n      myLocation: e.currentTarget.value,\n    });\n  }\n  onRingoutPromptChange = (checked) => {\n    this.setState({\n      ringoutPrompt: checked,\n    });\n  }\n  render() {\n    const {\n      currentLocale,\n      callWith,\n      callWithOptions,\n      myLocation,\n      ringoutPrompt,\n      onBackButtonClick,\n      brand,\n      availableNumbers,\n      className,\n    } = this.props;\n    const buttons = [];\n    const hasChanges = this.state.callWith !== callWith ||\n      this.state.myLocation !== myLocation ||\n      this.state.ringoutPrompt !== ringoutPrompt;\n    buttons.push({\n      label: <i className=\"fa fa-chevron-left\" />,\n      onClick: onBackButtonClick,\n      placement: 'left',\n    });\n    buttons.push({\n      label: <i className=\"fa fa-undo\" />,\n      onClick: this.onReset,\n      placement: 'right',\n      hidden: !hasChanges,\n    });\n    buttons.push({\n      label: <i className=\"fa fa-floppy-o\" />,\n      onClick: this.onSave,\n      placement: 'right',\n      disabled: !hasChanges,\n    });\n\n    const ringout = this.state.callWith !== callingOptions.softphone ? (\n      <div>\n        <div className={styles.ringoutHint}>\n          {i18n.getString('ringoutHint', currentLocale)}\n        </div>\n        <InputField\n          className={styles.inputField}\n          label={i18n.getString('myLocationLabel', currentLocale)}>\n          {\n            availableNumbers[this.state.callWith] ? (\n              <Select\n                className={styles.select}\n                value={this.state.myLocation}\n                onChange={this.onMyLocationChange}\n                options={availableNumbers[this.state.callWith]}\n              />\n            ) : (\n              <TextInput\n                value={this.state.myLocation}\n                maxLength={30}\n                onChange={this.onMyLocationChange} />\n            )\n          }\n        </InputField>\n        <IconField\n          className={styles.iconField}\n          icon={\n            <Switch\n              checked={this.state.ringoutPrompt}\n              onChange={this.onRingoutPromptChange}\n              />\n          }\n          >\n          {i18n.getString('press1ToStartCallLabel', currentLocale)}\n        </IconField>\n      </div>\n    ) : null;\n    return (\n      <div className={classnames(styles.root, className)}>\n        <Header buttons={buttons}>\n          {i18n.getString('title', currentLocale)}\n        </Header>\n        <Panel className={styles.content}>\n          <InputField\n            className={styles.inputField}\n            label={i18n.getString('makeCallsWith', currentLocale)} noBorder>\n            <Select\n              className={styles.select}\n              value={this.state.callWith}\n              onChange={this.onCallWithChange}\n              options={callWithOptions}\n              renderFunction={\n                option => formatMessage(i18n.getString(option, currentLocale), { brand })\n              }\n            />\n          </InputField>\n          {ringout}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nCallingSettingsPanel.propTypes = {\n  brand: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  callWithOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  callWith: PropTypes.string.isRequired,\n  myLocation: PropTypes.string.isRequired,\n  ringoutPrompt: PropTypes.bool.isRequired,\n  availableNumbers: PropTypes.object.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n"]}