{"version":3,"sources":["components/CallingSettingsPanel/index.js"],"names":["CallingSettingsPanel","props","onSave","state","callWith","myLocation","ringoutPrompt","onReset","setState","onCallWithChange","availableNumbers","onMyLocationChange","onMyLocationTextChange","e","target","value","onRingoutPromptChange","checked","renderHandler","option","brand","getString","currentLocale","newProps","callWithOptions","onBackButtonClick","className","buttons","hasChanges","push","label","onClick","placement","hidden","disabled","ringout","softphone","browser","ringoutHint","inputField","select","iconField","root","content","propTypes","string","isRequired","arrayOf","bool","object","func","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport callingOptions from 'ringcentral-integration/modules/CallingSettings/callingOptions';\nimport 'font-awesome/css/font-awesome.css';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport Switch from '../Switch';\nimport IconField from '../IconField';\nimport InputField from '../InputField';\nimport TextInput from '../TextInput';\nimport Select from '../DropdownSelect';\n\nexport default class CallingSettingsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      callWith: props.callWith,\n      ringoutPrompt: props.ringoutPrompt,\n      myLocation: props.myLocation,\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.callWith !== this.props.callWith) {\n      this.setState({\n        callWith: newProps.callWith,\n      });\n    }\n    if (newProps.ringoutPrompt !== this.props.ringoutPrompt) {\n      this.setState({\n        ringoutPrompt: newProps.ringoutPrompt,\n      });\n    }\n    if (newProps.myLocation !== this.props.myLocation) {\n      this.setState({\n        myLocation: newProps.myLocation,\n      });\n    }\n  }\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const {\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      } = this.state;\n      this.props.onSave({\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      });\n    }\n  }\n  onReset = () => {\n    const {\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    } = this.props;\n    this.setState({\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    });\n  }\n  onCallWithChange = (callWith) => {\n    this.setState({\n      callWith,\n      myLocation: (this.props.availableNumbers[callWith] &&\n        this.props.availableNumbers[callWith][0]) ||\n        '',\n    });\n  }\n  onMyLocationChange = (myLocation) => {\n    this.setState({\n      myLocation\n    });\n  }\n  onMyLocationTextChange = (e) => {\n    const myLocation = e.target.value;\n    this.setState({\n      myLocation\n    });\n  }\n  onRingoutPromptChange = (checked) => {\n    this.setState({\n      ringoutPrompt: checked,\n    });\n  }\n  renderHandler = (option) => {\n    const brand = this.props.brand;\n    return formatMessage(i18n.getString(option, this.props.currentLocale), { brand });\n  }\n  render() {\n    const {\n      currentLocale,\n      callWith,\n      callWithOptions,\n      myLocation,\n      ringoutPrompt,\n      onBackButtonClick,\n      availableNumbers,\n      className,\n    } = this.props;\n    const buttons = [];\n    const hasChanges = this.state.callWith !== callWith ||\n      this.state.myLocation !== myLocation ||\n      this.state.ringoutPrompt !== ringoutPrompt;\n    buttons.push({\n      label: <i className=\"fa fa-undo\" />,\n      onClick: this.onReset,\n      placement: 'right',\n      hidden: !hasChanges,\n    });\n    buttons.push({\n      label: <i className=\"fa fa-floppy-o\" />,\n      onClick: this.onSave,\n      placement: 'right',\n      disabled: !hasChanges,\n    });\n\n    const ringout =\n      (\n        this.state.callWith !== callingOptions.softphone &&\n        this.state.callWith !== callingOptions.browser\n      ) ? (\n        <div>\n          <div className={styles.ringoutHint}>\n            {i18n.getString('ringoutHint', currentLocale)}\n          </div>\n          <InputField\n            className={styles.inputField}\n            label={i18n.getString('myLocationLabel', currentLocale)}>\n            {\n              availableNumbers[this.state.callWith] ? (\n                <Select\n                  className={styles.select}\n                  value={this.state.myLocation}\n                  onChange={this.onMyLocationChange}\n                  options={availableNumbers[this.state.callWith]}\n                  dropdownAlign=\"left\"\n                  titleEnabled\n                />\n              ) : (\n                <TextInput\n                  value={this.state.myLocation}\n                  maxLength={30}\n                  onChange={this.onMyLocationTextChange} />\n              )\n            }\n          </InputField>\n          <IconField\n            className={styles.iconField}\n            icon={\n              <Switch\n                checked={this.state.ringoutPrompt}\n                onChange={this.onRingoutPromptChange}\n                />\n            }\n            >\n            {i18n.getString('press1ToStartCallLabel', currentLocale)}\n          </IconField>\n        </div>\n      ) : null;\n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <BackHeader\n          buttons={buttons}\n          onBackClick={onBackButtonClick}\n          >\n          {i18n.getString('title', currentLocale)}\n        </BackHeader>\n        <Panel className={styles.content}>\n          <InputField\n            className={styles.inputField}\n            label={i18n.getString('makeCallsWith', currentLocale)} noBorder>\n            <Select\n              className={styles.select}\n              value={this.state.callWith}\n              onChange={this.onCallWithChange}\n              options={callWithOptions}\n              dropdownAlign=\"left\"\n              renderValue={this.renderHandler}\n              renderFunction={this.renderHandler}\n              titleEnabled\n            />\n          </InputField>\n          {ringout}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nCallingSettingsPanel.propTypes = {\n  brand: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  callWithOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  callWith: PropTypes.string.isRequired,\n  myLocation: PropTypes.string.isRequired,\n  ringoutPrompt: PropTypes.bool.isRequired,\n  availableNumbers: PropTypes.object.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nCallingSettingsPanel.defaultProps = {\n  className: null,\n};\n"]}