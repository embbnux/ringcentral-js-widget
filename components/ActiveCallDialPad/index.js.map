{"version":3,"sources":["components/ActiveCallDialPad/index.js"],"names":["cleanRegex","filter","value","replace","MAX_PASTE_LENGTH","ActiveCallDialPad","props","state","document","createElement","audio","playAudio","canPlayType","audios","paused","pause","src","currentTime","play","onButtonOutput","key","setState","preState","onChange","sendDTMFKeys","keys","split","forEach","index","setTimeout","e","currentTarget","onKeyDown","onPaste","item","clipboardData","items","getAsString","data","length","slice","styles","root","hiddenDialPad","i18n","getString","currentLocale","dialInput","input","padContainer","dialPad","buttonRow","button","stopButton","onHangup","EndIcon","Component","propTypes","PropTypes","func","isRequired","string"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DialPad from '../DialPad';\nimport CircleButton from '../CircleButton';\nimport BackHeader from '../BackHeader';\n\nimport audios from '../DialButton/audios';\n\nimport EndIcon from '../../assets/images/End.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst cleanRegex = /[^\\d*#]/g;\nconst filter = value => value.replace(cleanRegex, '');\n\nconst MAX_PASTE_LENGTH = 15;\n\nclass ActiveCallDialPad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n\n    if (typeof document !== 'undefined' && document.createElement) {\n      this.audio = document.createElement('audio');\n    }\n\n    this.playAudio = (value) => {\n      if (this.audio && this.audio.canPlayType('audio/ogg') !== '' && audios[value]) {\n        if (!this.audio.paused) {\n          this.audio.pause();\n        }\n        this.audio.src = audios[value];\n        this.audio.currentTime = 0;\n        this.audio.play();\n      }\n    };\n\n    this.onButtonOutput = (key) => {\n      this.setState((preState) => {\n        const value = preState.value + key;\n        this.props.onChange(key);\n        return { value };\n      });\n    };\n\n    this.sendDTMFKeys = (keys) => {\n      if (keys === '') {\n        return;\n      }\n      keys.split('').forEach((key, index) => {\n        setTimeout(() => {\n          this.playAudio(key);\n          this.props.onChange(key);\n        }, 100 * index);\n      });\n    };\n\n    this.onChange = (e) => {\n      const value = filter(e.currentTarget.value);\n      this.setState({ value });\n    };\n\n    this.onKeyDown = (e) => {\n      const value = filter(e.key);\n      this.sendDTMFKeys(value);\n    };\n\n    this.onPaste = (e) => {\n      const item = e.clipboardData.items[0];\n      item.getAsString((data) => {\n        const value = filter(data);\n        let keys = value;\n        if (value.length > MAX_PASTE_LENGTH) {\n          keys = value.slice(0, MAX_PASTE_LENGTH);\n        }\n        this.sendDTMFKeys(keys);\n        if (value.length > MAX_PASTE_LENGTH) {\n          this.setState(preState => ({\n            value: preState.value.replace(value, keys)\n          }));\n        }\n      });\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.hiddenDialPad}>\n          {i18n.getString('keypad', this.props.currentLocale)}\n        </BackHeader>\n        <div className={styles.dialInput}>\n          <input\n            className={styles.input}\n            value={this.state.value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            onPaste={this.onPaste}\n            autoFocus // eslint-disable-line\n          />\n        </div>\n        <div className={styles.padContainer}>\n          <DialPad\n            className={styles.dialPad}\n            onButtonOutput={this.onButtonOutput}\n          />\n          <div className={styles.buttonRow}>\n            <div className={styles.button}>\n              <CircleButton\n                className={styles.stopButton}\n                onClick={this.props.onHangup}\n                icon={EndIcon}\n                showBorder={false}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nActiveCallDialPad.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  hiddenDialPad: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default ActiveCallDialPad;\n\n"]}