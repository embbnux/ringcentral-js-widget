{"version":3,"sources":["components/CallsPanel/index.js"],"names":["CallsPanel","currentLocale","calls","areaCode","countryCode","onViewContact","onLogCall","isLoggedContact","disableLinks","dateTimeFormatter","showSpinner","title","active","loggingMap","content","root","propTypes","string","isRequired","arrayOf","any","func","bool","object","defaultProps","undefined"],"mappings":";;;;;kBAUwBA,U;;AAVxB;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAGe,SAASA,UAAT,OAcZ;AAAA,MAbDC,aAaC,QAbDA,aAaC;AAAA,MAZDC,KAYC,QAZDA,KAYC;AAAA,MAXDC,QAWC,QAXDA,QAWC;AAAA,MAVDC,WAUC,QAVDA,WAUC;AAAA,MATDC,aASC,QATDA,aASC;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDC,eAOC,QAPDA,eAOC;AAAA,MANDC,YAMC,QANDA,YAMC;AAAA,MALDC,iBAKC,QALDA,iBAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,UACC,QADDA,UACC;;AACD,MAAMC,UAAUJ,cACd,6DADc,GAGZ;AACE,mBAAeT,aADjB;AAEE,WAAOC,KAFT;AAGE,cAAUC,QAHZ;AAIE,iBAAaC,WAJf;AAKE,mBAAeC,aALjB;AAME,eAAWC,SANb;AAOE,qBAAiBC,eAPnB;AAQE,kBAAcC,YARhB;AASE,uBAAmBC,iBATrB;AAUE,YAAQG,MAVV;AAWE,gBAAYC;AAXd,IAHJ;AAiBA,SACE;AAAA;AAAA,MAAK,WAAW,iBAAOE,IAAvB;AACE;AAAA;AAAA;AACGJ;AADH,KADF;AAIE;AAAA;AAAA,QAAO,WAAW,iBAAOG,OAAzB;AACGA;AADH;AAJF,GADF;AAUD;;AAEDd,WAAWgB,SAAX,GAAuB;AACrBf,iBAAe,iBAAUgB,MAAV,CAAiBC,UADX;AAErBhB,SAAO,iBAAUiB,OAAV,CAAkB,iBAAUC,GAA5B,EAAiCF,UAFnB;AAGrBf,YAAU,iBAAUc,MAAV,CAAiBC,UAHN;AAIrBd,eAAa,iBAAUa,MAAV,CAAiBC,UAJT;AAKrBb,iBAAe,iBAAUgB,IALJ;AAMrBf,aAAW,iBAAUe,IANA;AAOrBd,mBAAiB,iBAAUc,IAPN;AAQrBb,gBAAc,iBAAUc,IAAV,CAAeJ,UARR;AASrBT,qBAAmB,iBAAUY,IAAV,CAAeH,UATb;AAUrBR,eAAa,iBAAUY,IAVF;AAWrBX,SAAO,iBAAUM,MAXI;AAYrBL,UAAQ,iBAAUU,IAZG;AAarBT,cAAY,iBAAUU;AAbD,CAAvB;;AAgBAvB,WAAWwB,YAAX,GAA0B;AACxBnB,iBAAeoB,SADS;AAExBnB,aAAWmB,SAFa;AAGxBf,eAAa,KAHW;AAIxBC,SAAO,EAJiB;AAKxBC,UAAQ,KALgB;AAMxBC,cAAY;AANY,CAA1B","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport 'core-js/fn/array/find';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport CallList from '../CallList';\n\nimport styles from './styles.scss';\n\n\nexport default function CallsPanel({\n  currentLocale,\n  calls,\n  areaCode,\n  countryCode,\n  onViewContact,\n  onLogCall,\n  isLoggedContact,\n  disableLinks,\n  dateTimeFormatter,\n  showSpinner,\n  title,\n  active,\n  loggingMap,\n}) {\n  const content = showSpinner ?\n    <SpinnerOverlay /> :\n    (\n      <CallList\n        currentLocale={currentLocale}\n        calls={calls}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        onViewContact={onViewContact}\n        onLogCall={onLogCall}\n        isLoggedContact={isLoggedContact}\n        disableLinks={disableLinks}\n        dateTimeFormatter={dateTimeFormatter}\n        active={active}\n        loggingMap={loggingMap}\n      />\n    );\n  return (\n    <div className={styles.root}>\n      <Header>\n        {title}\n      </Header>\n      <Panel className={styles.content}>\n        {content}\n      </Panel>\n    </div>\n  );\n}\n\nCallsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  calls: PropTypes.arrayOf(PropTypes.any).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  onViewContact: PropTypes.func,\n  onLogCall: PropTypes.func,\n  isLoggedContact: PropTypes.func,\n  disableLinks: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n  title: PropTypes.string,\n  active: PropTypes.bool,\n  loggingMap: PropTypes.object,\n};\n\nCallsPanel.defaultProps = {\n  onViewContact: undefined,\n  onLogCall: undefined,\n  showSpinner: false,\n  title: '',\n  active: false,\n  loggingMap: {},\n};\n"]}