{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","toggleTransferPanel","isShowTransferPanel","prevState","hideTransferPanel","onMerge","onBeforeMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","afterOnMerge","hideMergeConfirm","hideMergeConfirmAlt","afterHideMergeConfirm","confirmMerge","afterConfirmMerge","nextProps","sessionId","onKeyPadChange","onHangup","currentLocale","isOnFlip","flipNumbers","formatPhone","onFlip","onTransfer","isOnTransfer","searchContactList","searchContact","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","showBackButton","backButtonLabel","onBackButtonClick","phoneNumber","callStatus","startTime","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onPark","onAdd","nameMatches","fallBackName","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","avatarUrl","brand","showContactDisplayPlaceholder","gotoParticipantsCtrl","sourceIcons","direction","addDisabled","mergeDisabled","conferenceCallEquipped","conferenceCallParties","lastCallInfo","getAvatarUrl","actions","children","showSpinner","Component","propTypes","PropTypes","string","array","isRequired","number","bool","func","node","object","defaultProps","undefined","i"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport TransferPanel from '../TransferPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n      isShowMergeConfirm: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true,\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false,\n      });\n    };\n\n    this.toggleTransferPanel = () => {\n      this.setState(prevState => ({\n        isShowTransferPanel: !prevState.isShowTransferPanel,\n      }));\n    };\n\n    this.hideTransferPanel = () => {\n      this.setState({\n        isShowTransferPanel: false,\n      });\n    };\n\n    this.onMerge = () => {\n      const { onBeforeMerge } = this.props;\n      if (!onBeforeMerge || onBeforeMerge()) {\n        if (\n          this.props.hasConferenceCall &&\n          this.props.layout === callCtrlLayouts.normalCtrl\n        ) {\n          this.showMergeConfirm();\n        } else if (this.props.onMerge) {\n          this.props.onMerge();\n        }\n      }\n      // track user click merge\n      this.props.afterOnMerge();\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n\n    this.hideMergeConfirmAlt = () => {\n      this.hideMergeConfirm();\n      // user action track\n      this.props.afterHideMergeConfirm();\n    };\n\n    this.confirmMerge = () => {\n      this.setState({\n        isShowMergeConfirm: false\n      });\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n      // user action track\n      this.props.afterConfirmMerge();\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n    if (this.props.sessionId !== nextProps.sessionId) {\n      this.hiddenKeyPad();\n      this.hideFlipPanel();\n      this.hideTransferPanel();\n      this.hideMergeConfirm();\n    }\n  }\n\n  render() {\n    if (this.state.isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={this.props.onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={this.props.onHangup}\n          currentLocale={this.props.currentLocale}\n        />\n      );\n    }\n    if (this.state.isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={this.props.isOnFlip}\n          flipNumbers={this.props.flipNumbers}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          onFlip={this.props.onFlip}\n          complete={this.props.onHangup}\n        />\n      );\n    }\n    if (this.state.isShowTransferPanel) {\n      return (\n        <TransferPanel\n          onTransfer={this.props.onTransfer}\n          currentLocale={this.props.currentLocale}\n          toggleTransferPanel={this.toggleTransferPanel}\n          isOnTransfer={this.props.isOnTransfer}\n          searchContactList={this.props.searchContactList}\n          searchContact={this.props.searchContact}\n          formatPhone={this.props.formatPhone}\n          phoneTypeRenderer={this.props.phoneTypeRenderer}\n          phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n          recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n          recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={this.props.backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={this.props.sessionId}\n        callStatus={this.props.callStatus}\n        startTime={this.props.startTime}\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        recordStatus={this.props.recordStatus}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={this.props.onHangup}\n        onPark={this.props.onPark}\n        onAdd={this.props.onAdd}\n        onMerge={this.onMerge}\n        nameMatches={this.props.nameMatches}\n        fallBackName={this.props.fallBackName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.props.selectedMatcherIndex}\n        onSelectMatcherName={this.props.onSelectMatcherName}\n        avatarUrl={this.props.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.toggleTransferPanel}\n        gotoParticipantsCtrl={this.props.gotoParticipantsCtrl}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.props.layout}\n        direction={this.props.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        actions={this.props.actions}\n      >\n        {this.props.children}\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        {this.props.layout === callCtrlLayouts.normalCtrl\n          ? <ConfirmMergeModal\n            currentLocale={this.props.currentLocale}\n            show={this.state.isShowMergeConfirm}\n            onMerge={this.confirmMerge}\n            onCancel={this.hideMergeConfirmAlt}\n            partyProfiles={this.props.conferenceCallParties}\n          />\n          : null\n        }\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  isOnTransfer: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func,\n  onStopRecord: PropTypes.func,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onPark: PropTypes.func,\n  onHangup: PropTypes.func.isRequired,\n  onFlip: PropTypes.func,\n  onTransfer: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onKeyPadChange: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array,\n  searchContact: PropTypes.func,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  direction: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallParties: PropTypes.array,\n  getAvatarUrl: PropTypes.func,\n  gotoParticipantsCtrl: PropTypes.func,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  actions: PropTypes.array,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnTransfer: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n  getAvatarUrl: () => null,\n  gotoParticipantsCtrl: i => i,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  onFlip: () => null,\n  onRecord: () => null,\n  onStopRecord: () => null,\n  onPark: () => null,\n  onKeyPadChange: () => null,\n  onSelectMatcherName: () => null,\n  searchContactList: [],\n  searchContact: () => [],\n  actions: [],\n  recordStatus: '',\n};\n\nexport default CallCtrlPanel;\n"]}