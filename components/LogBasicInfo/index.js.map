{"version":3,"sources":["components/LogBasicInfo/index.js"],"names":["LogBasicInfo","callIconMap","callResults","missed","dynamicsFont","callDirections","inbound","outbound","telephonyStatuses","ringing","callHover","colorStatusMap","green","callConnected","callAccepted","accepted","red","voicemail","rejected","blocked","noAnswer","busy","hangUp","HangUp","declined","orange","onHold","parkedCall","props","currentLog","call","logName","formatPhone","currentLocale","direction","to","from","duration","result","telephonyStatus","number","phoneNumber","extensionNumber","formatNumber","status","active","isRinging","title","i18n","getString","statusI18n","iconClassName","styles","icon","statusClassName","callInfo","callIcon","callDisplay","contact","separator","propTypes","PropTypes","string","isRequired","func","object","defaultProps","value"],"mappings":"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","file":"index.js","sourcesContent":["import { contains } from 'ramda';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport callResults from 'ringcentral-integration/enums/callResults';\nimport telephonyStatuses from 'ringcentral-integration/enums/telephonyStatus';\nimport { isMissed } from 'ringcentral-integration/lib/callLogHelpers';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nconst callIconMap = {\n  [callResults.missed]: dynamicsFont.missed,\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  [telephonyStatuses.ringing]: dynamicsFont.callHover\n};\nconst colorStatusMap = {\n  green: [\n    telephonyStatuses.callConnected,\n    telephonyStatuses.ringing,\n    callResults.callAccepted,\n    callResults.accepted,\n  ],\n  red: [\n    callResults.missed,\n    callResults.voicemail,\n    callResults.rejected,\n    callResults.blocked,\n    callResults.noAnswer,\n    callResults.busy,\n    callResults.hangUp,\n    callResults.HangUp,\n    callResults.declined\n  ],\n  orange: [\n    telephonyStatuses.onHold,\n    telephonyStatuses.parkedCall\n  ],\n};\n\nexport default function LogBasicInfo(props) {\n  const {\n    currentLog: {\n      call,\n      logName,\n    },\n    formatPhone,\n    currentLocale,\n  } = props;\n  if (!call) return null;\n  const {\n    direction,\n    to,\n    from,\n    duration,\n    result,\n    telephonyStatus\n  } = call;\n  const number = direction === callDirections.outbound ?\n    (to && (to.phoneNumber || to.extensionNumber)) :\n    (from && (from.phoneNumber || from.extensionNumber));\n  const formatNumber = formatPhone(number);\n  const status = result || telephonyStatus;\n  const active = (!duration && duration !== 0);\n  const missed = isMissed(call);\n  const green = contains(status, colorStatusMap.green);\n  const red = contains(status, colorStatusMap.red);\n  const orange = contains(status, colorStatusMap.orange);\n  const isRinging = status === telephonyStatuses.ringing;\n  const title = missed ? i18n.getString(callResults.missed, currentLocale) :\n    i18n.getString(direction, currentLocale);\n  const statusI18n = i18n.getString(status, currentLocale);\n  const iconClassName = classnames(\n    styles.icon,\n    isRinging && styles.ringing,\n    isRinging && dynamicsFont.callHover,\n    !isRinging && !missed && callIconMap[direction],\n    missed && styles.missed,\n    missed && callIconMap[callResults.missed],\n    !isRinging && active && styles.active\n  );\n  const statusClassName = classnames(\n    styles.status,\n    green && styles.green,\n    red && styles.red,\n    orange && styles.orange\n  );\n  return (\n    <div className={styles.callInfo}>\n      <div\n        className={styles.callIcon}\n        title={title}>\n        <span\n          className={iconClassName}\n        />\n      </div>\n      <ul className={styles.callDisplay}>\n        <li\n          className={styles.contact}\n          title={logName}>\n          {logName}\n        </li>\n        <li>\n          <span\n            className={styles.number}\n            title={formatNumber}>\n            {formatNumber}\n          </span>\n          {\n            formatNumber ? (\n              <span className={styles.separator}>&nbsp;</span>\n            ) : null\n          }\n          <span\n            className={statusClassName}\n            title={statusI18n}>\n            {statusI18n}\n          </span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nLogBasicInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func,\n  currentLog: PropTypes.object,\n};\n\nLogBasicInfo.defaultProps = {\n  formatPhone: value => value,\n  currentLog: {},\n};\n"]}