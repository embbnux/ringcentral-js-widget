{"version":3,"sources":["components/Header/index.js"],"names":["HeaderButton","props","styles","button","disabled","undefined","onClick","title","label","propTypes","PropTypes","func","node","bool","string","defaultProps","Header","children","leftButtons","buttons","filter","b","placement","hidden","map","idx","rightButtons","root","className","length","arrayOf","shape","isRequired","funcs","oneOf"],"mappings":";;;;;;;;;;QAKgBA,Y,GAAAA,Y;;AALhB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SACE;AAAA;AAAA;AACE,iBAAW,0BACTC,iBAAOC,MADE,EAETF,MAAMG,QAAN,IAAkBF,iBAAOE,QAFhB,CADb;AAKE,eAASH,MAAMG,QAAN,GAAiBC,SAAjB,GAA6BJ,MAAMK,OAL9C;AAME,aAAOL,MAAMM;AANf;AAQGN,UAAMO;AART,GADF;AAYD;;AAEDR,aAAaS,SAAb,GAAyB;AACvBH,WAASI,oBAAUC,IADI;AAEvBH,SAAOE,oBAAUE,IAFM;AAGvBR,YAAUM,oBAAUG,IAHG;AAIvBN,SAAOG,oBAAUI;AAJM,CAAzB;;AAOAd,aAAae,YAAb,GAA4B;AAC1BT,WAASD,SADiB;AAE1BG,SAAOH,SAFmB;AAG1BD,YAAU,KAHgB;AAI1BG,SAAOF;AAJmB,CAA5B;;AAOA,SAASW,MAAT,CAAgBf,KAAhB,EAAuB;AACrB,MAAIO,QAAQ,IAAZ;AACA,MAAIP,MAAMgB,QAAV,EAAoB;AAClBT,YACE;AAAA;AAAA,QAAK,WAAWN,iBAAOM,KAAvB;AACGP,YAAMgB;AADT,KADF;AAKD;;AAED,MAAMC,cAAcjB,MAAMkB,OAAN,CACjBC,MADiB,CACV;AAAA,WAAKC,EAAEC,SAAF,KAAgB,OAAhB,IAA2B,CAACD,EAAEE,MAAnC;AAAA,GADU,EAEjBC,GAFiB,CAEb,UAACH,CAAD,EAAII,GAAJ;AAAA,WACH,8BAAC,YAAD,2BAAc,KAAKA,GAAnB,IAA4BJ,CAA5B,EADG;AAAA,GAFa,CAApB;;AAMA,MAAMK,eAAezB,MAAMkB,OAAN,CAClBC,MADkB,CACX;AAAA,WAAKC,EAAEC,SAAF,KAAgB,OAAhB,IAA2B,CAACD,EAAEE,MAAnC;AAAA,GADW,EAElBC,GAFkB,CAEd,UAACH,CAAD,EAAII,GAAJ;AAAA,WACH,8BAAC,YAAD,2BAAc,KAAKA,GAAnB,IAA4BJ,CAA5B,EADG;AAAA,GAFc,CAArB;;AAMA,SACE;AAAA;AAAA,MAAQ,WAAW,0BAAWnB,iBAAOyB,IAAlB,EAAwB1B,MAAM2B,SAA9B,CAAnB;AACGpB,SADH;AAGIU,gBAAYW,MAAZ,GAEI;AAAA;AAAA,QAAK,WAAW3B,iBAAOgB,WAAvB;AACGA;AADH,KAFJ,GAMI,IATR;AAYIQ,iBAAaG,MAAb,GAEI;AAAA;AAAA,QAAK,WAAW3B,iBAAOwB,YAAvB;AACGA;AADH,KAFJ,GAMI;AAlBR,GADF;AAuBD;;AAEDV,OAAOP,SAAP,GAAmB;AACjBmB,aAAWlB,oBAAUI,MADJ;AAEjBG,YAAUP,oBAAUE,IAFH;AAGjBO,WAAST,oBAAUoB,OAAV,CAAkBpB,oBAAUqB,KAAV,CAAgB;AACzCvB,WAAOE,oBAAUE,IAAV,CAAeoB,UADmB;AAEzC1B,aAASI,oBAAUuB,KAFsB;AAGzCX,eAAWZ,oBAAUwB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;AAH8B,GAAhB,CAAlB;AAHQ,CAAnB;;AAUAlB,OAAOD,YAAP,GAAsB;AACpBa,aAAW,EADS;AAEpBX,YAAUZ,SAFU;AAGpBc,WAAS;AAHW,CAAtB;;kBAMeH,M","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport function HeaderButton(props) {\n  return (\n    <div\n      className={classnames(\n        styles.button,\n        props.disabled && styles.disabled,\n      )}\n      onClick={props.disabled ? undefined : props.onClick}\n      title={props.title}\n    >\n      {props.label}\n    </div>\n  );\n}\n\nHeaderButton.propTypes = {\n  onClick: PropTypes.func,\n  label: PropTypes.node,\n  disabled: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nHeaderButton.defaultProps = {\n  onClick: undefined,\n  label: undefined,\n  disabled: false,\n  title: undefined,\n};\n\nfunction Header(props) {\n  let label = null;\n  if (props.children) {\n    label = (\n      <div className={styles.label}>\n        {props.children}\n      </div>\n    );\n  }\n\n  const leftButtons = props.buttons\n    .filter(b => b.placement !== 'right' && !b.hidden)\n    .map((b, idx) => (\n      <HeaderButton key={idx} {...b} />\n    ));\n\n  const rightButtons = props.buttons\n    .filter(b => b.placement === 'right' && !b.hidden)\n    .map((b, idx) => (\n      <HeaderButton key={idx} {...b} />\n    ));\n\n  return (\n    <header className={classnames(styles.root, props.className)}>\n      {label}\n      {\n        leftButtons.length\n          ? (\n            <div className={styles.leftButtons}>\n              {leftButtons}\n            </div>\n          )\n          : null\n      }\n      {\n        rightButtons.length\n          ? (\n            <div className={styles.rightButtons}>\n              {rightButtons}\n            </div>\n          )\n          : null\n      }\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n  buttons: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.node.isRequired,\n    onClick: PropTypes.funcs,\n    placement: PropTypes.oneOf(['left', 'right']),\n  })),\n};\n\nHeader.defaultProps = {\n  className: '',\n  children: undefined,\n  buttons: [],\n};\n\nexport default Header;\n"]}