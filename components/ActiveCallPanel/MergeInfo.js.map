{"version":3,"sources":["components/ActiveCallPanel/MergeInfo.js"],"names":["MergeInfo","props","state","lastCallAvatar","lastCallInfoTimeout","mounted","timeout_clock","clearTimeout","lastCallInfo","getAvatarUrl","avatarUrl","lastCallContact","then","setState","calleeType","calleeTypes","conference","isSimplifiedCallAndLastCallInfoNotReady","name","phoneNumber","setTimeout","checkLastCallInfoTimeout","currentLocale","timeCounter","currentCallTitle","currentCallAvatarUrl","formatPhone","isLastCallInfoReady","isLastCallEnded","status","sessionStatus","finished","statusClasses","styles","callee_status","callee_status_disconnected","isOnConferenceCall","isContacts","contacts","calleeName","loadingText","i18n","getString","loadingTimeoutText","showSpinner","mergeInfo","merge_item","callee_avatar","extraNum","callee_name","last_call_info_load_timeout","merge_item_active","callee_avatar_active","callee_name_active","callee_status_active","Component","propTypes","PropTypes","string","isRequired","element","object","func","number","defaultProps","unknow","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEMA,S;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4IACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,sBAAgB,IADL;AAEXC,2BAAqB;AAFV,KAAb;AAIA,UAAKC,OAAL,GAAe,KAAf;AANiB;AAOlB;;;;2CAEsB;AACrB,WAAKA,OAAL,GAAe,KAAf;AACA,UAAI,KAAKC,aAAT,EAAwB;AACtBC,qBAAa,KAAKD,aAAlB;AACD;AACF;;;wCAEmB;AAAA;;AAClB,WAAKD,OAAL,GAAe,IAAf;AADkB,mBAEqB,KAAKJ,KAF1B;AAAA,UAEVO,YAFU,UAEVA,YAFU;AAAA,UAEIC,YAFJ,UAEIA,YAFJ;;AAGlB,UAAID,gBAAgB,CAACA,aAAaE,SAA9B,IAA2CF,aAAaG,eAA5D,EAA6E;AAC3EF,qBAAaD,aAAaG,eAA1B,EAA2CC,IAA3C,CAAgD,UAACT,cAAD,EAAoB;AAClE,cAAI,OAAKE,OAAT,EAAkB;AAChB,mBAAKQ,QAAL,CAAc;AACZV;AADY,aAAd;AAGD;AACF,SAND;AAOD;AACD,UACEK,gBAAgBA,aAAaM,UAAb,KAA4BC,sBAAYC,UAD1D,EAEE;AACA,YAAMC,0CACJ,CAACT,aAAaU,IAAd,IAAsB,CAACV,aAAaW,WADtC;;AAIA,YAAIF,uCAAJ,EAA6C;AAC3C,eAAKX,aAAL,GAAqBc,WAAW,YAAM;AACpC,gBAAI,OAAKf,OAAT,EAAkB;AAChB,qBAAKQ,QAAL,CAAc;AACZT,qCAAqB;AADT,eAAd;AAGD;AACF,WANoB,EAMlB,KAAKH,KAAL,CAAWoB,wBANO,CAArB;AAOD,SARD,MAQO,IAAI,KAAKf,aAAT,EAAwB;AAC7BC,uBAAa,KAAKD,aAAlB;AACD;AACF;AACF;;;6BAEQ;AAAA;;AAAA,oBAQH,KAAKL,KARF;AAAA,UAELqB,aAFK,WAELA,aAFK;AAAA,UAGLC,WAHK,WAGLA,WAHK;AAAA,UAILf,YAJK,WAILA,YAJK;AAAA,UAKLgB,gBALK,WAKLA,gBALK;AAAA,UAMLC,oBANK,WAMLA,oBANK;AAAA,UAOLC,WAPK,WAOLA,WAPK;;AASP,UAAI,CAAClB,YAAL,EAAmB;AACjB,eAAO,IAAP;AACD;AAXM,mBAYyC,KAAKN,KAZ9C;AAAA,UAYCC,cAZD,UAYCA,cAZD;AAAA,UAYiBC,mBAZjB,UAYiBA,mBAZjB;;AAaP,UAAMuB,sBACJ,CAAC,CAACnB,YAAF,KAAmB,CAAC,CAACA,aAAaU,IAAf,IAAuB,CAAC,CAACV,aAAaW,WAAzD,CADF;AAGA,UAAMS,kBAAkBpB,gBAAgBA,aAAaqB,MAAb,KAAwBC,wBAAcC,QAA9E;AACA,UAAMC,gBAAgB,wFACnBC,iBAAOC,aADY,EACI,IADJ,8CAEnBD,iBAAOE,0BAFY,EAEiB,CAAC,CAACP,eAFnB,gBAAtB;;AAKA,UAAMQ,qBAAqB,CAAC,EAC1B5B,gBAAgBA,aAAaM,UAAb,KAA4BC,sBAAYC,UAD9B,CAA5B;AAGA,UAAMqB,aAAa,CAAC,EAClB7B,gBAAgBA,aAAaM,UAAb,KAA4BC,sBAAYuB,QADtC,CAApB;AAGA,UAAMC,aAAaF,aAAa7B,aAAaU,IAA1B,GAAiCQ,YAAYlB,aAAaW,WAAzB,CAApD;AACA,UAAMqB,cAAcC,eAAKC,SAAL,CAAe,SAAf,CAApB;AACA,UAAMC,qBAAqBF,eAAKC,SAAL,CAAe,gBAAf,CAA3B;AACA,UAAME,cAAc,CAACxC,mBAAD,IAAwB,CAACuB,mBAAzB,IAAgD,CAACS,kBAArE;AACA,aACE;AAAA;AAAA,UAAK,WAAWH,iBAAOY,SAAvB;AACE;AAAA;AAAA,YAAK,WAAWZ,iBAAOa,UAAvB;AACE;AAAA;AAAA,cAAK,WAAWb,iBAAOc,aAAvB;AACE,0CAAC,oBAAD;AACE,yBAAWV,cAAc,CAAC7B,aAAaE,SAA5B,GACPP,cADO,GAEPK,aAAaE,SAHnB;AAIE,wBAAU0B,qBAAqB5B,aAAawC,QAAlC,GAA6C,CAJzD;AAKE,kCAAoBZ,kBALtB;AAME,2BAAaQ;AANf;AADF,WADF;AAYI,WAACjB,uBAAwB,CAACA,mBAAD,IAAwBS,kBAAjD,KACE;AAAA;AAAA,cAAK,WAAWH,iBAAOgB,WAAvB;AAEIb,iCAEI;AAAA;AAAA,gBAAM,OAAOK,eAAKC,SAAL,CAAe,gBAAf,EAAiCpB,aAAjC,CAAb;AACGmB,6BAAKC,SAAL,CAAe,gBAAf,EAAiCpB,aAAjC;AADH,aAFJ,GAOI;AAAA;AAAA,gBAAM,OAAOiB,UAAb;AAA0BA;AAA1B;AATR,WAbN;AA6BK,WAACZ,mBAAD,IAAwB,CAACS,kBAA1B,KACEhC,sBACE;AAAA;AAAA,cAAK,WAAW6B,iBAAOiB,2BAAvB;AACE;AAAA;AAAA,gBAAM,OAAOP,kBAAb;AAAkCA;AAAlC;AADF,WADF,GAKE;AAAA;AAAA,cAAK,WAAWV,iBAAOgB,WAAvB;AACE;AAAA;AAAA,gBAAM,OAAOT,WAAb;AAA2BA;AAA3B;AADF,WANJ,CA7BJ;AA2CI,WAACb,uBAAwB,CAACA,mBAAD,IAAwBS,kBAAjD,KACE;AAAA;AAAA,cAAK,WAAWJ,aAAhB;AAEIxB,yBAAaqB,MAAb,KAAwBC,wBAAcC,QAAtC,GACIU,eAAKC,SAAL,CAAe,cAAf,EAA+BpB,aAA/B,CADJ,GAEImB,eAAKC,SAAL,CAAe,QAAf,EAAyBpB,aAAzB;AAJR;AA5CN,SADF;AAwDE;AAAA;AAAA,YAAK,WAAWW,iBAAOkB,iBAAvB;AACE;AAAA;AAAA,cAAK,WAAWlB,iBAAOmB,oBAAvB;AAEI3B,mCACI,8BAAC,oBAAD,IAAY,WAAWA,oBAAvB,GADJ,GAEI,8BAAC,oBAAD,IAAY,WAAW,IAAvB;AAJR,WADF;AAQE;AAAA;AAAA,cAAK,WAAWQ,iBAAOoB,kBAAvB;AACE;AAAA;AAAA,gBAAM,OAAO7B,gBAAb;AAAgCA;AAAhC;AADF,WARF;AAWE;AAAA;AAAA,cAAK,WAAWS,iBAAOqB,oBAAvB;AACG/B;AADH;AAXF;AAxDF,OADF;AA0ED;;;EA5JqBgC,gB;;AA+JxBvD,UAAUwD,SAAV,GAAsB;AACpBlC,iBAAemC,oBAAUC,MAAV,CAAiBC,UADZ;AAEpBpC,eAAakC,oBAAUG,OAAV,CAAkBD,UAFX;AAGpBnD,gBAAciD,oBAAUI,MAHJ;AAIpBrC,oBAAkBiC,oBAAUC,MAJR;AAKpBjC,wBAAsBgC,oBAAUC,MALZ;AAMpBhC,eAAa+B,oBAAUK,IANH;AAOpBrD,gBAAcgD,oBAAUK,IAPJ;AAQpBzC,4BAA0BoC,oBAAUM;AARhB,CAAtB;;AAWA/D,UAAUgE,YAAV,GAAyB;AACvBxD,gBAAc,EAAEM,YAAYC,sBAAYkD,MAA1B,EADS;AAEvBzC,oBAAkB0C,SAFK;AAGvBzC,wBAAsByC,SAHC;AAIvBxC,eAAa;AAAA,WAAM,IAAN;AAAA,GAJU;AAKvBjB,gBAAc;AAAA,WAAM,IAAN;AAAA,GALS;;AAOvB;;;AAGAY,4BAA0B,KAAK;AAVR,CAAzB;;kBAaerB,S","file":"MergeInfo.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport CallAvatar from '../CallAvatar';\n\nclass MergeInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastCallAvatar: null,\n      lastCallInfoTimeout: false\n    };\n    this.mounted = false;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.timeout_clock) {\n      clearTimeout(this.timeout_clock);\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { lastCallInfo, getAvatarUrl } = this.props;\n    if (lastCallInfo && !lastCallInfo.avatarUrl && lastCallInfo.lastCallContact) {\n      getAvatarUrl(lastCallInfo.lastCallContact).then((lastCallAvatar) => {\n        if (this.mounted) {\n          this.setState({\n            lastCallAvatar,\n          });\n        }\n      });\n    }\n    if (\n      lastCallInfo && lastCallInfo.calleeType !== calleeTypes.conference\n    ) {\n      const isSimplifiedCallAndLastCallInfoNotReady = (\n        !lastCallInfo.name || !lastCallInfo.phoneNumber\n      );\n\n      if (isSimplifiedCallAndLastCallInfoNotReady) {\n        this.timeout_clock = setTimeout(() => {\n          if (this.mounted) {\n            this.setState({\n              lastCallInfoTimeout: true\n            });\n          }\n        }, this.props.checkLastCallInfoTimeout);\n      } else if (this.timeout_clock) {\n        clearTimeout(this.timeout_clock);\n      }\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      timeCounter,\n      lastCallInfo,\n      currentCallTitle,\n      currentCallAvatarUrl,\n      formatPhone,\n    } = this.props;\n    if (!lastCallInfo) {\n      return null;\n    }\n    const { lastCallAvatar, lastCallInfoTimeout } = this.state;\n    const isLastCallInfoReady = (\n      !!lastCallInfo && (!!lastCallInfo.name || !!lastCallInfo.phoneNumber)\n    );\n    const isLastCallEnded = lastCallInfo && lastCallInfo.status === sessionStatus.finished;\n    const statusClasses = classnames({\n      [styles.callee_status]: true,\n      [styles.callee_status_disconnected]: !!isLastCallEnded,\n    });\n\n    const isOnConferenceCall = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.conference\n    );\n    const isContacts = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.contacts\n    );\n    const calleeName = isContacts ? lastCallInfo.name : formatPhone(lastCallInfo.phoneNumber);\n    const loadingText = i18n.getString('loading');\n    const loadingTimeoutText = i18n.getString('loadingTimeout');\n    const showSpinner = !lastCallInfoTimeout && !isLastCallInfoReady && !isOnConferenceCall;\n    return (\n      <div className={styles.mergeInfo}>\n        <div className={styles.merge_item}>\n          <div className={styles.callee_avatar}>\n            <CallAvatar\n              avatarUrl={isContacts && !lastCallInfo.avatarUrl\n                ? lastCallAvatar\n                : lastCallInfo.avatarUrl}\n              extraNum={isOnConferenceCall ? lastCallInfo.extraNum : 0}\n              isOnConferenceCall={isOnConferenceCall}\n              spinnerMode={showSpinner}\n            />\n          </div>\n          {\n            (isLastCallInfoReady || (!isLastCallInfoReady && isOnConferenceCall)) && (\n              <div className={styles.callee_name}>\n                {\n                  isOnConferenceCall\n                    ? (\n                      <span title={i18n.getString('conferenceCall', currentLocale)}>\n                        {i18n.getString('conferenceCall', currentLocale)}\n                      </span>\n                    )\n                    : (\n                      <span title={calleeName}>{calleeName}</span>\n                    )\n                }\n              </div>\n            )\n          }\n          {\n            (!isLastCallInfoReady && !isOnConferenceCall) && (\n              lastCallInfoTimeout ? (\n                <div className={styles.last_call_info_load_timeout}>\n                  <span title={loadingTimeoutText}>{loadingTimeoutText}</span>\n                </div>\n              ) : (\n                <div className={styles.callee_name}>\n                  <span title={loadingText}>{loadingText}</span>\n                </div>\n              )\n            )\n          }\n\n          {\n            (isLastCallInfoReady || (!isLastCallInfoReady && isOnConferenceCall)) && (\n              <div className={statusClasses}>\n                {\n                  lastCallInfo.status === sessionStatus.finished\n                    ? i18n.getString('disconnected', currentLocale)\n                    : i18n.getString('onHold', currentLocale)\n                }\n              </div>\n            )\n          }\n\n        </div>\n        <div className={styles.merge_item_active}>\n          <div className={styles.callee_avatar_active} >\n            {\n              currentCallAvatarUrl\n                ? <CallAvatar avatarUrl={currentCallAvatarUrl} />\n                : <CallAvatar avatarUrl={null} />\n            }\n          </div>\n          <div className={styles.callee_name_active}>\n            <span title={currentCallTitle}>{currentCallTitle}</span>\n          </div>\n          <div className={styles.callee_status_active}>\n            {timeCounter}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMergeInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  timeCounter: PropTypes.element.isRequired,\n  lastCallInfo: PropTypes.object,\n  currentCallTitle: PropTypes.string,\n  currentCallAvatarUrl: PropTypes.string,\n  formatPhone: PropTypes.func,\n  getAvatarUrl: PropTypes.func,\n  checkLastCallInfoTimeout: PropTypes.number,\n};\n\nMergeInfo.defaultProps = {\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  currentCallTitle: undefined,\n  currentCallAvatarUrl: undefined,\n  formatPhone: () => null,\n  getAvatarUrl: () => null,\n\n  /**\n   * The timeout seconds to check if the last call info is received.\n   */\n  checkLastCallInfoTimeout: 30 * 1000,\n};\n\nexport default MergeInfo;\n"]}