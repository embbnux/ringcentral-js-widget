{"version":3,"sources":["components/ActiveCallPanel/index.js"],"names":["ActiveCallPanel","props","state","isShowKeyPad","hiddenKeyPad","setState","showKeyPad","timeCounter","startTime","userInfo","userName","phoneNumber","currentLocale","formatPhone","avatar","portrait","icon","buttonsPad","isOnMute","isOnHold","isOnRecord","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","hangup","onAdd","dialPad","onKeyPadChange","root","toggleMinimized","backButton","arrow","backIcon","backLabel","children","propTypes","string","isRequired","number","bool","func","node","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport DurationCounter from '../DurationCounter';\nimport ActiveCallUserInfo from '../ActiveCallUserInfo';\nimport ActiveCallPad from '../ActiveCallPad';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nclass ActiveCallPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n  }\n\n  render() {\n    const timeCounter = this.props.startTime ?\n      (\n        <span className={styles.timeCounter}>\n          <DurationCounter startTime={this.props.startTime} />\n        </span>\n      ) : null;\n    const userInfo = this.state.isShowKeyPad ? null : (\n      <ActiveCallUserInfo\n        name={this.props.userName}\n        phoneNumber={this.props.phoneNumber}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        className={styles.userInfo}\n        avatar={(\n          <div className={styles.avatar}>\n            <i className={classnames(dynamicsFont.portrait, styles.icon)} />\n          </div>\n        )}\n      />\n    );\n    const buttonsPad = this.state.isShowKeyPad ? null : (\n      <ActiveCallPad\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        isOnRecord={this.props.isOnRecord}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        hangup={this.props.hangup}\n        onAdd={this.props.onAdd}\n      />\n    );\n    const dialPad = this.state.isShowKeyPad ? (\n      <ActiveCallDialPad\n        onChange={this.props.onKeyPadChange}\n        hiddenDialPad={this.hiddenKeyPad}\n        hangup={this.props.hangup}\n      />\n    ) : null;\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.toggleMinimized}\n          backButton={(\n            <span className={styles.backButton}>\n              <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n              <span className={styles.backLabel}>Calls</span>\n            </span>\n          )}\n          buttons={[]}\n        />\n        <Panel>\n          {timeCounter}\n          {userInfo}\n          {buttonsPad}\n          {dialPad}\n          {this.props.children}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nActiveCallPanel.propTypes = {\n  phoneNumber: PropTypes.string,\n  userName: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnRecord: PropTypes.bool,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  hangup: PropTypes.func.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  onKeyPadChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nActiveCallPanel.defaultProps = {\n  userName: null,\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnRecord: false,\n  phoneNumber: null,\n  children: undefined,\n};\n\nexport default ActiveCallPanel;\n"]}