{"version":3,"sources":["components/ActiveCallPanel/index.js"],"names":["ContactUser","props","name","getString","currentLocale","user","userAvatar","portrait","userPhoneNumber","phoneNumber","userName","propTypes","string","isRequired","defaultProps","OperationButton","className","operationButton","button","onClick","disabled","children","buttonTitle","title","func","bool","node","undefined","ActiveCallPanel","state","minimized","badgeOffsetX","badgeOffsetY","connectedAt","Date","updatePositionOffset","x","y","setState","active","draggable","toggleMinimized","phoneBage","activeIcon","root","minimizeButton","close","connectStatus","uniBD","timeCounter","buttonRow","uni7B","uniA4","uni2496","uni2474","icon_radio_off","ActionButtons_Add","uni2E","stopButton","hangup","uni44"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport Button from '../Button';\nimport Badge from '../Badge';\nimport Draggable from '../Draggable';\nimport DurationCounter from '../DurationCounter';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport rcFont from '../../assets/RcFont/RcFont.scss';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nfunction ContactUser(props) {\n  const name = props.name || i18n.getString('unkonw', props.currentLocale);\n  return (\n    <div className={styles.user}>\n      <div className={styles.userAvatar}>\n        <i className={dynamicsFont.portrait} />\n      </div>\n      <div className={styles.userPhoneNumber}>{props.phoneNumber}</div>\n      <div className={styles.userName}>{name}</div>\n    </div>\n  );\n}\n\nContactUser.propTypes = {\n  name: PropTypes.string,\n  phoneNumber: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nContactUser.defaultProps = {\n  name: null,\n};\n\nfunction OperationButton(props) {\n  const className = classnames(styles.operationButton, props.className);\n  return (\n    <div className={className}>\n      <Button\n        className={styles.button}\n        onClick={props.onClick}\n        disabled={props.disabled}\n      >\n        {props.children}\n      </Button>\n      <div className={styles.buttonTitle}>\n        {props.title}\n      </div>\n    </div>\n  );\n}\n\nOperationButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n};\n\nOperationButton.defaultProps = {\n  className: undefined,\n  disabled: false,\n  children: undefined,\n};\n\nclass ActiveCallPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      minimized: false,\n      badgeOffsetX: 0,\n      badgeOffsetY: 0,\n      connectedAt: new Date(),\n    };\n\n    this.updatePositionOffset = (x, y) => {\n      this.setState({\n        badgeOffsetX: x,\n        badgeOffsetY: y,\n      });\n    };\n  }\n\n  render() {\n    if (!this.props.active) {\n      return null;\n    }\n\n    if (this.props.minimized) {\n      return (\n        <Draggable\n          className={styles.draggable}\n          onClick={this.props.toggleMinimized}\n          positionOffsetX={this.state.badgeOffsetX}\n          positionOffsetY={this.state.badgeOffsetY}\n          updatePositionOffset={this.updatePositionOffset}\n        >\n          <Badge\n            className={styles.phoneBage}\n            name={'active-call'}\n          >\n            <span className={styles.activeIcon}>\n              <i className={dynamicsFont.active} />\n            </span>\n            Calling\n          </Badge>\n        </Draggable>\n      );\n    }\n\n    return (\n      <div className={styles.root}>\n        <Button\n          className={styles.minimizeButton}\n          onClick={this.props.toggleMinimized}\n        >\n          <i className={dynamicsFont.close} />\n        </Button>\n        <span className={styles.connectStatus}>\n          <i className={rcFont.uniBD} />\n        </span>\n        <span className={styles.timeCounter}>\n          <DurationCounter startTime={this.state.connectedAt} />\n        </span>\n\n        <ContactUser\n          name={this.props.userName}\n          phoneNumber={this.props.phoneNumber}\n          currentLocale={this.props.currentLocale}\n        />\n        <div className={styles.buttonRow}>\n          <OperationButton\n            onClick={() => null}\n            title={'Mute'}\n          >\n            <i className={rcFont.uni7B} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Keypad'}\n          >\n            <i className={rcFont.uniA4} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Audio'}\n          >\n            <i className={rcFont.uni2496} />\n          </OperationButton>\n        </div>\n        <div className={styles.buttonRow}>\n          <OperationButton\n            onClick={() => null}\n            title={'Hold'}\n          >\n            <i className={rcFont.uni2474} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Record'}\n          >\n            <i className={rcFont.icon_radio_off} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Add'}\n          >\n            <i className={rcFont.ActionButtons_Add} />\n          </OperationButton>\n        </div>\n        <div className={styles.buttonRow}>\n          <OperationButton\n            onClick={() => null}\n            title={'Transfer'}\n          >\n            <i className={rcFont['icon-transfer']} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Park'}\n          >\n            <i className={rcFont.uni2E} />\n          </OperationButton>\n          <OperationButton\n            onClick={() => null}\n            title={'Flip'}\n          >\n            <i className={rcFont['icon-flip']} />\n          </OperationButton>\n        </div>\n        <div className={styles.buttonRow}>\n          <Button\n            className={classnames(styles.button, styles.stopButton)}\n            onClick={this.props.hangup}\n            disabled={false}\n          >\n            <i className={rcFont.uni44} />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nActiveCallPanel.propTypes = {\n  active: PropTypes.bool.isRequired,\n  hangup: PropTypes.func.isRequired,\n  minimized: PropTypes.bool.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  userName: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nActiveCallPanel.defaultProps = {\n  userName: null,\n};\n\nexport default ActiveCallPanel;\n"]}