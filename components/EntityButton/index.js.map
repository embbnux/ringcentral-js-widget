{"version":3,"sources":["components/EntityButton/index.js"],"names":["EntityButton","className","onViewEntity","onCreateEntity","hasEntity","isCreating","disableLinks","viewEntityTitle","createEntityTitle","spinner","styles","spinnerContainer","icon","dynamicsFont","record","addEntity","onClick","title","entity","propTypes","PropTypes","string","func","bool","defaultProps","undefined"],"mappings":";;;;;kBAQwBA,Y;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,YAAT,OASZ;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,eAEC,QAFDA,eAEC;AAAA,MADDC,iBACC,QADDA,iBACC;;AACD;AACA,MAAMC,UAAUJ,aAEZ;AAAA;AAAA,MAAK,WAAWK,iBAAOC,gBAAvB;AACE,kCAAC,iBAAD,IAAS,WAAW,CAApB;AADF,GAFY,GAMd,IANF;AAOA,MAAMC,OAAOR,YAAYS,uBAAaC,MAAzB,GAAkCD,uBAAaE,SAA5D;AACA,MAAMC,UAAUZ,YAAYF,YAAZ,GAA2BC,cAA3C;AACA,MAAMc,QAAQb,YAAYG,eAAZ,GAA8BC,iBAA5C;AACA,SACE;AAAC,oBAAD;AAAA;AACE,iBAAW,0BAAWE,iBAAOQ,MAAlB,EAA0BjB,SAA1B,CADb;AAEE,eAASe,OAFX;AAGE,gBAAUV,YAHZ;AAKE;AACE,iBAAWM,IADb;AAEE,aAAOK;AAFT,MALF;AASGR;AATH,GADF;AAaD;;AAEDT,aAAamB,SAAb,GAAyB;AACvBlB,aAAWmB,oBAAUC,MADE;AAEvBnB,gBAAckB,oBAAUE,IAFD;AAGvBnB,kBAAgBiB,oBAAUE,IAHH;AAIvBlB,aAAWgB,oBAAUG,IAJE;AAKvBlB,cAAYe,oBAAUG,IALC;AAMvBjB,gBAAcc,oBAAUG,IAND;AAOvBhB,mBAAiBa,oBAAUC,MAPJ;AAQvBb,qBAAmBY,oBAAUC;AARN,CAAzB;;AAWArB,aAAawB,YAAb,GAA4B;AAC1BvB,aAAWwB,SADe;AAE1BvB,gBAAcuB,SAFY;AAG1BrB,aAAW,KAHe;AAI1BD,kBAAgBsB,SAJU;AAK1BpB,cAAY,KALc;AAM1BC,gBAAc,KANY;AAO1BC,mBAAiBkB,SAPS;AAQ1BjB,qBAAmBiB;AARO,CAA5B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nexport default function EntityButton({\n  className,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n  viewEntityTitle,\n  createEntityTitle,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n  const title = hasEntity ? viewEntityTitle : createEntityTitle;\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span\n        className={icon}\n        title={title}\n      />\n      {spinner}\n    </Button>\n  );\n}\n\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  viewEntityTitle: PropTypes.string,\n  createEntityTitle: PropTypes.string,\n};\n\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n  viewEntityTitle: undefined,\n  createEntityTitle: undefined,\n};\n"]}