{"version":3,"sources":["components/RecipientHeader/index.js"],"names":["RecipientName","props","className","recipient","onClick","name","propTypes","string","isRequired","func","defaultProps","MatchedNameList","matchedNames","getString","currentLocale","noClick","map","matchedName","setDefaultMatchedName","isSelected","bool","arrayOf","RecipientHeader","state","showDropdownList","toggleDropdown","setState","preState","phoneNumber","extensionNumber","context","getMatcherContactList","newMatchedNames","filter","concat","changeMatchedNames","length","hasDropdown","title","getRecipientName","dropdownClass","dropdownClassName","dropdownArrowClass","arrow","dropdownIcon","active","dropdownActiveIcon","matchedNamesOnly","getMatcherContactNameList","defaultRecipient","join","firstMatchedName","isFind","find","oldMatchedNames","slice","sort","dropdownButton","shape","array","contextTypes"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction RecipientName(props) {\n  const className = classnames(styles.recipient, props.className);\n  return (\n    <a href=\"#recipient\" className={className} onClick={props.onClick}>\n      {props.name}\n    </a>\n  );\n}\n\nRecipientName.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nRecipientName.defaultProps = {\n  className: null\n};\n\nfunction MatchedNameList(props) {\n  const matchedNames = props.matchedNames;\n  return (\n    <div className={props.className}>\n      <RecipientName\n        name={i18n.getString('selectMatchedName', props.currentLocale)}\n        className={styles.noClick}\n        onClick={\n          () => null\n        }\n      />\n      {\n        matchedNames.map(matchedName => (\n          <RecipientName\n            key={matchedName}\n            name={matchedName}\n            onClick={\n              () => props.setDefaultMatchedName(matchedName)\n            }\n          />\n        ))\n      }\n    </div>\n  );\n}\n\nMatchedNameList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  className: PropTypes.string.isRequired,\n  matchedNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nclass RecipientHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDropdownList: false,\n    };\n    this.toggleDropdown = () => {\n      this.setState(preState => ({\n        showDropdownList: !preState.showDropdownList,\n      }));\n    };\n    this.setDefaultMatchedName = (matchedName) => {\n      const recipient = this.props.recipient;\n      const phoneNumber = recipient.phoneNumber || recipient.extensionNumber;\n      const matchedNames = this.context.getMatcherContactList(phoneNumber);\n      if (!matchedNames) {\n        return;\n      }\n      let newMatchedNames = matchedNames.filter(name => name !== matchedName);\n      newMatchedNames = [matchedName].concat(newMatchedNames);\n      this.context.changeMatchedNames(newMatchedNames);\n      this.toggleDropdown();\n    };\n  }\n\n  hasDropdown() {\n    const recipient = this.props.recipient;\n    const phoneNumber = recipient.phoneNumber || recipient.extensionNumber;\n    const matchedNames = this.context.getMatcherContactList(phoneNumber);\n    return matchedNames.length > 1;\n  }\n\n  render() {\n    const recipient = this.props.recipient;\n    const hasDropdown = this.hasDropdown();\n    if (!hasDropdown) {\n      return (\n        <span className={styles.title}>\n          {this.context.getRecipientName(recipient)}\n        </span>\n      );\n    }\n    let dropdownClass = this.props.dropdownClassName;\n    let dropdownArrowClass = classnames(dynamicsFont.arrow, styles.dropdownIcon);\n    if (this.state.showDropdownList) {\n      dropdownClass = classnames(dropdownClass, styles.active);\n      dropdownArrowClass = classnames(dynamicsFont.arrow, styles.dropdownActiveIcon);\n    }\n    const phoneNumber = recipient.phoneNumber || recipient.extensionNumber;\n    let matchedNames = this.context.getMatcherContactList(phoneNumber);\n    const matchedNamesOnly = this.context.getMatcherContactNameList(phoneNumber);\n    let defaultRecipient = matchedNamesOnly.join('&');\n    // if it has old data\n    let isSelected = false;\n    if (recipient.matchedNames && recipient.matchedNames[0]) {\n      const firstMatchedName = recipient.matchedNames[0];\n      const isFind = matchedNames.find(name => name === firstMatchedName);\n      if (isFind) {\n        isSelected = true;\n        defaultRecipient = firstMatchedName;\n      }\n      const oldMatchedNames = recipient.matchedNames.slice().sort();\n      if (matchedNames.sort().join('') === oldMatchedNames.join('')) {\n        matchedNames = oldMatchedNames;\n      }\n    }\n    return (\n      <div>\n        <RecipientName\n          name={defaultRecipient}\n          onClick={this.toggleDropdown}\n          className={styles.dropdownButton}\n        />\n        <i\n          className={dropdownArrowClass}\n          onClick={this.toggleDropdown}\n        />\n        <MatchedNameList\n          matchedNames={matchedNames}\n          className={dropdownClass}\n          setDefaultMatchedName={this.setDefaultMatchedName}\n          isSelected={isSelected}\n          currentLocale={this.props.currentLocale}\n        />\n      </div>\n    );\n  }\n}\n\nRecipientHeader.propTypes = {\n  recipient: PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    extensionNumber: PropTypes.string,\n    name: PropTypes.string,\n    matchedNames: PropTypes.array,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  dropdownClassName: PropTypes.string.isRequired,\n};\n\nRecipientHeader.contextTypes = {\n  getRecipientName: PropTypes.func.isRequired,\n  getMatcherContactList: PropTypes.func.isRequired,\n  getMatcherContactNameList: PropTypes.func.isRequired,\n  changeMatchedNames: PropTypes.func.isRequired,\n};\n\nexport default RecipientHeader;\n"]}