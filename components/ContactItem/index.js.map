{"version":3,"sources":["components/ContactItem/index.js"],"names":["AvatarNode","name","avatarUrl","isInactive","avatarStyle","styles","inactiveAvatarNode","avatarNode","propTypes","PropTypes","string","bool","defaultProps","undefined","ContactItem","props","renderPresence","contact","presence","contactStatus","presenceNodeContainer","presenceNode","renderMiddle","currentLocale","infoWrapper","inactiveContactName","inactiveText","i18n","getString","contactName","state","loading","onItemSelected","bind","_mounted","_loadingTimeout","setTimeout","setState","getAvatarUrl","getPresence","clearTimeout","func","onSelect","root","extensionNumber","type","profileImageUrl","sourceNodeRenderer","sourceNode","sourceType","contactProfile","avatarNodeContainer","sourceNodeContainer","phoneNumber","PureComponent","isRequired","shape","id","email","object"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport i18n from './i18n';\n\nimport styles from './styles.scss';\n\nfunction AvatarNode({ name, avatarUrl, isInactive }) {\n  const avatarStyle = isInactive ? styles.inactiveAvatarNode : styles.avatarNode;\n  return avatarUrl ? (\n    <img className={avatarStyle} alt={name} src={avatarUrl} />\n  ) : (\n    <DefaultAvatar className={avatarStyle} />\n  );\n}\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  isInactive: PropTypes.bool,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n  isInactive: false,\n};\n\nexport default class ContactItem extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n    this.onItemSelected = this.onItemSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._loadingTimeout = setTimeout(() => {\n      if (this._mounted) {\n        this.setState({\n          loading: false\n        });\n      }\n    }, 3);\n    setTimeout(() => {\n      if (this._mounted) {\n        this.props.getAvatarUrl(this.props.contact);\n        this.props.getPresence(this.props.contact);\n      }\n    }, 500);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    if (this._loadingTimeout) {\n      clearTimeout(this._loadingTimeout);\n    }\n  }\n\n  onItemSelected() {\n    const func = this.props.onSelect;\n    if (func) {\n      func(this.props.contact);\n    }\n  }\n\n  renderPresence = (contact) => {\n    const { presence, contactStatus } = contact;\n    if (contactStatus === 'NotActivated') {\n      return null;\n    }\n\n    return presence ? (\n      <div className={styles.presenceNodeContainer}>\n        <PresenceStatusIcon className={styles.presenceNode} {...presence} />\n      </div>\n    ) : null;\n  };\n\n  renderMiddle = (contact, currentLocale) => {\n    const { name, contactStatus } = contact;\n    if (contactStatus === 'NotActivated') {\n      return (\n        <div className={styles.infoWrapper}>\n          <div className={styles.inactiveContactName} title={name}>\n            {name}\n          </div>\n          <div className={styles.inactiveText}>\n            {i18n.getString('notActivated', currentLocale)}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.contactName} title={name}>\n        {name}\n      </div>\n    );\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <div className={styles.root} />;\n    }\n    const {\n      contact,\n      currentLocale\n    } = this.props;\n    const {\n      name, extensionNumber, type, profileImageUrl, contactStatus,\n    } = contact;\n\n    const { sourceNodeRenderer } = this.props;\n    const sourceNode = sourceNodeRenderer({ sourceType: type });\n    return (\n      <div className={styles.root} onClick={this.onItemSelected}>\n        <div className={styles.contactProfile}>\n          <div className={styles.avatarNodeContainer}>\n            <AvatarNode\n              name={name}\n              avatarUrl={profileImageUrl}\n              isInactive={contactStatus === 'NotActivated'} />\n          </div>\n          {sourceNode ? (\n            <div className={styles.sourceNodeContainer}>{sourceNode}</div>\n          ) : null}\n          {this.renderPresence(this.props.contact)}\n        </div>\n        {this.renderMiddle(contact, currentLocale)}\n        <div className={styles.phoneNumber} title={extensionNumber}>\n          {extensionNumber}\n        </div>\n      </div>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    extensionNumber: PropTypes.string,\n    email: PropTypes.string,\n    profileImageUrl: PropTypes.string,\n    presence: PropTypes.object,\n    contactStatus: PropTypes.string\n  }).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func\n};\n\nContactItem.defaultProps = {\n  onSelect: undefined,\n  sourceNodeRenderer: () => null\n};\n"]}