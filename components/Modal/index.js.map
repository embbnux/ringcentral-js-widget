{"version":3,"sources":["components/Modal/index.js"],"names":["FlatButton","className","disabled","onClick","children","styles","flatBtn","text","propTypes","PropTypes","string","bool","func","node","defaultProps","undefined","Modal","props","_container","document","createElement","appendDOM","body","context","modalRoot","current","appendChild","removeChild","title","show","onConfirm","onCancel","textConfirm","textCancel","currentLocale","clickOutToClose","modalClassName","cancelBtnClassName","confirmBtnClassName","showTitle","showCloseBtn","maskClassName","headerClassName","contentClassName","footerClassName","footer","btn","cancelBtn","i18n","getString","confirmBtn","container","containerHidden","mask","maskHidden","modal","modalHidden","header","closeBtn","content","ReactDOM","createPortal","renderDialog","Component","contextTypes","object"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport Button from '../Button';\nimport CloseIcon from '../../assets/images/CloseIcon.svg';\n\nfunction FlatButton({\n  className,\n  disabled,\n  onClick,\n  children,\n}) {\n  return (\n    <div\n      className={classnames(\n        className,\n        styles.flatBtn,\n        styles.text,\n        disabled && styles.disabled,\n      )}\n      onClick={!disabled && onClick} >\n      {children}\n    </div>\n  );\n}\nFlatButton.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nFlatButton.defaultProps = {\n  className: undefined,\n  disabled: false,\n  onClick: undefined,\n  children: undefined,\n};\n\nexport default class Modal extends Component {\n  constructor(props) {\n    super(props);\n    this._container = document.createElement('div');\n    this.appendDOM = this.props.appendDOM || document.body;\n  }\n  static contextTypes = {\n    modalRoot: PropTypes.object\n  };\n\n  componentWillMount() {\n    if (\n      !this.props.appendDOM\n      && this.context.modalRoot\n      && this.context.modalRoot.current\n    ) {\n      // FIXME: because we using the `this.appendDOM`, it's not easy to use provider and consumer\n      // type of the context.\n      this.appendDOM = this.context.modalRoot.current;\n    }\n  }\n\n  componentDidMount() {\n    this.appendDOM.appendChild(this._container);\n  }\n\n  componentWillUnmount() {\n    this.appendDOM.removeChild(this._container);\n  }\n\n  renderDialog() {\n    const {\n      className,\n      children,\n      title,\n      show,\n      onConfirm,\n      onCancel,\n      textConfirm,\n      textCancel,\n      currentLocale,\n      clickOutToClose,\n      modalClassName,\n      cancelBtnClassName,\n      confirmBtnClassName,\n      showTitle,\n      showCloseBtn,\n      maskClassName,\n      headerClassName,\n      contentClassName,\n      footerClassName,\n    } = this.props;\n    // if (!show) return null;\n    const footer = !currentLocale || (\n      !onCancel && !onConfirm\n    ) ? null : (\n      <div className={classnames(styles.footer, footerClassName)}>\n        {onCancel ? (\n          <FlatButton\n            className={classnames(styles.btn, styles.cancelBtn, cancelBtnClassName)}\n            onClick={onCancel}>\n            {textCancel ||\n            i18n.getString('cancel', currentLocale)}\n          </FlatButton>\n        ) : null}\n        {onConfirm ? (\n          <FlatButton\n            className={classnames(styles.btn, styles.confirmBtn, confirmBtnClassName)}\n            onClick={onConfirm}>\n            {textConfirm ||\n            i18n.getString('confirm', currentLocale)}\n          </FlatButton>\n        ) : null}\n      </div>\n      );\n    return (\n      <div className={show ? classnames(styles.container, className) : styles.containerHidden}>\n        <div\n          className={show ? classnames(styles.mask, maskClassName) : styles.maskHidden}\n          onClick={clickOutToClose ? onCancel : () => {}}\n        />\n        <div className={show ? classnames(styles.modal, modalClassName) : styles.modalHidden}>\n          {\n            showTitle ?\n              <div className={classnames(styles.header, headerClassName)}>\n                {`${title}` || null}\n              </div>\n            : null\n          }\n          {\n            showCloseBtn ?\n              <Button\n                className={styles.closeBtn}\n                onClick={onCancel}\n              >\n                <CloseIcon />\n              </Button>\n          : null\n          }\n          <div className={classnames(styles.content, contentClassName)}>\n            {children}\n          </div>\n          {footer}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.renderDialog(),\n      this._container,\n    );\n  }\n}\n\nModal.propTypes = {\n  className: PropTypes.string,\n  modalClassName: PropTypes.string,\n  cancelBtnClassName: PropTypes.string,\n  confirmBtnClassName: PropTypes.string,\n  children: PropTypes.node,\n  show: PropTypes.bool,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func,\n  clickOutToClose: PropTypes.bool,\n  title: PropTypes.string,\n  currentLocale: PropTypes.string,\n  textConfirm: PropTypes.string,\n  textCancel: PropTypes.string,\n  showCloseBtn: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  appendDOM: PropTypes.object,\n  maskClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\nModal.defaultProps = {\n  className: '',\n  currentLocale: '',\n  modalClassName: '',\n  cancelBtnClassName: '',\n  confirmBtnClassName: '',\n  children: undefined,\n  show: false,\n  onConfirm: undefined,\n  onCancel: undefined,\n  clickOutToClose: false,\n  title: '',\n  textConfirm: '',\n  textCancel: '',\n  showCloseBtn: true,\n  showTitle: true,\n  appendDOM: undefined,\n  maskClassName: undefined,\n  headerClassName: undefined,\n  contentClassName: undefined,\n  footerClassName: undefined,\n};\n\n"]}