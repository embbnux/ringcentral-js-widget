{"version":3,"sources":["components/MessageSenderAlert/index.js"],"names":["MessageSenderAlert","props","message","noAreaCode","areaCode","getString","currentLocale","areaCodeLink","regionSettingsUrl","propTypes","string","isRequired","shape","handleMessage","sendSuccess","sendError","numberValidateError","textEmpty","noPermission","senderEmpty","noToNumber","recipientsEmpty","textTooLong","recipientNumberInvalids","specialNumber","connectFailed","internalError","notAnExtension","networkError","notSmsToExtension","senderNumberInvalid","internationalSMSNotSupported"],"mappings":";;;;;kBAMwBA,kB;;AANxB;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD,MAAMC,UAAUD,MAAMC,OAAN,CAAcA,OAA9B;AACA,MAAIA,YAAY,gCAAsBC,UAAtC,EAAkD;AAChD,QAAMC,WAAW,eAAKC,SAAL,CAAe,UAAf,EAA2BJ,MAAMK,aAAjC,CAAjB;AACA,WACE;AACE,eAAS,eAAKD,SAAL,CAAeH,OAAf,EAAwBD,MAAMK,aAA9B,CADX;AAEE,cAAQ,EAAEC,cAAc;AAAA;AAAA,YAAM,IAAIN,MAAMO,iBAAhB;AAAoCJ;AAApC,SAAhB,EAFV,GADF;AAKD;AACD,SACE;AAAA;AAAA;AAAO,mBAAKC,SAAL,CAAeH,OAAf,EAAwBD,MAAMK,aAA9B;AAAP,GADF;AAGD;;AAEDN,mBAAmBS,SAAnB,GAA+B;AAC7BH,iBAAe,iBAAUI,MAAV,CAAiBC,UADH;AAE7BT,WAAS,iBAAUU,KAAV,CAAgB;AACvBV,aAAS,iBAAUQ,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJ0B;AAK7BH,qBAAmB,iBAAUE,MAAV,CAAiBC;AALP,CAA/B;;AAQAX,mBAAmBa,aAAnB,GAAmC;AAAA,MAAGX,OAAH,QAAGA,OAAH;AAAA,SAChCA,YAAY,gCAAsBY,WAAnC,IACCZ,YAAY,gCAAsBa,SADnC,IAECb,YAAY,gCAAsBc,mBAFnC,IAGCd,YAAY,gCAAsBe,SAHnC,IAICf,YAAY,gCAAsBgB,YAJnC,IAKChB,YAAY,gCAAsBiB,WALnC,IAMCjB,YAAY,gCAAsBkB,UANnC,IAOClB,YAAY,gCAAsBmB,eAPnC,IAQCnB,YAAY,gCAAsBoB,WARnC,IASCpB,YAAY,gCAAsBqB,uBATnC,IAUCrB,YAAY,gCAAsBC,UAVnC,IAWCD,YAAY,gCAAsBsB,aAXnC,IAYCtB,YAAY,gCAAsBuB,aAZnC,IAaCvB,YAAY,gCAAsBwB,aAbnC,IAcCxB,YAAY,gCAAsByB,cAdnC,IAeCzB,YAAY,gCAAsB0B,YAfnC,IAgBC1B,YAAY,gCAAsB2B,iBAhBnC,IAiBC3B,YAAY,gCAAsB4B,mBAjBnC,IAkBC5B,YAAY,gCAAsB6B,4BAnBF;AAAA,CAAnC","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Link } from 'react-router';\nimport messageSenderMessages from 'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function MessageSenderAlert(props) {\n  const message = props.message.message;\n  if (message === messageSenderMessages.noAreaCode) {\n    const areaCode = i18n.getString('areaCode', props.currentLocale);\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, props.currentLocale)}\n        values={{ areaCodeLink: <Link to={props.regionSettingsUrl}>{areaCode}</Link> }} />\n    );\n  }\n  return (\n    <span>{i18n.getString(message, props.currentLocale)}</span>\n  );\n}\n\nMessageSenderAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  regionSettingsUrl: PropTypes.string.isRequired,\n};\n\nMessageSenderAlert.handleMessage = ({ message }) => (\n  (message === messageSenderMessages.sendSuccess) ||\n  (message === messageSenderMessages.sendError) ||\n  (message === messageSenderMessages.numberValidateError) ||\n  (message === messageSenderMessages.textEmpty) ||\n  (message === messageSenderMessages.noPermission) ||\n  (message === messageSenderMessages.senderEmpty) ||\n  (message === messageSenderMessages.noToNumber) ||\n  (message === messageSenderMessages.recipientsEmpty) ||\n  (message === messageSenderMessages.textTooLong) ||\n  (message === messageSenderMessages.recipientNumberInvalids) ||\n  (message === messageSenderMessages.noAreaCode) ||\n  (message === messageSenderMessages.specialNumber) ||\n  (message === messageSenderMessages.connectFailed) ||\n  (message === messageSenderMessages.internalError) ||\n  (message === messageSenderMessages.notAnExtension) ||\n  (message === messageSenderMessages.networkError) ||\n  (message === messageSenderMessages.notSmsToExtension) ||\n  (message === messageSenderMessages.senderNumberInvalid) ||\n  (message === messageSenderMessages.internationalSMSNotSupported)\n);\n\n"]}