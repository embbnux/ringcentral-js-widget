{"version":3,"sources":["components/MessageSenderAlert/index.js"],"names":["MessageSenderAlert","props","msg","getString","message","currentLocale","propTypes","string","isRequired","shape","handleMessage","sendSuccess","sendError","numberValidateError","textEmpty","noPermission","senderEmpty","noToNumber","recipientsEmpty","textTooLong","recipientNumberInvalids","noAreaCode","specialNumber","connectFailed","internalError","notAnExtension","networkError","notSmsToExtension","senderNumberInvalids","internationalSMSNotSupported"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,MAAMC,MAAM,eAAKC,SAAL,CAAeF,MAAMG,OAAN,CAAcA,OAA7B,EAAsCH,MAAMI,aAA5C,CAAZ;AACA,SACE;AAAA;AAAA;AAAOH;AAAP,GADF;AAGD;;AAEDF,mBAAmBM,SAAnB,GAA+B;AAC7BD,iBAAe,iBAAUE,MAAV,CAAiBC,UADH;AAE7BJ,WAAS,iBAAUK,KAAV,CAAgB;AACvBL,aAAS,iBAAUG,MAAV,CAAiBC;AADH,GAAhB,EAENA;AAJ0B,CAA/B;;AAOAR,mBAAmBU,aAAnB,GAAmC;AAAA,MAAGN,OAAH,QAAGA,OAAH;AAAA,SAChCA,YAAY,gCAAsBO,WAAnC,IACCP,YAAY,gCAAsBQ,SADnC,IAECR,YAAY,gCAAsBS,mBAFnC,IAGCT,YAAY,gCAAsBU,SAHnC,IAICV,YAAY,gCAAsBW,YAJnC,IAKCX,YAAY,gCAAsBY,WALnC,IAMCZ,YAAY,gCAAsBa,UANnC,IAOCb,YAAY,gCAAsBc,eAPnC,IAQCd,YAAY,gCAAsBe,WARnC,IASCf,YAAY,gCAAsBgB,uBATnC,IAUChB,YAAY,gCAAsBiB,UAVnC,IAWCjB,YAAY,gCAAsBkB,aAXnC,IAYClB,YAAY,gCAAsBmB,aAZnC,IAaCnB,YAAY,gCAAsBoB,aAbnC,IAcCpB,YAAY,gCAAsBqB,cAdnC,IAeCrB,YAAY,gCAAsBsB,YAfnC,IAgBCtB,YAAY,gCAAsBuB,iBAhBnC,IAiBCvB,YAAY,gCAAsBwB,oBAjBnC,IAkBCxB,YAAY,gCAAsByB,4BAnBF;AAAA,CAAnC;;kBAsBe7B,kB","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport messageSenderMessages from 'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport i18n from './i18n';\n\nfunction MessageSenderAlert(props) {\n  const msg = i18n.getString(props.message.message, props.currentLocale);\n  return (\n    <span>{msg}</span>\n  );\n}\n\nMessageSenderAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nMessageSenderAlert.handleMessage = ({ message }) => (\n  (message === messageSenderMessages.sendSuccess) ||\n  (message === messageSenderMessages.sendError) ||\n  (message === messageSenderMessages.numberValidateError) ||\n  (message === messageSenderMessages.textEmpty) ||\n  (message === messageSenderMessages.noPermission) ||\n  (message === messageSenderMessages.senderEmpty) ||\n  (message === messageSenderMessages.noToNumber) ||\n  (message === messageSenderMessages.recipientsEmpty) ||\n  (message === messageSenderMessages.textTooLong) ||\n  (message === messageSenderMessages.recipientNumberInvalids) ||\n  (message === messageSenderMessages.noAreaCode) ||\n  (message === messageSenderMessages.specialNumber) ||\n  (message === messageSenderMessages.connectFailed) ||\n  (message === messageSenderMessages.internalError) ||\n  (message === messageSenderMessages.notAnExtension) ||\n  (message === messageSenderMessages.networkError) ||\n  (message === messageSenderMessages.notSmsToExtension) ||\n  (message === messageSenderMessages.senderNumberInvalids) ||\n  (message === messageSenderMessages.internationalSMSNotSupported)\n);\n\nexport default MessageSenderAlert;\n"]}