{"version":3,"sources":["components/MessageSenderAlert/index.js"],"names":["MessageSenderAlert","currentLocale","message","id","onAreaCodeLink","brand","messageSenderMessages","noAreaCode","areaCode","i18n","getString","areaCodeLink","styles","link","e","preventDefault","alertId","noInternalSMSPermission","noSMSPermission","indexOf","propTypes","PropTypes","string","isRequired","shape","func","defaultProps","undefined","handleMessage","sendSuccess","sendError","numberValidateError","textEmpty","noPermission","senderEmpty","noToNumber","recipientsEmpty","textTooLong","multipartTextTooLong","recipientNumberInvalids","specialNumber","connectFailed","internalError","notAnExtension","networkError","notSmsToExtension","senderNumberInvalid","internationalSMSNotSupported","sending"],"mappings":";;;;;kBAOwBA,kB;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,kBAAT,OAQZ;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,0BANDC,OAMC;AAAA,MALCC,EAKD,gBALCA,EAKD;AAAA,MAJCD,OAID,gBAJCA,OAID;AAAA,MAFDE,cAEC,QAFDA,cAEC;AAAA,MADDC,KACC,QADDA,KACC;;AACD,MAAIH,YAAYI,gCAAsBC,UAAtC,EAAkD;AAChD,QAAMC,WAAWC,eAAKC,SAAL,CAAe,UAAf,EAA2BT,aAA3B,CAAjB;AACA,QAAMU,eAAeP,iBAEjB;AAAA;AAAA;AACE,mBAAWQ,iBAAOC,IADpB;AAEE,iBAAS,iBAACC,CAAD,EAAO;AACdA,YAAEC,cAAF;AACAX,yBAAe,EAAEY,SAASb,EAAX,EAAf;AACD,SALH;AAMGK;AANH,KAFiB,GAWnBA,QAXF;AAYA,WACE,8BAAC,0BAAD;AACE,eAASC,eAAKC,SAAL,CAAeR,OAAf,EAAwBD,aAAxB,CADX;AAEE,cAAQ,EAAEU,0BAAF,EAFV,GADF;AAKD,GAnBD,MAmBO,IAAI,CAACL,gCAAsBW,uBAAvB,EACTX,gCAAsBY,eADb,EAC8BC,OAD9B,CACsCjB,OADtC,MACmD,CAAC,CADxD,EAC2D;AAChE,WACE,8BAAC,0BAAD;AACE,eAASO,eAAKC,SAAL,CAAeR,OAAf,EAAwBD,aAAxB,CADX;AAEE,cAAQ,EAAEI,YAAF,EAFV,GADF;AAKD;AACD,SACE;AAAA;AAAA;AAAOI,mBAAKC,SAAL,CAAeR,OAAf,EAAwBD,aAAxB;AAAP,GADF;AAGD;;AAEDD,mBAAmBoB,SAAnB,GAA+B;AAC7BnB,iBAAeoB,oBAAUC,MAAV,CAAiBC,UADH;AAE7BlB,SAAOgB,oBAAUC,MAFY;AAG7BpB,WAASmB,oBAAUG,KAAV,CAAgB;AACvBtB,aAASmB,oBAAUC,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAL0B;AAM7BnB,kBAAgBiB,oBAAUI;AANG,CAA/B;AAQAzB,mBAAmB0B,YAAnB,GAAkC;AAChCtB,kBAAgBuB,SADgB;AAEhCtB,SAAO;AAFyB,CAAlC;;AAKAL,mBAAmB4B,aAAnB,GAAmC;AAAA,MAAG1B,OAAH,SAAGA,OAAH;AAAA,SAChCA,YAAYI,gCAAsBuB,WAAnC,IACC3B,YAAYI,gCAAsBwB,SADnC,IAEC5B,YAAYI,gCAAsByB,mBAFnC,IAGC7B,YAAYI,gCAAsB0B,SAHnC,IAIC9B,YAAYI,gCAAsB2B,YAJnC,IAKC/B,YAAYI,gCAAsB4B,WALnC,IAMChC,YAAYI,gCAAsB6B,UANnC,IAOCjC,YAAYI,gCAAsB8B,eAPnC,IAQClC,YAAYI,gCAAsB+B,WARnC,IASCnC,YAAYI,gCAAsBgC,oBATnC,IAUCpC,YAAYI,gCAAsBiC,uBAVnC,IAWCrC,YAAYI,gCAAsBC,UAXnC,IAYCL,YAAYI,gCAAsBkC,aAZnC,IAaCtC,YAAYI,gCAAsBmC,aAbnC,IAcCvC,YAAYI,gCAAsBoC,aAdnC,IAeCxC,YAAYI,gCAAsBqC,cAfnC,IAgBCzC,YAAYI,gCAAsBsC,YAhBnC,IAiBC1C,YAAYI,gCAAsBuC,iBAjBnC,IAkBC3C,YAAYI,gCAAsBwC,mBAlBnC,IAmBC5C,YAAYI,gCAAsByC,4BAnBnC,IAoBC7C,YAAYI,gCAAsBW,uBApBnC,IAqBCf,YAAYI,gCAAsBY,eArBnC,IAsBChB,YAAYI,gCAAsB0C,OAvBF;AAAA,CAAnC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport messageSenderMessages from 'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default function MessageSenderAlert({\n  currentLocale,\n  message: {\n    id,\n    message,\n  },\n  onAreaCodeLink,\n  brand\n}) {\n  if (message === messageSenderMessages.noAreaCode) {\n    const areaCode = i18n.getString('areaCode', currentLocale);\n    const areaCodeLink = onAreaCodeLink ?\n      (\n        <a\n          className={styles.link}\n          onClick={(e) => {\n            e.preventDefault();\n            onAreaCodeLink({ alertId: id });\n          }}>\n          {areaCode}\n        </a>\n      ) :\n      areaCode;\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ areaCodeLink }} />\n    );\n  } else if ([messageSenderMessages.noInternalSMSPermission,\n    messageSenderMessages.noSMSPermission].indexOf(message) !== -1) {\n    return (\n      <FormattedMessage\n        message={i18n.getString(message, currentLocale)}\n        values={{ brand }} />\n    );\n  }\n  return (\n    <span>{i18n.getString(message, currentLocale)}</span>\n  );\n}\n\nMessageSenderAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  brand: PropTypes.string,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  onAreaCodeLink: PropTypes.func,\n};\nMessageSenderAlert.defaultProps = {\n  onAreaCodeLink: undefined,\n  brand: 'RingCentral'\n};\n\nMessageSenderAlert.handleMessage = ({ message }) => (\n  (message === messageSenderMessages.sendSuccess) ||\n  (message === messageSenderMessages.sendError) ||\n  (message === messageSenderMessages.numberValidateError) ||\n  (message === messageSenderMessages.textEmpty) ||\n  (message === messageSenderMessages.noPermission) ||\n  (message === messageSenderMessages.senderEmpty) ||\n  (message === messageSenderMessages.noToNumber) ||\n  (message === messageSenderMessages.recipientsEmpty) ||\n  (message === messageSenderMessages.textTooLong) ||\n  (message === messageSenderMessages.multipartTextTooLong) ||\n  (message === messageSenderMessages.recipientNumberInvalids) ||\n  (message === messageSenderMessages.noAreaCode) ||\n  (message === messageSenderMessages.specialNumber) ||\n  (message === messageSenderMessages.connectFailed) ||\n  (message === messageSenderMessages.internalError) ||\n  (message === messageSenderMessages.notAnExtension) ||\n  (message === messageSenderMessages.networkError) ||\n  (message === messageSenderMessages.notSmsToExtension) ||\n  (message === messageSenderMessages.senderNumberInvalid) ||\n  (message === messageSenderMessages.internationalSMSNotSupported) ||\n  (message === messageSenderMessages.noInternalSMSPermission) ||\n  (message === messageSenderMessages.noSMSPermission) ||\n  (message === messageSenderMessages.sending)\n);\n"]}