{"version":3,"sources":["components/ConversationMessageList/index.js"],"names":["MessageItem","props","messageClassName","messageBody","direction","outbound","inbound","subject","length","big","fromName","senderName","messageFrom","messageCreationTime","showDate","messsageTime","creationTime","messageItem","clear","propTypes","string","isRequired","bool","defaultProps","ConversationMessageList","lastMessagesLength","scrollToLastMessage","conversationBody","messages","scrollTop","scrollHeight","lastFormatedTime","messageList","map","message","formatedTime","context","formatDateTime","showSender","from","name","phoneNumber","extensionNumber","formatPhone","id","root","className","body","PropTypes","arrayOf","shape","number","contextTypes","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nfunction MessageItem(props) {\n  const messageClassName = classnames(\n    styles.messageBody,\n    props.direction === 'Outbound' ? styles.outbound : styles.inbound,\n    props.subject && props.subject.length > 500 ? styles.big : null,\n  );\n  const fromName = props.senderName && props.direction === 'Inbound' ?\n    (\n      <div className={styles.messageFrom}>\n        {props.senderName}\n      </div>\n    ) :\n    null;\n  const messageCreationTime = props.showDate ?\n    (\n      <div className={styles.messsageTime}>\n        {props.creationTime}\n      </div>\n    ) :\n    null;\n  return (\n    <div className={styles.messageItem}>\n      {messageCreationTime}\n      {fromName}\n      <div className={messageClassName}>\n        {props.subject}\n      </div>\n      <div className={styles.clear} />\n    </div>\n  );\n}\n\nMessageItem.propTypes = {\n  direction: PropTypes.string.isRequired,\n  subject: PropTypes.string,\n  creationTime: PropTypes.string.isRequired,\n  showDate: PropTypes.bool.isRequired,\n  senderName: PropTypes.string,\n};\n\nMessageItem.defaultProps = {\n  subject: '',\n  senderName: null,\n};\n\nclass ConversationMessageList extends Component {\n  constructor(props) {\n    super(props);\n    let lastMessagesLength = 0;\n    this.scrollToLastMessage = () => {\n      const conversationBody = this.conversationBody;\n      if (!conversationBody) {\n        return;\n      }\n      if (this.props.messages.length === lastMessagesLength) {\n        return;\n      }\n      lastMessagesLength = props.messages.length;\n      conversationBody.scrollTop = conversationBody.scrollHeight;\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToLastMessage();\n  }\n\n  componentDidUpdate() {\n    this.scrollToLastMessage();\n  }\n\n  render() {\n    const messages = this.props.messages;\n    let lastFormatedTime = null;\n    const messageList = messages.map((message) => {\n      const formatedTime = this.context.formatDateTime(message.creationTime);\n      let showDate = true;\n      if (lastFormatedTime === formatedTime) {\n        showDate = false;\n      }\n      lastFormatedTime = formatedTime;\n      let senderName = null;\n      if (this.props.showSender && message.from) {\n        if (message.from.name) {\n          senderName = message.from.name;\n        } else {\n          const phoneNumber = message.from.extensionNumber || message.from.phoneNumber;\n          senderName = this.context.formatPhone(phoneNumber);\n        }\n      }\n      return (\n        <MessageItem\n          key={message.id}\n          direction={message.direction}\n          subject={message.subject}\n          creationTime={formatedTime}\n          showDate={showDate}\n          senderName={senderName}\n        />\n      );\n    });\n    return (\n      <div\n        className={classnames(styles.root, this.props.className)}\n        ref={(body) => { this.conversationBody = body; }}\n      >\n        {messageList}\n      </div>\n    );\n  }\n}\n\nConversationMessageList.propTypes = {\n  messages: React.PropTypes.arrayOf(PropTypes.shape({\n    creationTime: PropTypes.string,\n    id: PropTypes.number,\n    direction: PropTypes.string,\n    subject: PropTypes.string,\n  })).isRequired,\n  className: PropTypes.string,\n  showSender: PropTypes.bool,\n};\n\nConversationMessageList.defaultProps = {\n  className: null,\n  showSender: false,\n};\n\nConversationMessageList.contextTypes = {\n  formatDateTime: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n};\n\nexport default ConversationMessageList;\n"]}