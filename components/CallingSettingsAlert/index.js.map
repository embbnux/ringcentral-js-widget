{"version":3,"sources":["components/CallingSettingsAlert/index.js"],"names":["CallingSettingsAlert","message","currentLocale","brand","callingSettingsUrl","saveSuccess","saveSuccessWithSoftphone","firstLogin","firstLoginOther","getString","permissionChanged","phoneNumberChanged","link","propTypes","shape","string","isRequired","handleMessage","webphonePermissionRemoved"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAASA,oBAAT,OAAkG;AAAA,MAAvDC,OAAuD,QAAlEA,OAAkE,CAAvDA,OAAuD;AAAA,MAA5CC,aAA4C,QAA5CA,aAA4C;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;;AAChG,UAAQH,OAAR;AACE,SAAK,kCAAwBI,WAA7B;AACA,SAAK,kCAAwBC,wBAA7B;AACA,SAAK,kCAAwBC,UAA7B;AACA,SAAK,kCAAwBC,eAA7B;AACE,aACE;AACE,iBAAS,eAAKC,SAAL,CAAeR,OAAf,CADX;AAEE,gBAAQ,EAAEE,OAAOA,KAAT;AAFV,QADF;;AAOF,SAAK,kCAAwBO,iBAA7B;AACA,SAAK,kCAAwBC,kBAA7B;AACE,aACE;AACE,iBAAS,eAAKF,SAAL,CAAeR,OAAf,CADX;AAEE,gBAAQ,EAAEW,MAAM;AAAA;AAAA,cAAM,IAAIR,kBAAV;AAA+B,2BAAKK,SAAL,CAAe,MAAf;AAA/B,WAAR;AAFV,QADF;AAMF;AACE,aAAO,IAAP;AArBJ;AAuBD;AACDT,qBAAqBa,SAArB,GAAiC;AAC/BZ,WAAS,iBAAUa,KAAV,CAAgB;AACvBb,aAAS,iBAAUc,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH4B;AAI/Bd,iBAAe,iBAAUa,MAAV,CAAiBC,UAJD;AAK/Bb,SAAO,iBAAUY,MAAV,CAAiBC,UALO;AAM/BZ,sBAAoB,iBAAUW,MAAV,CAAiBC;AANN,CAAjC;AAQAhB,qBAAqBiB,aAArB,GAAqC;AAAA,MAAGhB,OAAH,SAAGA,OAAH;AAAA,SACjCA,YAAY,kCAAwBI,WAApC,IACAJ,YAAY,kCAAwBK,wBADpC,IAEAL,YAAY,kCAAwBM,UAFpC,IAGAN,YAAY,kCAAwBO,eAHpC,IAIAP,YAAY,kCAAwBS,iBAJpC,IAKAT,YAAY,kCAAwBiB,yBALpC,IAMAjB,YAAY,kCAAwBU,kBAPH;AAAA,CAArC;;kBAUeX,oB","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Link } from 'react-router';\nimport callingSettingsMessages from\n  'ringcentral-integration/modules/CallingSettings/callingSettingsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nfunction CallingSettingsAlert({ message: { message }, currentLocale, brand, callingSettingsUrl }) {\n  switch (message) {\n    case callingSettingsMessages.saveSuccess:\n    case callingSettingsMessages.saveSuccessWithSoftphone:\n    case callingSettingsMessages.firstLogin:\n    case callingSettingsMessages.firstLoginOther:\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ brand: brand }}\n        />\n      );\n\n    case callingSettingsMessages.permissionChanged:\n    case callingSettingsMessages.phoneNumberChanged:\n      return (\n        <FormattedMessage\n          message={i18n.getString(message)}\n          values={{ link: <Link to={callingSettingsUrl}>{i18n.getString('link')}</Link> }}\n        />\n      );\n    default:\n      return null;\n  }\n}\nCallingSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  brand: PropTypes.string.isRequired,\n  callingSettingsUrl: PropTypes.string.isRequired,\n};\nCallingSettingsAlert.handleMessage = ({ message }) => (\n    message === callingSettingsMessages.saveSuccess ||\n    message === callingSettingsMessages.saveSuccessWithSoftphone ||\n    message === callingSettingsMessages.firstLogin ||\n    message === callingSettingsMessages.firstLoginOther ||\n    message === callingSettingsMessages.permissionChanged ||\n    message === callingSettingsMessages.webphonePermissionRemoved ||\n    message === callingSettingsMessages.phoneNumberChanged\n);\n\nexport default CallingSettingsAlert;\n"]}