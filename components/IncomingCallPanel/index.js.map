{"version":3,"sources":["components/IncomingCallPanel/index.js"],"names":["IncomingCallPanel","UserInfo","props","styles","userInfo","avatarContainer","avatarHolder","ringOutside","ringing","ringInner","avatar","avatarUrl","userNameContainer","userName","dropdown","nameMatches","phoneNumber","fallBackName","currentLocale","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","brand","showContactDisplayPlaceholder","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","userPhoneNumber","formatPhone","propTypes","PropTypes","string","isRequired","func","array","number","bool","object","defaultProps","undefined","root","className","backButton","onBackButtonClick","dynamicsFont","arrow","backIcon","callPad","forwardingNumbers","answer","reject","toVoiceMail","replyWithMessage","onForward","hasOtherActiveCall","answerAndEnd","answerAndHold","sessionId","searchContact","searchContactList","children","node"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport IncomingCallPad from '../IncomingCallPad';\nimport ContactDisplay from '../ContactDisplay';\nimport CallAvatar from '../CallAvatar';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nfunction UserInfo(props) {\n  return (\n    <div className={styles.userInfo}>\n      <div className={styles.avatarContainer}>\n        <div className={styles.avatarHolder}>\n          <div className={classnames(styles.ringOutside, styles.ringing)} />\n          <div className={classnames(styles.ringInner, styles.ringing)} />\n          <div className={styles.avatar}>\n            <CallAvatar\n              avatarUrl={props.avatarUrl}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={styles.userNameContainer}>\n        <ContactDisplay\n          className={styles.userName}\n          selectClassName={styles.dropdown}\n          contactMatches={props.nameMatches}\n          phoneNumber={props.phoneNumber}\n          fallBackName={props.fallBackName}\n          currentLocale={props.currentLocale}\n          areaCode={props.areaCode}\n          countryCode={props.countryCode}\n          showType={false}\n          disabled={false}\n          selected={props.selectedMatcherIndex}\n          onSelectContact={props.onSelectMatcherName}\n          isLogging={false}\n          enableContactFallback\n          brand={props.brand}\n          showPlaceholder={props.showContactDisplayPlaceholder}\n          sourceIcons={props.sourceIcons}\n          phoneTypeRenderer={props.phoneTypeRenderer}\n          phoneSourceNameRenderer={props.phoneSourceNameRenderer}\n        />\n      </div>\n      <div className={styles.userPhoneNumber}>\n        {props.formatPhone(props.phoneNumber)}\n      </div>\n    </div>\n  );\n}\n\nUserInfo.propTypes = {\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nUserInfo.defaultProps = {\n  phoneNumber: null,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n\nexport default function IncomingCallPanel(props) {\n  return (\n    <div className={classnames(styles.root, props.className)}>\n      <span className={styles.backButton} onClick={props.onBackButtonClick}>\n        <i className={classnames(dynamicsFont.arrow, styles.backIcon)} />\n      </span>\n      <UserInfo\n        phoneNumber={props.phoneNumber}\n        currentLocale={props.currentLocale}\n        className={styles.userInfo}\n        formatPhone={props.formatPhone}\n        nameMatches={props.nameMatches}\n        fallBackName={props.fallBackName}\n        areaCode={props.areaCode}\n        countryCode={props.countryCode}\n        selectedMatcherIndex={props.selectedMatcherIndex}\n        onSelectMatcherName={props.onSelectMatcherName}\n        avatarUrl={props.avatarUrl}\n        brand={props.brand}\n        showContactDisplayPlaceholder={props.showContactDisplayPlaceholder}\n        sourceIcons={props.sourceIcons}\n        phoneTypeRenderer={props.phoneTypeRenderer}\n        phoneSourceNameRenderer={props.phoneSourceNameRenderer}\n      />\n      <IncomingCallPad\n        className={styles.callPad}\n        forwardingNumbers={props.forwardingNumbers}\n        formatPhone={props.formatPhone}\n        answer={props.answer}\n        reject={props.reject}\n        toVoiceMail={props.toVoiceMail}\n        replyWithMessage={props.replyWithMessage}\n        onForward={props.onForward}\n        currentLocale={props.currentLocale}\n        hasOtherActiveCall={props.hasOtherActiveCall}\n        answerAndEnd={props.answerAndEnd}\n        answerAndHold={props.answerAndHold}\n        sessionId={props.sessionId}\n        searchContact={props.searchContact}\n        searchContactList={props.searchContactList}\n        phoneTypeRenderer={props.phoneTypeRenderer}\n        phoneSourceNameRenderer={props.phoneSourceNameRenderer}\n      />\n      {props.children}\n    </div>\n  );\n}\n\nIncomingCallPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string,\n  className: PropTypes.string,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  formatPhone: PropTypes.func.isRequired,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  onBackButtonClick: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  onForward: PropTypes.func.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  answerAndEnd: PropTypes.func,\n  answerAndHold: PropTypes.func,\n  hasOtherActiveCall: PropTypes.bool,\n  sessionId: PropTypes.string.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nIncomingCallPanel.defaultProps = {\n  className: null,\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  answerAndEnd: undefined,\n  answerAndHold: undefined,\n  hasOtherActiveCall: false,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n"]}