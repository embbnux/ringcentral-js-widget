{"version":3,"sources":["components/MessageItem/index.js"],"names":["MessageItem","props","className","unreadCounts","messageItem","unRead","contactList","map","contactName","indexOf","slice","messageIcon","length","groupConversation","composeText","conversationId","messageLink","typeIcon","messageContent","messageFrom","join","messageText","subject","messageInfo","messageTime","formatDateTime","creationTime","contactInfo","information","propTypes","type","string","isRequired","number","arrayOf","func","defaultProps"],"mappings":";;;;;kBAOwBA,W;;AAPxB;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACzC,MAAIC,YAAY,IAAhB;AACA,MAAID,MAAME,YAAN,GAAqB,CAAzB,EAA4B;AAC1BD,gBAAY,0BAAW,iBAAOE,WAAlB,EAA+B,iBAAOC,MAAtC,CAAZ;AACD,GAFD,MAEO;AACLH,gBAAY,iBAAOE,WAAnB;AACD;AACD,MAAME,cAAcL,MAAMK,WAAN,CAAkBC,GAAlB,CAClB,UAACC,WAAD,EAAiB;AACf,QAAIA,YAAYC,OAAZ,CAAoB,GAApB,MAA6B,CAAC,CAAlC,EAAqC;AACnC,aAAOD,WAAP;AACD;AACD,WAAOA,YAAYE,KAAZ,CAAkB,CAAlB,EAAqBF,YAAYC,OAAZ,CAAoB,GAApB,CAArB,CAAP;AACD,GANiB,CAApB;AAQA,MAAME,cAAeL,YAAYM,MAAZ,GAAqB,CAAtB,GAClB,uBAAaC,iBADK,GACe,uBAAaC,WADhD;;AAGA,SACE;AAAA;AAAA,MAAK,WAAWZ,SAAhB;AACE;AAAA;AAAA;AACE,gCAAsBD,MAAMc,cAD9B;AAEE,mBAAW,iBAAOC;AAFpB;AAIE;AAAA;AAAA,UAAK,WAAW,iBAAOC,QAAvB;AACE,gDAAM,WAAWN,WAAjB;AADF,OAJF;AAOE;AAAA;AAAA,UAAK,WAAW,iBAAOO,cAAvB;AACE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AACGb,sBAAYc,IAAZ,CAAiB,GAAjB;AADH,SADF;AAIE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AAAqCpB,gBAAMqB;AAA3C,SAJF;AAKE;AAAA;AAAA,YAAK,WAAW,iBAAOC,WAAvB;AACE;AAAA;AAAA,cAAK,WAAW,iBAAOC,WAAvB;AAAqCvB,kBAAMwB,cAAN,CAAqBxB,MAAMyB,YAA3B;AAArC;AADF;AALF;AAPF,KADF;AAkBE;AAAA;AAAA;AACE,YAAI,WADN;AAEE,mBAAW,iBAAOV;AAFpB;AAIE;AAAA;AAAA,UAAK,WAAW,iBAAOW,WAAvB;AACE,gDAAM,WAAW,uBAAaC,WAA9B;AADF;AAJF;AAlBF,GADF;AA6BD;;AAED5B,YAAY6B,SAAZ,GAAwB;AACtBC,QAAM,iBAAUC,MAAV,CAAiBC,UADD;AAEtB7B,gBAAc,iBAAU8B,MAFF;AAGtBlB,kBAAgB,iBAAUgB,MAAV,CAAiBC,UAHX;AAItBV,WAAS,iBAAUS,MAJG;AAKtBzB,eAAa,iBAAU4B,OAAV,CAAkB,iBAAUH,MAA5B,EAAoCC,UAL3B;AAMtBN,gBAAc,iBAAUK,MAAV,CAAiBC,UANT;AAOtBP,kBAAgB,iBAAUU,IAAV,CAAeH;AAPT,CAAxB;;AAUAhC,YAAYoC,YAAZ,GAA2B;AACzBjC,gBAAc,CADW;AAEzBmB,WAAS;AAFgB,CAA3B","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { Link } from 'react-router';\n\nimport classnames from 'classnames';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nexport default function MessageItem(props) {\n  let className = null;\n  if (props.unreadCounts > 0) {\n    className = classnames(styles.messageItem, styles.unRead);\n  } else {\n    className = styles.messageItem;\n  }\n  const contactList = props.contactList.map(\n    (contactName) => {\n      if (contactName.indexOf('|') === -1) {\n        return contactName;\n      }\n      return contactName.slice(0, contactName.indexOf('|'));\n    }\n  );\n  const messageIcon = (contactList.length > 1) ?\n    dynamicsFont.groupConversation : dynamicsFont.composeText;\n\n  return (\n    <div className={className}>\n      <Link\n        to={`/conversations/${props.conversationId}`}\n        className={styles.messageLink}\n      >\n        <div className={styles.typeIcon}>\n          <span className={messageIcon} />\n        </div>\n        <div className={styles.messageContent}>\n          <div className={styles.messageFrom}>\n            {contactList.join(',')}\n          </div>\n          <div className={styles.messageText}>{props.subject}</div>\n          <div className={styles.messageInfo}>\n            <div className={styles.messageTime}>{props.formatDateTime(props.creationTime)}</div>\n          </div>\n        </div>\n      </Link>\n      <Link\n        to={'/messages'}\n        className={styles.messageLink}\n      >\n        <div className={styles.contactInfo}>\n          <span className={dynamicsFont.information} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMessageItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  unreadCounts: PropTypes.number,\n  conversationId: PropTypes.string.isRequired,\n  subject: PropTypes.string,\n  contactList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  creationTime: PropTypes.string.isRequired,\n  formatDateTime: PropTypes.func.isRequired,\n};\n\nMessageItem.defaultProps = {\n  unreadCounts: 0,\n  subject: '',\n};\n"]}