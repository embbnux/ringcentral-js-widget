{"version":3,"sources":["components/SlideoutBar/index.js"],"names":["SlideoutBar","_onClose","evt","stopPropagation","props","onClose","styles","closeBtn","offset","onClick","slideout","className","closable","children","slideStyle","cls","container","closeButton","_renderCloseButton","transform","React","Component","propTypes","PropTypes","bool","node","string","number","isRequired","func","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,W;;;;;;;;;;;;;;sNACnBC,Q,GAAW,UAACC,GAAD,EAAS;AAClBA,UAAIC,eAAJ;AACA,YAAKC,KAAL,CAAWC,OAAX;AACD,K;;;;;yCAEoB;AACnB,aACE;AAAA;AAAA,UAAG,WAAWC,iBAAOC,QAArB,EAA+B,SAAS,KAAKN,QAA7C;AACE,sCAAC,mBAAD;AADF,OADF;AAKD;;;6BAEQ;AAAA,mBAQH,KAAKG,KARF;AAAA,UAELI,MAFK,UAELA,MAFK;AAAA,UAGLC,OAHK,UAGLA,OAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,SALK,UAKLA,SALK;AAAA,UAMLC,QANK,UAMLA,QANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;;AASP,UAAMC,aAAaJ,WAAW,eAAX,mBAA2CF,MAA3C,QAAnB;AACA,UAAMO,MAAM,0BAAWT,iBAAOU,SAAlB,EAA6BL,SAA7B,CAAZ;AACA,UAAMM,cAAcL,WAAW,KAAKM,kBAAL,EAAX,GAAuC,IAA3D;AACA,aACE;AAAA;AAAA,UAAK,WAAWH,GAAhB,EAAqB,OAAO,EAAEI,WAAWL,UAAb,EAA5B,EAAuD,SAASL,OAAhE;AACGI,gBADH;AAEGI;AAFH,OADF;AAMD;;;EAhCsCG,gBAAMC,S;;kBAA1BrB,W;;;AAmCrBA,YAAYsB,SAAZ,GAAwB;AACtBV,YAAUW,oBAAUC,IADE;AAEtBX,YAAUU,oBAAUE,IAFE;AAGtBd,aAAWY,oBAAUG,MAHC;AAItBlB,UAAQe,oBAAUI,MAAV,CAAiBC,UAJH;AAKtBlB,YAAUa,oBAAUC,IAAV,CAAeI,UALH;AAMtBnB,WAASc,oBAAUM,IANG;AAOtBxB,WAASkB,oBAAUM;AAPG,CAAxB;;AAUA7B,YAAY8B,YAAZ,GAA2B;AACzBlB,YAAU,IADe;AAEzBD,aAAWoB,SAFc;AAGzBlB,YAAUkB,SAHe;AAIzBtB,SAJyB,qBAIf,CAAE,CAJa;AAKzBJ,SALyB,qBAKf,CAAE;AALa,CAA3B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CloseIcon from '../../assets/images/CloseIcon.svg';\nimport styles from './styles.scss';\n\nexport default class SlideoutBar extends React.Component {\n  _onClose = (evt) => {\n    evt.stopPropagation();\n    this.props.onClose();\n  }\n\n  _renderCloseButton() {\n    return (\n      <i className={styles.closeBtn} onClick={this._onClose}>\n        <CloseIcon />\n      </i>\n    );\n  }\n\n  render() {\n    const {\n      offset,\n      onClick,\n      slideout,\n      className,\n      closable,\n      children,\n    } = this.props;\n    const slideStyle = slideout ? 'translateX(0)' : `translateX(${offset}px)`;\n    const cls = classnames(styles.container, className);\n    const closeButton = closable ? this._renderCloseButton() : null;\n    return (\n      <div className={cls} style={{ transform: slideStyle }} onClick={onClick}>\n        {children}\n        {closeButton}\n      </div>\n    );\n  }\n}\n\nSlideoutBar.propTypes = {\n  closable: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  offset: PropTypes.number.isRequired,\n  slideout: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n};\n\nSlideoutBar.defaultProps = {\n  closable: true,\n  className: undefined,\n  children: undefined,\n  onClick() {},\n  onClose() {},\n};\n"]}