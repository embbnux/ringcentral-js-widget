{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","state","messageText","onSenderChange","value","updateSenderNumber","cleanReceiverValue","cleanTypingToNumber","addToRecipients","receiver","shouldClean","addToNumber","isAdded","removeFromRecipients","phoneNumber","removeToNumber","nextProps","setState","senderNumbers","length","styles","root","className","showSpinner","currentLocale","outboundSMS","hasSenderNumbers","brand","typingToNumber","recipients","updateTypingToNumber","toNumbers","searchContact","searchContactList","formatContactPhone","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","senderField","senderNumber","formatPhone","updateMessageText","sendButtonDisabled","send","inputExpandable","Component","propTypes","PropTypes","string","func","isRequired","arrayOf","shape","bool","name","entityType","phoneType","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport NoSenderAlert from './NoSenderAlert';\nimport FromField from '../FromField';\nimport MessageInput from '../MessageInput';\n\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageText: props.messageText,\n    };\n\n    this.onSenderChange = (value) => {\n      this.props.updateSenderNumber(value);\n    };\n\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.addToRecipients = async (receiver, shouldClean = true) => {\n      const isAdded = await this.props.addToNumber(receiver);\n      if (isAdded && shouldClean) {\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.messageText !== this.state.messageText) {\n      this.setState({\n        messageText: nextProps.messageText,\n      });\n    }\n  }\n\n  hasSenderNumbers() {\n    return this.props.senderNumbers.length > 0;\n  }\n\n  render() {\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        <NoSenderAlert\n          currentLocale={this.props.currentLocale}\n          outboundSMS={this.props.outboundSMS}\n          hasSenderNumbers={this.hasSenderNumbers()}\n          brand={this.props.brand}\n        />\n        <RecipientsInput\n          value={this.props.typingToNumber}\n          recipientsClassName={styles.recipients}\n          onChange={this.props.updateTypingToNumber}\n          onClean={this.cleanReceiverValue}\n          recipients={this.props.toNumbers}\n          addToRecipients={this.addToRecipients}\n          removeFromRecipients={this.removeFromRecipients}\n          searchContact={this.props.searchContact}\n          searchContactList={this.props.searchContactList}\n          formatContactPhone={this.props.formatContactPhone}\n          currentLocale={this.props.currentLocale}\n          phoneTypeRenderer={this.props.phoneTypeRenderer}\n          contactInfoRenderer={this.props.recipientsContactInfoRenderer}\n          contactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n          titleEnabled\n          autoFocus={this.props.autoFocus}\n          multiple\n        />\n        <div className={styles.senderField}>\n          <FromField\n            currentLocale={this.props.currentLocale}\n            fromNumber={this.props.senderNumber}\n            fromNumbers={this.props.senderNumbers}\n            formatPhone={this.props.formatPhone}\n            onChange={this.onSenderChange}\n            hidden={!this.hasSenderNumbers()}\n            showAnonymous={false}\n          />\n        </div>\n        <MessageInput\n          value={this.props.messageText}\n          onChange={this.props.updateMessageText}\n          disabled={this.props.sendButtonDisabled}\n          currentLocale={this.props.currentLocale}\n          onSend={this.props.send}\n          inputExpandable={this.props.inputExpandable}\n        />\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  brand: PropTypes.string,\n  className: PropTypes.string,\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  inputExpandable:PropTypes.bool,\n};\n\nComposeTextPanel.defaultProps = {\n  brand: 'RingCentral',\n  className: null,\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n  outboundSMS: false,\n  showSpinner: false,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  autoFocus: false,\n  inputExpandable: undefined,\n};\n\nexport default ComposeTextPanel;\n"]}