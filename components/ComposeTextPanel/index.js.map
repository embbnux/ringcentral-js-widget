{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","onSenderChange","e","value","currentTarget","updateSenderNumber","onReceiverChange","updateTypingToNumber","cleanReceiverValue","cleanTypingToNumber","onReceiverInputKeyDown","key","preventDefault","typingToNumber","length","addToNumber","name","formatPhone","phoneNumber","onReceiverInputKeyUp","searchContact","addToRecipients","receiver","removeFromRecipients","removeToNumber","onTextChange","updateMessageText","handleSubmit","send","console","debug","root","receiverField","getString","currentLocale","rightPanel","toNumbers","searchContactList","senderField","senderInput","senderSelect","senderNumber","senderNumbers","option","buttomField","textField","messageText","submitField","submitButton","sendButtonDisabled","propTypes","func","isRequired","arrayOf","string","bool","shape","entityType","phoneType","PropTypes","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport Select from '../Select';\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSenderChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateSenderNumber(value);\n    };\n\n    this.onReceiverChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateTypingToNumber(value);\n    };\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.onReceiverInputKeyDown = (e) => {\n      if (e.key === ',' || e.key === ';' || e.key === 'Enter') {\n        e.preventDefault();\n        if (this.props.typingToNumber.length === 0) {\n          return;\n        }\n        this.props.addToNumber({\n          name: this.props.formatPhone(this.props.typingToNumber),\n          phoneNumber: this.props.typingToNumber,\n        });\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.onReceiverInputKeyUp = (e) => {\n      this.props.searchContact(e.currentTarget.value);\n    };\n\n    this.addToRecipients = (receiver) => {\n      this.props.addToNumber(receiver);\n      this.props.cleanTypingToNumber();\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <form onSubmit={this.handleSubmit}>\n          <div className={styles.receiverField}>\n            <label>{i18n.getString('to', this.props.currentLocale)}:</label>\n            <div className={styles.rightPanel}>\n              <RecipientsInput\n                value={this.props.typingToNumber}\n                onChange={this.onReceiverChange}\n                onClean={this.cleanReceiverValue}\n                placeholder={i18n.getString('enterNameOrNumber', this.props.currentLocale)}\n                recipients={this.props.toNumbers}\n                addToRecipients={this.addToRecipients}\n                removeFromRecipients={this.removeFromRecipients}\n                searchContactList={this.props.searchContactList}\n                onKeyUp={this.onReceiverInputKeyUp}\n                onKeyDown={this.onReceiverInputKeyDown}\n                formatPhone={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.senderField}>\n            <label>{i18n.getString('from', this.props.currentLocale)}:</label>\n            <div className={styles.senderInput}>\n              <Select\n                className={styles.senderSelect}\n                value={this.props.senderNumber}\n                onChange={this.onSenderChange}\n                options={this.props.senderNumbers}\n                paddingLeft={0}\n                valueFunction={option => option}\n                renderFunction={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.buttomField}>\n            <div className={styles.textField}>\n              <textarea\n                placeholder={i18n.getString('typeMessage', this.props.currentLocale)}\n                value={this.props.messageText}\n                maxLength=\"1000\"\n                onChange={this.onTextChange}\n              />\n            </div>\n            <div className={styles.submitField}>\n              <input\n                type=\"submit\"\n                value={i18n.getString('send', this.props.currentLocale)}\n                className={styles.submitButton}\n                disabled={this.props.sendButtonDisabled}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nComposeTextPanel.defaultProps = {\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n};\n\nexport default ComposeTextPanel;\n"]}