{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["SenderSelectInput","props","className","value","onChange","options","map","number","formatPhone","propTypes","string","isRequired","func","arrayOf","ComposeTextPanel","state","showSenderSetting","onSenderChange","e","currentTarget","updateSenderNumber","onReceiverChange","updateTypingToNumber","cleanReceiverValue","cleanTypingToNumber","onReceiverInputKeyDown","searchContact","addToRecipients","receiver","addToNumber","removeFromRecipients","phoneNumber","removeToNumber","onTextChange","updateMessageText","handleSubmit","preventDefault","send","console","debug","toggleShowSenderSetting","setState","prevState","senderFieldClasses","messageSenderField","hiddenField","composeTextPanelHeader","sendNumberSetting","settingHover","getString","currentLocale","valueInput","select","senderNumber","senderNumbers","messageReceiverField","rightPanel","typingToNumber","toNumbers","searchContactList","messageTextField","messageText","submitButton","sendButtonDisabled","bool","shape","name","entityType","phoneType","PropTypes","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\n\nfunction SenderSelectInput(props) {\n  return (\n    <select\n      className={props.className}\n      value={props.value}\n      onChange={props.onChange}>\n      {\n        props.options.map(number => (\n          <option key={number} value={number}>\n            {props.formatPhone(number)}\n          </option>\n        ))\n      }\n    </select>\n  );\n}\n\nSenderSelectInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSenderSetting: true,\n    };\n\n    this.onSenderChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateSenderNumber(value);\n    };\n\n    this.onReceiverChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateTypingToNumber(value);\n    };\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.onReceiverInputKeyDown = (e) => {\n      this.props.searchContact(e.currentTarget.value);\n    };\n\n    this.addToRecipients = (receiver) => {\n      this.props.addToNumber(receiver);\n      this.props.cleanTypingToNumber();\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n\n    this.onTextChange = (e) => {\n      const value = e.currentTarget.value;\n      this.props.updateMessageText(value);\n    };\n\n    this.handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.send();\n      console.debug('send message ...');\n    };\n\n    this.toggleShowSenderSetting = () => {\n      this.setState(prevState => (\n        { showSenderSetting: !prevState.showSenderSetting }\n      ));\n    };\n  }\n\n  render() {\n    let senderFieldClasses = styles.messageSenderField;\n    if (!this.state.showSenderSetting) {\n      senderFieldClasses = classnames(styles.messageSenderField, styles.hiddenField);\n    }\n    return (\n      <div>\n        <div className={styles.composeTextPanelHeader}>\n          <a href=\"#sender-number-setting\" className={styles.sendNumberSetting} onClick={this.toggleShowSenderSetting}>\n            <span className={dynamicsFont.settingHover} />\n          </a>\n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <div className={senderFieldClasses}>\n            <label>{i18n.getString('sendMessageFrom', this.props.currentLocale)}</label>\n            <div className={styles.valueInput}>\n              <SenderSelectInput\n                className={styles.select}\n                value={this.props.senderNumber}\n                onChange={this.onSenderChange}\n                options={this.props.senderNumbers}\n                formatPhone={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.messageReceiverField}>\n            <label>{i18n.getString('to', this.props.currentLocale)}:</label>\n            <div className={styles.rightPanel}>\n              <RecipientsInput\n                value={this.props.typingToNumber}\n                onChange={this.onReceiverChange}\n                onClean={this.cleanReceiverValue}\n                placeholder={i18n.getString('enterNameOrNumber', this.props.currentLocale)}\n                recipients={this.props.toNumbers}\n                addToRecipients={this.addToRecipients}\n                removeFromRecipients={this.removeFromRecipients}\n                searchContactList={this.props.searchContactList}\n                onKeyUp={this.onReceiverInputKeyDown}\n                formatPhone={this.props.formatPhone}\n              />\n            </div>\n          </div>\n          <div className={styles.messageTextField}>\n            <textarea\n              placeholder={i18n.getString('typeAnyToSend', this.props.currentLocale)}\n              value={this.props.messageText}\n              maxLength=\"1000\"\n              onChange={this.onTextChange}\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value={i18n.getString('send', this.props.currentLocale)}\n            className={styles.submitButton}\n            disabled={this.props.sendButtonDisabled}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: React.PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nComposeTextPanel.defaultProps = {\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n};\n\nexport default ComposeTextPanel;\n"]}