{"version":3,"sources":["components/ConferencePanel/index.js"],"names":["ConferencePanel","props","state","showInternational","searchInternationals","conferenceNumbers","phoneNumbers","selectInternationals","formatNumbers","dialInNumber","formatPhone","phoneNumber","countryCode","areaCode","hostCode","formatPin","participantCode","onInternationalSwitch","checked","setState","onSearchKeyUp","e","searchKey","currentTarget","value","getMatchList","key","toLowerCase","trim","split","join","filter","replace","indexOf","country","name","inviteWithText","internationals","length","forEach","countryName","getString","currentLocale","changeSelect","newState","id","getAttribute","sort","a","b","internationalNumbers","international","search","icon_search","rightPanel","numbers","map","row","checkCountry","formatInternational","callingCode","showConferenceNumbers","conferenceNumber","participantsSwitch","textBtn","propTypes","shape","string","array","isRequired","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport formatMessage from 'format-message';\nimport IconField from '../IconField';\nimport Switch from '../Switch';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport RcFont from '../../assets/RcFont/RcFont.scss';\n\nclass ConferencePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showInternational: false,\n      searchInternationals: this.props.conferenceNumbers.phoneNumbers,\n      selectInternationals: [],\n    };\n    this.formatNumbers = {\n      dialInNumber: this.props.formatPhone(\n        this.props.conferenceNumbers.phoneNumber,\n        this.props.countryCode,\n        this.props.areaCode\n      ),\n      hostCode: this.props.formatPin(this.props.conferenceNumbers.hostCode),\n      participantCode: this.props.formatPin(this.props.conferenceNumbers.participantCode)\n    };\n    this.onInternationalSwitch = (checked) => {\n      this.setState({\n        showInternational: checked,\n      });\n    };\n    this.onSearchKeyUp = (e) => {\n      const searchKey = e.currentTarget.value;\n      this.setState({\n        searchInternationals: this.getMatchList(searchKey)\n      });\n    };\n    this.getMatchList = (searchKey) => {\n      const key = searchKey.toLowerCase().trim().split(' ').join('');\n      return this.props.conferenceNumbers.phoneNumbers.filter(value =>\n        value.phoneNumber.trim().replace(' ', '').indexOf(key) >= 0 ||\n        value.country.name.toLowerCase().trim().replace(' ', '').indexOf(key) >= 0);\n    };\n    this.inviteWithText = () => {\n      let internationals = '';\n      if (this.state.selectInternationals.length !== 0) {\n        internationals += 'International Dial-in Numbers:\\n';\n        this.state.selectInternationals.forEach((value) => {\n          const phoneNumber = this.props.formatPhone(\n            value.phoneNumber,\n            value.countryCode,\n            value.areaCode || '',\n          );\n          internationals += `${value.countryName} ${phoneNumber}\\n`;\n        });\n        internationals += '\\n';\n      }\n      this.props.inviteWithText(\n        formatMessage(\n          i18n.getString('inviteText', this.props.currentLocale), {\n            dialInNumber: this.formatNumbers.dialInNumber,\n            internationals,\n            participantCode: this.formatNumbers.participantCode,\n          }\n        ));\n    };\n    this.changeSelect = (e) => {\n      const state = this.state.selectInternationals;\n      if (e.currentTarget.checked === true) {\n        const newState = Array.concat(state, [{\n          id: e.currentTarget.getAttribute('data-id'),\n          phoneNumber: e.currentTarget.getAttribute('data-number'),\n          countryName: e.currentTarget.getAttribute('data-name'),\n          countryCode: e.currentTarget.getAttribute('data-countryCode'),\n          areaCode: e.currentTarget.getAttribute('data-areaCode'),\n        }]);\n        newState.sort((a, b) => a.id - b.id);\n        this.setState({\n          selectInternationals: newState\n        });\n      } else {\n        const newState = state.filter(value =>\n        value.phoneNumber !== e.currentTarget.getAttribute('data-number'));\n        newState.sort((a, b) => a.id - b.id);\n        this.setState({\n          selectInternationals: newState\n        });\n      }\n    };\n  }\n  render() {\n    const {\n      currentLocale,\n    } = this.props;\n    const internationalNumbers = this.state.showInternational ? (\n      <div className={styles.international}>\n        <h2>\n          {i18n.getString('internationalNumbersHeader', currentLocale)}\n        </h2>\n        <div className={styles.search}>\n          <span className={RcFont.icon_search} />\n          <div className={styles.rightPanel}>\n            <input\n              type=\"text\"\n              placeholder={i18n.getString('search', currentLocale)}\n              onKeyUp={this.onSearchKeyUp}\n            />\n          </div>\n        </div>\n        <div className={styles.numbers}>\n          {this.state.searchInternationals.map((value, key) => (\n            <div className={styles.row} key={key}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className={styles.checkCountry}\n                  data-id={value.country.id}\n                  data-number={value.phoneNumber}\n                  data-name={value.country.name}\n                  data-countryCode={value.country.countryCode}\n                  data-areaCode={value.country.areaCode}\n                  onChange={this.changeSelect} />\n                <span className={styles.country}>{value.country.name}</span>\n                <span className={styles.phoneNumber}>\n                  {this.props.formatInternational(value.phoneNumber, value.country.callingCode)}\n                </span>\n              </label>\n            </div>\n            ))}\n        </div>\n      </div>\n    ) : '';\n    return (\n      <div>\n        <div className={styles.showConferenceNumbers}>\n          <label>{i18n.getString('dialInNumber', currentLocale)}:</label>\n          <div className={styles.dialInNumber}>\n            {this.formatNumbers.dialInNumber}\n          </div>\n        </div>\n        <div className={styles.showConferenceNumbers}>\n          <label>{i18n.getString('host', currentLocale)}:</label>\n          <div className={styles.conferenceNumber}>\n            {this.formatNumbers.hostCode}\n          </div>\n        </div>\n        <div className={styles.showConferenceNumbers}>\n          <label>{i18n.getString('participants', currentLocale)}:</label>\n          <div className={styles.conferenceNumber}>\n            {this.formatNumbers.participantCode}\n          </div>\n        </div>\n        <div className={styles.participantsSwitch}>\n          <IconField\n            icon={\n              <Switch\n                onChange={this.onInternationalSwitch}\n             />\n           }\n           >\n            {i18n.getString('internationalParticipants', currentLocale)}\n          </IconField>\n        </div>\n        {internationalNumbers}\n        <input\n          type=\"button\"\n          value={i18n.getString('inviteWithText', currentLocale)}\n          className={styles.textBtn}\n          onClick={this.inviteWithText}\n        />\n      </div>\n    );\n  }\n}\nConferencePanel.propTypes = {\n  conferenceNumbers: PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    hostCode: PropTypes.string,\n    participantCode: PropTypes.string,\n    phoneNumbers: PropTypes.array,\n  }).isRequired,\n  countryCode: PropTypes.string.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  inviteWithText: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatInternational: PropTypes.func.isRequired,\n  formatPin: PropTypes.func.isRequired\n};\nexport default ConferencePanel;\n"]}