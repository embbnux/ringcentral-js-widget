{"version":3,"sources":["components/PresenceSettingSection/index.js"],"names":["PresenceSettingSection","props","state","showSelects","showPresenceSettings","toggleShow","setState","preState","onCallQueueChange","dndStatus","doNotAcceptAnyCalls","takeAllCalls","doNotAcceptDepartmentCalls","toggleAcceptCallQueueCalls","sectionClass","styles","section","showDropdown","acceptQueueCalls","isCallQueueMember","i18n","getString","currentLocale","currentStatus","userStatus","dropdownIcon","dynamicsFont","arrow","iconLine","title","subTitle","statusIcon","presenceList","presenceStatus","available","setAvailable","busy","setBusy","setDoNotDisturb","offline","setInvisible","Component","propTypes","PropTypes","string","isRequired","bool","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport dndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\n\nimport IconLine from '../IconLine';\nimport Line from '../Line';\nimport Switch from '../Switch';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport PresenceItem, { getPresenceStatusName } from '../PresenceItem';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class PresenceSettingSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: props.showPresenceSettings,\n    };\n\n    this.toggleShow = () => {\n      this.setState(preState => ({\n        showSelects: !preState.showSelects,\n      }));\n    };\n\n    this.onCallQueueChange = () => {\n      if (this.state.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n        return;\n      }\n      this.setState(preState => ({\n        dndStatus: (\n          preState.dndStatus === dndStatus.takeAllCalls ?\n            dndStatus.doNotAcceptDepartmentCalls :\n            dndStatus.takeAllCalls\n        ),\n      }));\n      this.props.toggleAcceptCallQueueCalls();\n    };\n  }\n\n  render() {\n    const sectionClass = classnames(\n      styles.section,\n      this.state.showSelects ? styles.showDropdown : null,\n    );\n    const acceptQueueCalls = this.props.isCallQueueMember ? (\n      <IconLine\n        icon={\n          <Switch\n            checked={this.props.dndStatus === dndStatus.takeAllCalls}\n            onChange={this.onCallQueueChange}\n          />\n        }\n      >\n        {i18n.getString('acceptQueueCalls', this.props.currentLocale)}\n      </IconLine>\n    ) : null;\n    const currentStatus = getPresenceStatusName(\n      this.props.userStatus,\n      this.props.dndStatus,\n      this.props.currentLocale\n    );\n    return (\n      <section className={sectionClass}>\n        <IconLine\n          icon={\n            <span className={styles.dropdownIcon} >\n              <i className={dynamicsFont.arrow} />\n            </span>\n          }\n          onClick={this.toggleShow}\n          className={styles.iconLine}\n        >\n          <div className={styles.title}>\n            {i18n.getString('status', this.props.currentLocale)}\n          </div>\n          <div className={styles.subTitle}>\n            <PresenceStatusIcon\n              className={styles.statusIcon}\n              userStatus={this.props.userStatus}\n              dndStatus={this.props.dndStatus}\n            />\n            <span>\n              {currentStatus}\n            </span>\n          </div>\n        </IconLine>\n        <Line className={styles.presenceList}>\n          <PresenceItem\n            userStatus={presenceStatus.available}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setAvailable}\n            selected={\n              this.props.userStatus === presenceStatus.available &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setBusy}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.doNotAcceptAnyCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setDoNotDisturb}\n            selected={\n              this.props.dndStatus === dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.offline}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setInvisible}\n            selected={\n              this.props.userStatus === presenceStatus.offline &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n        </Line>\n        {acceptQueueCalls}\n      </section>\n    );\n  }\n}\n\nPresenceSettingSection.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string.isRequired,\n  userStatus: PropTypes.string.isRequired,\n  isCallQueueMember: PropTypes.bool.isRequired,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  toggleAcceptCallQueueCalls: PropTypes.func.isRequired,\n  showPresenceSettings: PropTypes.bool.isRequired,\n};\n"]}