{"version":3,"sources":["components/Draggable/index.js"],"names":["Draggable","props","state","dragging","positionX","positionY","translateX","positionOffsetX","translateY","positionOffsetY","_isClick","_onMouseDown","e","button","setState","clientX","clientY","window","addEventListener","_onMouseMove","_onMouseUp","stopPropagation","preventDefault","draggableDom","offsetParent","newPositionX","newPositionY","originalPositionX","offsetLeft","originalPositionY","offsetTop","child","firstChild","height","clientHeight","width","clientWidth","preState","newState","updatePositionOffset","removeEventListener","_onClick","onClick","className","children","style","msTransition","WebkitTransition","transform","root","propTypes","string","node","isRequired","func","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\nclass Draggable extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n      positionX: 0,\n      positionY: 0,\n      translateX: props.positionOffsetX,\n      translateY: props.positionOffsetY,\n    };\n\n    this._isClick = true;\n\n    this._onMouseDown = (e) => {\n      if (e.button !== 0) return;\n      if (this.state.dragging) {\n        return;\n      }\n      this.setState({\n        positionX: e.clientX,\n        positionY: e.clientY,\n        dragging: true,\n      });\n      this._isClick = true;\n      window.addEventListener('mousemove', this._onMouseMove, false);\n      window.addEventListener('mouseup', this._onMouseUp, false);\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this._onMouseMove = (e) => {\n      if (!this.state.dragging) {\n        return;\n      }\n      if (!this.draggableDom) {\n        return;\n      }\n      const offsetParent = this.draggableDom.offsetParent;\n      const newPositionX = e.clientX;\n      const newPositionY = e.clientY;\n      const originalPositionX = this.draggableDom.offsetLeft;\n      const originalPositionY = this.draggableDom.offsetTop;\n      const child = this.draggableDom.firstChild;\n      const height = (child && child.clientHeight) || 0;\n      const width = (child && child.clientWidth) || 0;\n      this._isClick = false;\n      this.setState((preState) => {\n        const newState = {\n          positionX: newPositionX,\n          positionY: newPositionY,\n          translateX: preState.translateX + (newPositionX - preState.positionX),\n          translateY: preState.translateY + (newPositionY - preState.positionY),\n        };\n        if (\n          originalPositionX + newState.translateX > offsetParent.clientWidth + width ||\n          originalPositionX + newState.translateX < width / 2\n        ) {\n          delete newState.translateX;\n        }\n        if (\n          originalPositionY + newState.translateY > offsetParent.clientHeight - height ||\n          originalPositionY + newState.translateY < -height\n        ) {\n          delete newState.translateY;\n        }\n        return newState;\n      });\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this._onMouseUp = (e) => {\n      this.setState({\n        dragging: false,\n      });\n      this.props.updatePositionOffset(this.state.translateX, this.state.translateY);\n      window.removeEventListener('mousemove', this._onMouseMove);\n      window.removeEventListener('mouseup', this._onMouseUp);\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this._onClick = (e) => {\n      if (!this._isClick) {\n        return;\n      }\n      this.props.onClick(e);\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this._onMouseMove);\n    window.removeEventListener('mouseup', this._onMouseUp);\n  }\n\n  render() {\n    const {\n      className,\n      children,\n    } = this.props;\n    const style = {\n      msTransition: `translate(${this.state.translateX}px, ${this.state.translateY}px)`,\n      WebkitTransition: `translate(${this.state.translateX}px, ${this.state.translateY}px)`,\n      transform: `translate(${this.state.translateX}px, ${this.state.translateY}px)`,\n    };\n    return (\n      <div\n        onMouseDown={this._onMouseDown}\n        ref={(draggableDom) => { this.draggableDom = draggableDom; }}\n        style={style}\n        className={classnames(styles.root, className)}\n        onClick={this._onClick}\n        >\n        {children}\n      </div>\n    );\n  }\n}\n\nDraggable.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  positionOffsetX: PropTypes.number,\n  positionOffsetY: PropTypes.number,\n  updatePositionOffset: PropTypes.func,\n};\n\nDraggable.defaultProps = {\n  className: null,\n  onClick: () => null,\n  positionOffsetX: 0,\n  positionOffsetY: 0,\n  updatePositionOffset: () => null,\n};\n\nexport default Draggable;\n"]}