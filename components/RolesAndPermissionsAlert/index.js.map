{"version":3,"sources":["components/RolesAndPermissionsAlert/index.js"],"names":["RolesAndPermissionsAlert","message","currentLocale","brand","application","msg","permissionsMessages","invalidTier","i18n","getString","propTypes","PropTypes","shape","string","isRequired","defaultProps","undefined","handleMessage","insufficientPrivilege"],"mappings":";;;;;kBAOwBA,wB;;AAPxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEe,SAASA,wBAAT,OAOZ;AAAA,MALCC,OAKD,QANDA,OAMC,CALCA,OAKD;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,MAAIC,YAAJ;AACA,UAAQJ,OAAR;AACE,SAAKK,8BAAoBC,WAAzB;AACEF,YACE,8BAAC,0BAAD;AACE,iBAASG,eAAKC,SAAL,CAAeR,OAAf,EAAwBC,aAAxB,CADX;AAEE,gBAAQ,EAAEC,YAAF,EAASC,wBAAT,EAFV,GADF;AAKA;AACF;AACEC,YAAMG,eAAKC,SAAL,CAAeR,OAAf,EAAwBC,aAAxB,CAAN;AACA;AAVJ;AAYA,SACE;AAAA;AAAA;AACGG;AADH,GADF;AAKD;AACDL,yBAAyBU,SAAzB,GAAqC;AACnCT,WAASU,oBAAUC,KAAV,CAAgB;AACvBX,aAASU,oBAAUE,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAHgC;AAInCX,SAAOQ,oBAAUE,MAAV,CAAiBC,UAJW;AAKnCV,eAAaO,oBAAUE,MALY;AAMnCX,iBAAeS,oBAAUE,MAAV,CAAiBC;AANG,CAArC;;AASAd,yBAAyBe,YAAzB,GAAwC;AACtCX,eAAaY;AADyB,CAAxC;;AAIAhB,yBAAyBiB,aAAzB,GAAyC;AAAA,MAAGhB,OAAH,SAAGA,OAAH;AAAA,SACvCA,YAAYK,8BAAoBC,WAAhC,IACAN,YAAYK,8BAAoBY,qBAFO;AAAA,CAAzC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport permissionsMessages from\n  'ringcentral-integration/modules/RolesAndPermissions/permissionsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function RolesAndPermissionsAlert({\n  message: {\n    message\n  },\n  currentLocale,\n  brand,\n  application,\n}) {\n  let msg;\n  switch (message) {\n    case permissionsMessages.invalidTier:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ brand, application }} />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <div>\n      {msg}\n    </div>\n  );\n}\nRolesAndPermissionsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  brand: PropTypes.string.isRequired,\n  application: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nRolesAndPermissionsAlert.defaultProps = {\n  application: undefined,\n};\n\nRolesAndPermissionsAlert.handleMessage = ({ message }) => (\n  message === permissionsMessages.invalidTier ||\n  message === permissionsMessages.insufficientPrivilege\n);\n"]}