{"version":3,"sources":["components/MultiCallAnswerButton/index.js"],"names":["MultiCallAnswerButton","props","Icon","isEndOtherCall","EndIcon","HoldIcon","iconClassName","styles","button","endButton","text","title","split","map","line","index","className","width","height","x","y","onClick","answer","AnswerIcon","buttonTitle","propTypes","PropTypes","string","isRequired","func","bool","number","defaultProps"],"mappings":";;;;;kBAYwBA,qB;;AAZxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEe,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AACnD,MAAMC,OAAOD,MAAME,cAAN,GAAuBC,aAAvB,GAAiCC,cAA9C;AACA,MAAMC,gBAAgB,0BACpBC,iBAAOC,MADa,EAEpBP,MAAME,cAAN,GAAuBI,iBAAOE,SAA9B,GAA0C,EAFtB,CAAtB;AAIA,MAAMC,OAAOT,MAAMU,KAAN,CAAYC,KAAZ,CAAkB,IAAlB,EAAwBC,GAAxB,CAA4B,UAACC,IAAD,EAAOC,KAAP;AAAA,WACvC;AAAA;AAAA,QAAO,IAAIA,QAAQ,OAAR,GAAkB,CAA7B,EAAgC,GAAE,KAAlC,EAAwC,KAAKD,IAA7C;AACGA;AADH,KADuC;AAAA,GAA5B,CAAb;AAKA,SACE;AAAA;AAAA;AACE,iBAAWb,MAAMe,SADnB;AAEE,eAAQ,aAFV;AAGE,aAAOf,MAAMgB,KAHf;AAIE,cAAQhB,MAAMiB,MAJhB;AAKE,SAAGjB,MAAMkB,CALX;AAME,SAAGlB,MAAMmB;AANX;AAQE,kCAAC,sBAAD;AACE,aAAM,KADR;AAEE,cAAO,KAFT;AAGE,SAAG,EAHL;AAIE,SAAG,EAJL;AAKE,iBAAWd,aALb;AAME,eAASL,MAAMoB,OANjB;AAOE,YAAMnB;AAPR,MARF;AAiBE,kCAAC,sBAAD;AACE,aAAM,KADR;AAEE,cAAO,KAFT;AAGE,SAAG,GAHL;AAIE,SAAG,GAJL;AAKE,iBAAW,0BAAWK,iBAAOC,MAAlB,EAA0BD,iBAAOe,MAAjC,CALb;AAME,kBAAY,KANd;AAOE,eAASrB,MAAMoB,OAPjB;AAQE,YAAME;AARR,MAjBF;AA2BE;AAAA;AAAA;AACE,mBAAWhB,iBAAOiB,WADpB;AAEE,WAAE,KAFJ;AAGE,WAAE,KAHJ;AAIE,oBAAW;AAJb;AAMGd;AANH;AA3BF,GADF;AAsCD;;AAEDV,sBAAsByB,SAAtB,GAAkC;AAChCd,SAAOe,oBAAUC,MAAV,CAAiBC,UADQ;AAEhCZ,aAAWU,oBAAUC,MAFW;AAGhCN,WAASK,oBAAUG,IAAV,CAAeD,UAHQ;AAIhCzB,kBAAgBuB,oBAAUI,IAJM;AAKhCb,SAAOS,oBAAUC,MALe;AAMhCT,UAAQQ,oBAAUC,MANc;AAOhCR,KAAGO,oBAAUK,MAPmB;AAQhCX,KAAGM,oBAAUK;AARmB,CAAlC;;AAWA/B,sBAAsBgC,YAAtB,GAAqC;AACnChB,aAAW,IADwB;AAEnCb,kBAAgB,IAFmB;AAGnCc,SAAO,MAH4B;AAInCC,UAAQ,MAJ2B;AAKnCC,KAAG,CALgC;AAMnCC,KAAG;AANgC,CAArC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport EndIcon from '../../assets/images/End.svg';\n\nimport CircleButton from '../CircleButton';\n\nimport styles from './styles.scss';\n\nexport default function MultiCallAnswerButton(props) {\n  const Icon = props.isEndOtherCall ? EndIcon : HoldIcon;\n  const iconClassName = classnames(\n    styles.button,\n    props.isEndOtherCall ? styles.endButton : ''\n  );\n  const text = props.title.split('\\n').map((line, index) => (\n    <tspan dy={index ? '1.1em' : 0} x=\"250\" key={line}>\n      {line}\n    </tspan>\n  ));\n  return (\n    <svg\n      className={props.className}\n      viewBox=\"0 0 500 600\"\n      width={props.width}\n      height={props.height}\n      x={props.x}\n      y={props.y}\n    >\n      <CircleButton\n        width=\"200\"\n        height=\"200\"\n        x={60}\n        y={50}\n        className={iconClassName}\n        onClick={props.onClick}\n        icon={Icon}\n      />\n      <CircleButton\n        width=\"250\"\n        height=\"250\"\n        x={200}\n        y={110}\n        className={classnames(styles.button, styles.answer)}\n        showBorder={false}\n        onClick={props.onClick}\n        icon={AnswerIcon}\n      />\n      <text\n        className={styles.buttonTitle}\n        x=\"250\"\n        y=\"500\"\n        textAnchor=\"middle\"\n      >\n        {text}\n      </text>\n    </svg>\n  );\n}\n\nMultiCallAnswerButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  isEndOtherCall: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n};\n\nMultiCallAnswerButton.defaultProps = {\n  className: null,\n  isEndOtherCall: true,\n  width: '100%',\n  height: '100%',\n  x: 0,\n  y: 0,\n};\n"]}