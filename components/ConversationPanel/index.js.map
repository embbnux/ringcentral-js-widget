{"version":3,"sources":["components/ConversationPanel/index.js"],"names":["ConversationPanel","props","onSend","replyToReceivers","messageText","onInputHeightChange","value","setState","inputHeight","onSelectContact","idx","selected","showContactDisplayPlaceholder","parseInt","_userSelection","autoLog","logConversation","redirect","prefill","getSelectedContact","state","conversation","contactMatches","correspondentMatches","length","bind","getInitialContactIndex","isLogging","loaded","loadConversation","_mounted","nextProps","conversationMatches","prevProps","prevState","messages","readMessages","conversationId","perPage","loadPreviousMessages","unloadConversation","headerHeight","lastMatchedCorrespondentEntity","index","correspondentMatchId","id","findIndex","contact","correspondents","phoneNumber","extensionNumber","undefined","groupNumbers","map","correspondent","name","onLogConversation","correspondentEntity","conversationBody","loading","showSpinner","recipients","messageSubjectRenderer","styles","spinerContainer","currentLocale","getMessageListHeight","dateTimeFormatter","formatPhone","loadingNextPage","getGroupPhoneNumbers","getPhoneNumber","fallbackName","getFallbackContactName","extraButton","renderExtraButton","logButton","disableLinks","root","header","brand","contactDisplay","contactDisplaySelect","areaCode","countryCode","enableContactFallback","sourceIcons","showGroupNumberName","goBack","backButton","dynamicsFont","arrow","updateMessageText","sendButtonDisabled","inputExpandable","Component","propTypes","PropTypes","string","isRequired","func","ConversationMessageList","arrayOf","shape","bool","object","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nimport Spinner from '../Spinner';\nimport ConversationMessageList from '../ConversationMessageList';\nimport LogButton from '../LogButton';\nimport ContactDisplay from '../ContactDisplay';\nimport MessageInput from '../MessageInput';\n\nimport styles from './styles.scss';\n\nclass ConversationPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      inputHeight: 63,\n      loaded: false,\n    };\n    this._userSelection = false;\n  }\n\n  componentDidMount() {\n    this.loadConversation();\n    this._mounted = true;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      this.props.conversation &&\n      nextProps.conversation &&\n      (\n        nextProps.conversation.conversationMatches !==\n        this.props.conversation.conversationMatches ||\n        nextProps.conversation.correspondentMatches !==\n        this.props.conversation.correspondentMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.messages !== this.props.messages) {\n      this.props.readMessages(this.props.conversationId);\n    }\n    if (prevState.loaded === false && this.state.loaded === true) {\n      if (this.props.messages.length < this.props.perPage) {\n        this.props.loadPreviousMessages();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    this.props.unloadConversation();\n  }\n\n  onSend = () => {\n    this.props.replyToReceivers(this.props.messageText);\n  }\n\n  onInputHeightChange = (value) => {\n    this.setState({\n      inputHeight: value,\n    });\n  }\n\n  onSelectContact = (value, idx) => {\n    const selected = this.props.showContactDisplayPlaceholder\n      ? parseInt(idx, 10) - 1 : parseInt(idx, 10);\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (this.props.autoLog) {\n      this.logConversation({ redirect: false, selected, prefill: false });\n    }\n  }\n\n  getMessageListHeight() {\n    const headerHeight = 41;\n    return `calc(100% - ${this.state.inputHeight + headerHeight}px)`;\n  }\n\n  getSelectedContact = (selected = this.state.selected) => {\n    if (!this.props.conversation) {\n      return null;\n    }\n    const contactMatches = this.props.conversation.correspondentMatches;\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n\n  getInitialContactIndex(nextProps = this.props) {\n    const {\n      correspondentMatches,\n      lastMatchedCorrespondentEntity,\n      conversationMatches\n    } = nextProps.conversation;\n    let index = null;\n    const correspondentMatchId = (\n      lastMatchedCorrespondentEntity &&\n      lastMatchedCorrespondentEntity.id) ||\n      (conversationMatches[0] &&\n        conversationMatches[0].id);\n    if (correspondentMatchId) {\n      index = correspondentMatches.findIndex(contact => (\n        contact.id === correspondentMatchId\n      ));\n      if (index > -1) return index;\n    }\n    return -1;\n  }\n\n  getPhoneNumber() {\n    const {\n      conversation: {\n        correspondents = [],\n      } = {},\n    } = this.props;\n    return (correspondents.length === 1 &&\n      (correspondents[0].phoneNumber || correspondents[0].extensionNumber)) || undefined;\n  }\n\n  getGroupPhoneNumbers() {\n    const {\n      conversation: {\n        correspondents = [],\n      } = {},\n    } = this.props;\n    const groupNumbers = correspondents.length > 1 ?\n      correspondents.map(correspondent =>\n        correspondent.extensionNumber || correspondent.phoneNumber || undefined\n      )\n      : null;\n    return groupNumbers;\n  }\n\n  getFallbackContactName() {\n    const {\n      conversation: {\n        correspondents = [],\n      } = {},\n    } = this.props;\n    return (correspondents.length === 1 &&\n      (correspondents[0].name)) || undefined;\n  }\n\n  loadConversation() {\n    this.props.loadConversation(this.props.conversationId);\n    this.setState({ loaded: true });\n  }\n\n  async logConversation({ redirect = true, selected, prefill = true } = {}) {\n    if (typeof this.props.onLogConversation === 'function' &&\n      this._mounted && !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogConversation({\n        correspondentEntity: this.getSelectedContact(selected),\n        conversationId: this.props.conversation.conversationId,\n        redirect,\n        prefill,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n\n  logConversation = this.logConversation.bind(this)\n\n  render() {\n    if (!this.state.loaded) {\n      return null;\n    }\n    let conversationBody = null;\n    const loading = this.props.showSpinner;\n    const { recipients, messageSubjectRenderer } = this.props;\n    if (loading) {\n      conversationBody = (\n        <div className={styles.spinerContainer}>\n          <Spinner />\n        </div>\n      );\n    } else {\n      conversationBody = (\n        <ConversationMessageList\n          currentLocale={this.props.currentLocale}\n          height={this.getMessageListHeight()}\n          messages={this.props.messages}\n          className={styles.conversationBody}\n          dateTimeFormatter={this.props.dateTimeFormatter}\n          showSender={recipients && recipients.length > 1}\n          messageSubjectRenderer={messageSubjectRenderer}\n          formatPhone={this.props.formatPhone}\n          loadingNextPage={this.props.loadingNextPage}\n          loadPreviousMessages={this.props.loadPreviousMessages}\n        />\n      );\n    }\n    const {\n      isLogging,\n      conversationMatches,\n      correspondentMatches,\n    } = this.props.conversation;\n    const groupNumbers = this.getGroupPhoneNumbers();\n    const phoneNumber = this.getPhoneNumber();\n    const fallbackName = this.getFallbackContactName();\n    const extraButton = this.props.renderExtraButton ?\n      this.props.renderExtraButton(\n        this.props.conversation,\n        {\n          logConversation: this.logConversation,\n          isLogging: isLogging || this.state.isLogging,\n        }\n      ) : null;\n    const logButton = this.props.onLogConversation && !this.props.renderExtraButton ?\n      (\n        <LogButton\n          className={styles.logButton}\n          onLog={this.logConversation}\n          disableLinks={this.props.disableLinks}\n          isLogged={conversationMatches.length > 0}\n          isLogging={isLogging || this.state.isLogging}\n          currentLocale={this.props.currentLocale}\n        />\n      ) :\n      null;\n    return (\n      <div className={styles.root}>\n        <div className={styles.header}>\n          <ContactDisplay\n            brand={this.props.brand}\n            className={styles.contactDisplay}\n            selectClassName={styles.contactDisplaySelect}\n            contactMatches={correspondentMatches || []}\n            selected={this.state.selected}\n            onSelectContact={this.onSelectContact}\n            disabled={this.props.disableLinks}\n            isLogging={isLogging || this.state.isLogging}\n            fallBackName={fallbackName}\n            areaCode={this.props.areaCode}\n            countryCode={this.props.countryCode}\n            phoneNumber={phoneNumber}\n            groupNumbers={groupNumbers}\n            showType={false}\n            currentLocale={this.props.currentLocale}\n            enableContactFallback={this.props.enableContactFallback}\n            showPlaceholder={this.props.showContactDisplayPlaceholder}\n            sourceIcons={this.props.sourceIcons}\n            showGroupNumberName={this.props.showGroupNumberName}\n          />\n          <a\n            onClick={() => this.props.goBack()}\n            className={styles.backButton}\n          >\n            <span className={dynamicsFont.arrow} />\n          </a>\n          {extraButton && (\n            <div className={styles.logButton}>{extraButton}</div>\n          )}\n          {logButton}\n        </div>\n        {conversationBody}\n        <MessageInput\n          value={this.props.messageText}\n          onChange={this.props.updateMessageText}\n          disabled={this.props.sendButtonDisabled}\n          currentLocale={this.props.currentLocale}\n          onSend={this.onSend}\n          onHeightChange={this.onInputHeightChange}\n          inputExpandable={this.props.inputExpandable}\n        />\n      </div>\n    );\n  }\n}\n\nConversationPanel.propTypes = {\n  brand: PropTypes.string.isRequired,\n  replyToReceivers: PropTypes.func.isRequired,\n  messages: ConversationMessageList.propTypes.messages,\n  updateMessageText: PropTypes.func,\n  messageText: PropTypes.string,\n  recipients: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    extensionNumber: PropTypes.string,\n    name: PropTypes.string,\n  })).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n  disableLinks: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  onLogConversation: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showGroupNumberName: PropTypes.bool,\n  messageSubjectRenderer: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  readMessages: PropTypes.func.isRequired,\n  loadPreviousMessages: PropTypes.func.isRequired,\n  unloadConversation: PropTypes.func.isRequired,\n  perPage: PropTypes.number,\n  conversationId: PropTypes.string.isRequired,\n  loadConversation: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n  loadingNextPage: PropTypes.bool,\n  inputExpandable: PropTypes.bool,\n};\nConversationPanel.defaultProps = {\n  disableLinks: false,\n  onLogConversation: undefined,\n  autoLog: false,\n  enableContactFallback: undefined,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showGroupNumberName: false,\n  messageText: '',\n  updateMessageText: () => null,\n  messageSubjectRenderer: undefined,\n  perPage: undefined,\n  loadConversation: () => null,\n  renderExtraButton: undefined,\n  loadingNextPage: false,\n  inputExpandable: undefined,\n};\n\nexport default ConversationPanel;\n"]}