{"version":3,"sources":["components/ConversationPanel/index.js"],"names":["ConversationPanel","props","state","textValue","onTextChange","e","setState","currentTarget","value","handleSubmit","replyToReceivers","preventDefault","conversationBody","loading","showSpinner","spinerContainer","messages","recipients","header","backButton","icon_back","messageForm","getString","currentLocale","submitButton","sendButtonDisabled","propTypes","func","isRequired","bool","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;IAEMA,iB;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,4JACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,iBAAW;AADA,KAAb;AAGA,UAAKC,YAAL,GAAoB,UAACC,CAAD,EAAO;AACzB,YAAKC,QAAL,CAAc;AACZH,mBAAWE,EAAEE,aAAF,CAAgBC;AADf,OAAd;AAGD,KAJD;AAKA,UAAKC,YAAL,GAAoB,UAACJ,CAAD,EAAO;AACzB,YAAKJ,KAAL,CAAWS,gBAAX,CAA4B,MAAKR,KAAL,CAAWC,SAAvC;AACA,YAAKG,QAAL,CAAc;AACZH,mBAAW;AADC,OAAd;AAGAE,QAAEM,cAAF;AACD,KAND;AAViB;AAiBlB;;;;6BAEQ;AACP,UAAIC,mBAAmB,IAAvB;AACA,UAAMC,UAAU,KAAKZ,KAAL,CAAWa,WAA3B;AACA,UAAID,OAAJ,EAAa;AACXD,2BACE;AAAA;AAAA,YAAK,WAAW,iBAAOG,eAAvB;AACE;AADF,SADF;AAKD,OAND,MAMO;AACLH,2BACE;AACE,oBAAU,KAAKX,KAAL,CAAWe;AADvB,UADF;AAKD;AACD,UAAMC,aAAa,KAAKhB,KAAL,CAAWgB,UAA9B;AACA,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAK,WAAW,iBAAOC,MAAvB;AACE;AAAA;AAAA;AACE,kBAAI,WADN;AAEE,yBAAW,iBAAOC;AAFpB;AAIE,oDAAM,WAAW,iBAAOC,SAAxB;AAJF,WADF;AAOE;AACE,wBAAYH;AADd;AAPF,SADF;AAYGL,wBAZH;AAaE;AAAA;AAAA,YAAK,WAAW,iBAAOS,WAAvB;AACE;AAAA;AAAA,cAAM,UAAU,KAAKZ,YAArB;AACE;AACE,2BAAa,eAAKa,SAAL,CAAe,eAAf,EAAgC,KAAKrB,KAAL,CAAWsB,aAA3C,CADf;AAEE,qBAAO,KAAKrB,KAAL,CAAWC,SAFpB;AAGE,yBAAU,MAHZ;AAIE,wBAAU,KAAKC;AAJjB,cADF;AAOE;AACE,oBAAK,QADP;AAEE,qBAAO,eAAKkB,SAAL,CAAe,MAAf,EAAuB,KAAKrB,KAAL,CAAWsB,aAAlC,CAFT;AAGE,yBAAW,iBAAOC,YAHpB;AAIE,wBAAU,KAAKvB,KAAL,CAAWwB,kBAAX,IAAiCZ;AAJ7C;AAPF;AADF;AAbF,OADF;AAgCD;;;;;AAGHb,kBAAkB0B,SAAlB,GAA8B;AAC5BhB,oBAAkB,iBAAUiB,IAAV,CAAeC,UADL;AAE5BZ,YAAU,kCAAwBU,SAAxB,CAAkCV,QAFhB;AAG5BC,cAAY,2BAAiBS,SAAjB,CAA2BT,UAHX;AAI5BQ,sBAAoB,iBAAUI,IAAV,CAAeD,UAJP;AAK5BL,iBAAe,iBAAUO,MAAV,CAAiBF,UALJ;AAM5Bd,eAAa,iBAAUe,IAAV,CAAeD;AANA,CAA9B;;kBASe5B,iB","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { Link } from 'react-router';\n\nimport rcFont from '../../assets/RcFont/RcFont.scss';\n\nimport Spinner from '../Spinner';\nimport RecipientsHeader from '../RecipientsHeader';\nimport ConversationMessageList from '../ConversationMessageList';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nclass ConversationPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textValue: '',\n    };\n    this.onTextChange = (e) => {\n      this.setState({\n        textValue: e.currentTarget.value,\n      });\n    };\n    this.handleSubmit = (e) => {\n      this.props.replyToReceivers(this.state.textValue);\n      this.setState({\n        textValue: '',\n      });\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let conversationBody = null;\n    const loading = this.props.showSpinner;\n    if (loading) {\n      conversationBody = (\n        <div className={styles.spinerContainer}>\n          <Spinner />\n        </div>\n      );\n    } else {\n      conversationBody = (\n        <ConversationMessageList\n          messages={this.props.messages}\n        />\n      );\n    }\n    const recipients = this.props.recipients;\n    return (\n      <div>\n        <div className={styles.header}>\n          <Link\n            to={'/messages'}\n            className={styles.backButton}\n          >\n            <span className={rcFont.icon_back} />\n          </Link>\n          <RecipientsHeader\n            recipients={recipients}\n          />\n        </div>\n        {conversationBody}\n        <div className={styles.messageForm}>\n          <form onSubmit={this.handleSubmit}>\n            <textarea\n              placeholder={i18n.getString('typeAnyToSend', this.props.currentLocale)}\n              value={this.state.textValue}\n              maxLength=\"1000\"\n              onChange={this.onTextChange}\n            />\n            <input\n              type=\"submit\"\n              value={i18n.getString('send', this.props.currentLocale)}\n              className={styles.submitButton}\n              disabled={this.props.sendButtonDisabled || loading}\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationPanel.propTypes = {\n  replyToReceivers: PropTypes.func.isRequired,\n  messages: ConversationMessageList.propTypes.messages,\n  recipients: RecipientsHeader.propTypes.recipients,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool.isRequired,\n};\n\nexport default ConversationPanel;\n"]}