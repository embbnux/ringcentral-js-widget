{"version":3,"sources":["components/RecipientsHeader/index.js"],"names":["Recipient","props","recipient","onClick","name","propTypes","string","isRequired","func","RecipientList","recipients","className","map","receiver","extensionNumber","phoneNumber","getRecipientName","setDefaultRecipient","arrayOf","shape","RecipientsHeader","state","showDropdownList","toggleDropdown","setState","preState","context","changeDefaultRecipient","length","dropdownClass","dropdownList","dropdownArrowClass","arrow","dropdownIcon","container","currentLocale","defaultRecipient","active","dropdownActiveIcon","contextTypes"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\n\nimport RecipientHeader from '../RecipientHeader';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nimport styles from './styles.scss';\n\nfunction Recipient(props) {\n  return (\n    <a href=\"#recipient\" className={styles.recipient} onClick={props.onClick}>\n      {props.name}\n    </a>\n  );\n}\n\nRecipient.propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nfunction RecipientList(props) {\n  const recipients = props.recipients;\n  return (\n    <div className={props.className}>\n      {\n        recipients.map(receiver => (\n          <Recipient\n            key={`${receiver.extensionNumber}${receiver.phoneNumber}${receiver.name}`}\n            name={props.getRecipientName(receiver)}\n            onClick={\n              () => props.setDefaultRecipient(\n                receiver.extensionNumber || receiver.phoneNumber\n              )\n            }\n          />\n        ))\n      }\n    </div>\n  );\n}\n\nRecipientList.propTypes = {\n  getRecipientName: PropTypes.func.isRequired,\n  setDefaultRecipient: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n  recipients: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string,\n    extensionNumber: PropTypes.string,\n    name: PropTypes.string,\n  })).isRequired,\n};\n\nclass RecipientsHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDropdownList: false,\n    };\n    this.toggleDropdown = () => {\n      this.setState(preState => ({\n        showDropdownList: !preState.showDropdownList,\n      }));\n    };\n    this.setDefaultRecipient = (phoneNumber) => {\n      this.context.changeDefaultRecipient(phoneNumber);\n      this.setState(preState => ({\n        showDropdownList: !preState.showDropdownList,\n      }));\n    };\n  }\n\n  render() {\n    const recipients = this.props.recipients;\n    if (recipients.length === 0) {\n      return null;\n    }\n    let dropdownClass = styles.dropdownList;\n    let dropdownArrowClass = classnames(dynamicsFont.arrow, styles.dropdownIcon);\n    if (recipients.length === 1) {\n      return (\n        <h1 className={styles.container}>\n          <RecipientHeader\n            recipient={recipients[0]}\n            currentLocale={this.props.currentLocale}\n            dropdownClassName={dropdownClass}\n          />\n        </h1>\n      );\n    }\n    const defaultRecipient = recipients[0];\n    if (this.state.showDropdownList) {\n      dropdownClass = classnames(dropdownClass, styles.active);\n      dropdownArrowClass = classnames(dynamicsFont.arrow, styles.dropdownActiveIcon);\n    }\n    return (\n      <h1 className={styles.container}>\n        <Recipient\n          name={this.context.getRecipientName(defaultRecipient)}\n          onClick={this.toggleDropdown}\n        />\n        <i\n          className={dropdownArrowClass}\n          onClick={this.toggleDropdown}\n        />\n        <RecipientList\n          recipients={recipients}\n          className={dropdownClass}\n          setDefaultRecipient={this.setDefaultRecipient}\n          getRecipientName={this.context.getRecipientName}\n        />\n      </h1>\n    );\n  }\n}\n\nRecipientsHeader.propTypes = {\n  recipients: RecipientList.propTypes.recipients,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nRecipientsHeader.contextTypes = {\n  getRecipientName: PropTypes.func.isRequired,\n  changeDefaultRecipient: PropTypes.func.isRequired,\n};\n\nexport default RecipientsHeader;\n"]}