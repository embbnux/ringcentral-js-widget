{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","contactItem","onClick","name","spliter","label","getString","entityType","phoneNumberSection","formatContactPhone","phoneNumber","phoneType","propTypes","func","isRequired","string","ContactDropdownList","items","listClassName","hiddenClassName","length","visibility","hidden","dropdownList","className","map","item","addToRecipients","bool","arrayOf","shape","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypes from '../../lib/phoneTypes';\n\nfunction ContactItem(props) {\n  return (\n    <li className={styles.contactItem}>\n      <a href=\"#select-contact-item\" onClick={props.onClick}>\n        <div>\n          <span className={styles.name}>\n            {props.name}\n          </span>\n          <span className={styles.spliter}>|</span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneSource.${props.entityType}`)}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection}>\n          <span>\n            {props.formatContactPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.spliter}>|</span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneType.${props.phoneType}`)}\n          </span>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n};\n\nfunction ContactDropdownList(props) {\n  const items = props.items;\n  let listClassName = null;\n  let hiddenClassName = null;\n  if (items.length === 0 || !props.visibility) {\n    hiddenClassName = styles.hidden;\n  }\n  listClassName = classnames(styles.dropdownList, props.className, hiddenClassName);\n  return (\n    <ul className={listClassName}>\n      {\n        items.map(item => (\n          <ContactItem\n            name={item.name}\n            entityType={item.entityType}\n            phoneType={item.phoneType}\n            phoneNumber={item.phoneNumber}\n            formatContactPhone={props.formatContactPhone}\n            onClick={() => props.addToRecipients({\n              name: item.name,\n              phoneNumber: item.phoneNumber,\n            })}\n            key={JSON.stringify(item)}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nContactDropdownList.propTypes = {\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n};\n\nexport default ContactDropdownList;\n"]}