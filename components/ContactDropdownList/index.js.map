{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","className","contactItem","active","spliter","nameTitle","name","getString","entityType","phoneNumberTitle","formatContactPhone","phoneNumber","phoneType","onHover","onClick","nameSection","titleEnabled","label","phoneNumberSection","propTypes","func","isRequired","string","bool","defaultProps","undefined","ContactDropdownList","nextProps","visibility","scrollDirection","selectedIndex","items","length","node","scrollTop","Math","floor","listClassName","hiddenClassName","hidden","dropdownList","c","map","item","index","setSelectedIndex","addToRecipients","arrayOf","shape","number"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypes from '../../lib/phoneTypes';\n\nfunction ContactItem(props) {\n  const className = classnames(\n    styles.contactItem,\n    props.active ? styles.active : null,\n  );\n  const spliter = '|';\n  const nameTitle = `${props.name} ${spliter} `\n    + `${phoneTypes.getString(`phoneSource.${props.entityType}`)}`;\n  const phoneNumberTitle = `${props.formatContactPhone(props.phoneNumber)} ${spliter} `\n    + `${props.phoneType === 'unknown' ?\n    phoneTypes.getString(`phoneType.${props.phoneType}`) : props.phoneType}`;\n\n  return (\n    <li className={className} onMouseOver={props.onHover}>\n      <a href=\"#select-contact-item\" onClick={props.onClick}>\n        <div className={styles.nameSection} title={props.titleEnabled && nameTitle}>\n          <span className={styles.name}>\n            {props.name}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneSource.${props.entityType}`)}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection} title={props.titleEnabled && phoneNumberTitle}>\n          <span>\n            {props.formatContactPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.spliter}>{spliter}</span>\n          <span className={styles.label}>\n            { props.phoneType === 'unknown' ?\n              phoneTypes.getString(`phoneType.${props.phoneType}`) : props.phoneType }\n          </span>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onHover: PropTypes.func.isRequired,\n  titleEnabled: PropTypes.bool,\n};\nContactItem.defaultProps = {\n  titleEnabled: undefined,\n};\n\nclass ContactDropdownList extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.visibility) {\n      if (nextProps.scrollDirection === 'ArrowDown') {\n        if (nextProps.selectedIndex < nextProps.items.length) {\n          if (nextProps.selectedIndex > 4) {\n            this.node.scrollTop += 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n      if (nextProps.scrollDirection === 'ArrowUp') {\n        if (nextProps.selectedIndex > -1) {\n          if (nextProps.selectedIndex < nextProps.items.length - 4) {\n            this.node.scrollTop -= 53;\n            this.node.scrollTop = Math.floor(this.node.scrollTop / 53) * 53;\n          }\n        }\n      }\n    }\n  }\n  render() {\n    const props = this.props;\n    const items = props.items;\n    let listClassName = null;\n    let hiddenClassName = null;\n    if (items.length === 0) {\n      hiddenClassName = styles.hidden;\n    }\n    listClassName = classnames(styles.dropdownList, props.className, hiddenClassName);\n\n    return (\n      <ul className={listClassName} ref={(c) => { this.node = c; }}>\n        {\n          items.map((item, index) => (\n            <ContactItem\n              active={props.selectedIndex === index}\n              name={item.name}\n              entityType={item.entityType}\n              phoneType={item.phoneType}\n              phoneNumber={item.phoneNumber}\n              formatContactPhone={props.formatContactPhone}\n              onHover={() => props.setSelectedIndex(index)}\n              onClick={() => props.addToRecipients({\n                name: item.name,\n                phoneNumber: item.phoneNumber,\n              })}\n              key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n              titleEnabled={props.titleEnabled}\n            />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nContactDropdownList.propTypes = {\n  scrollDirection: PropTypes.string,\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  setSelectedIndex: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n  titleEnabled: PropTypes.bool,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n  scrollDirection: null,\n  titleEnabled: undefined,\n};\n\nexport default ContactDropdownList;\n"]}