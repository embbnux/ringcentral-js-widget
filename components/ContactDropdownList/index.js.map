{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","className","contactItem","active","onHover","onClick","name","spliter","label","getString","entityType","phoneNumberSection","formatContactPhone","phoneNumber","phoneType","propTypes","func","isRequired","string","bool","ContactDropdownList","items","listClassName","hiddenClassName","length","visibility","hidden","dropdownList","map","item","index","selectedIndex","setSelectedIndex","addToRecipients","arrayOf","shape","number","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,MAAMC,YAAY,0BAChB,iBAAOC,WADS,EAEhBF,MAAMG,MAAN,GAAe,iBAAOA,MAAtB,GAA+B,IAFf,CAAlB;AAIA,SACE;AAAA;AAAA,MAAI,WAAWF,SAAf,EAA0B,aAAaD,MAAMI,OAA7C;AACE;AAAA;AAAA,QAAG,MAAK,sBAAR,EAA+B,SAASJ,MAAMK,OAA9C;AACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAM,WAAW,iBAAOC,IAAxB;AACGN,gBAAMM;AADT,SADF;AAIE;AAAA;AAAA,YAAM,WAAW,iBAAOC,OAAxB;AAAA;AAAA,SAJF;AAKE;AAAA;AAAA,YAAM,WAAW,iBAAOC,KAAxB;AACG,+BAAWC,SAAX,kBAAoCT,MAAMU,UAA1C;AADH;AALF,OADF;AAUE;AAAA;AAAA,UAAK,WAAW,iBAAOC,kBAAvB;AACE;AAAA;AAAA;AACGX,gBAAMY,kBAAN,CAAyBZ,MAAMa,WAA/B;AADH,SADF;AAIE;AAAA;AAAA,YAAM,WAAW,iBAAON,OAAxB;AAAA;AAAA,SAJF;AAKE;AAAA;AAAA,YAAM,WAAW,iBAAOC,KAAxB;AACIR,gBAAMc,SAAN,KAAoB,SAApB,GACA,qBAAWL,SAAX,gBAAkCT,MAAMc,SAAxC,CADA,GACuDd,MAAMc;AAFjE;AALF;AAVF;AADF,GADF;AAyBD;;AAEDf,YAAYgB,SAAZ,GAAwB;AACtBV,WAAS,iBAAUW,IAAV,CAAeC,UADF;AAEtBL,sBAAoB,iBAAUI,IAAV,CAAeC,UAFb;AAGtBX,QAAM,iBAAUY,MAAV,CAAiBD,UAHD;AAItBP,cAAY,iBAAUQ,MAAV,CAAiBD,UAJP;AAKtBH,aAAW,iBAAUI,MAAV,CAAiBD,UALN;AAMtBJ,eAAa,iBAAUK,MAAV,CAAiBD,UANR;AAOtBd,UAAQ,iBAAUgB,IAAV,CAAeF,UAPD;AAQtBb,WAAS,iBAAUY,IAAV,CAAeC;AARF,CAAxB;;AAWA,SAASG,mBAAT,CAA6BpB,KAA7B,EAAoC;AAClC,MAAMqB,QAAQrB,MAAMqB,KAApB;AACA,MAAIC,gBAAgB,IAApB;AACA,MAAIC,kBAAkB,IAAtB;AACA,MAAIF,MAAMG,MAAN,KAAiB,CAAjB,IAAsB,CAACxB,MAAMyB,UAAjC,EAA6C;AAC3CF,sBAAkB,iBAAOG,MAAzB;AACD;AACDJ,kBAAgB,0BAAW,iBAAOK,YAAlB,EAAgC3B,MAAMC,SAAtC,EAAiDsB,eAAjD,CAAhB;AACA,SACE;AAAA;AAAA,MAAI,WAAWD,aAAf;AAEID,UAAMO,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,aACR,8BAAC,WAAD;AACE,gBAAQ9B,MAAM+B,aAAN,KAAwBD,KADlC;AAEE,cAAMD,KAAKvB,IAFb;AAGE,oBAAYuB,KAAKnB,UAHnB;AAIE,mBAAWmB,KAAKf,SAJlB;AAKE,qBAAae,KAAKhB,WALpB;AAME,4BAAoBb,MAAMY,kBAN5B;AAOE,iBAAS;AAAA,iBAAMZ,MAAMgC,gBAAN,CAAuBF,KAAvB,CAAN;AAAA,SAPX;AAQE,iBAAS;AAAA,iBAAM9B,MAAMiC,eAAN,CAAsB;AACnC3B,kBAAMuB,KAAKvB,IADwB;AAEnCO,yBAAagB,KAAKhB;AAFiB,WAAtB,CAAN;AAAA;AAIT;AAZF,UAaE,UAAQiB,KAAR,GAAgBD,KAAKhB,WAArB,GAAmCgB,KAAKvB,IAAxC,GAA+CuB,KAAKf;AAbtD,QADQ;AAAA,KAAV;AAFJ,GADF;AAuBD;;AAEDM,oBAAoBL,SAApB,GAAgC;AAC9BU,cAAY,iBAAUN,IAAV,CAAeF,UADG;AAE9BhB,aAAW,iBAAUiB,MAFS;AAG9BG,SAAO,iBAAUa,OAAV,CAAkB,iBAAUC,KAAV,CAAgB;AACvC7B,UAAM,iBAAUY,MAAV,CAAiBD,UADgB;AAEvCP,gBAAY,iBAAUQ,MAAV,CAAiBD,UAFU;AAGvCH,eAAW,iBAAUI,MAAV,CAAiBD,UAHW;AAIvCJ,iBAAa,iBAAUK,MAAV,CAAiBD;AAJS,GAAhB,CAAlB,EAKHA,UAR0B;AAS9BL,sBAAoB,iBAAUI,IAAV,CAAeC,UATL;AAU9BgB,mBAAiB,iBAAUjB,IAAV,CAAeC,UAVF;AAW9Be,oBAAkB,iBAAUhB,IAAV,CAAeC,UAXH;AAY9Bc,iBAAe,iBAAUK,MAAV,CAAiBnB;AAZF,CAAhC;;AAeAG,oBAAoBiB,YAApB,GAAmC;AACjCpC,aAAW;AADsB,CAAnC;;kBAIemB,mB","file":"index.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypes from '../../lib/phoneTypes';\n\nfunction ContactItem(props) {\n  const className = classnames(\n    styles.contactItem,\n    props.active ? styles.active : null,\n  );\n  return (\n    <li className={className} onMouseOver={props.onHover}>\n      <a href=\"#select-contact-item\" onClick={props.onClick}>\n        <div>\n          <span className={styles.name}>\n            {props.name}\n          </span>\n          <span className={styles.spliter}>|</span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneSource.${props.entityType}`)}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection}>\n          <span>\n            {props.formatContactPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.spliter}>|</span>\n          <span className={styles.label}>\n            { props.phoneType === 'unknown' ?\n              phoneTypes.getString(`phoneType.${props.phoneType}`) : props.phoneType }\n          </span>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  onHover: PropTypes.func.isRequired,\n};\n\nfunction ContactDropdownList(props) {\n  const items = props.items;\n  let listClassName = null;\n  let hiddenClassName = null;\n  if (items.length === 0 || !props.visibility) {\n    hiddenClassName = styles.hidden;\n  }\n  listClassName = classnames(styles.dropdownList, props.className, hiddenClassName);\n  return (\n    <ul className={listClassName}>\n      {\n        items.map((item, index) => (\n          <ContactItem\n            active={props.selectedIndex === index}\n            name={item.name}\n            entityType={item.entityType}\n            phoneType={item.phoneType}\n            phoneNumber={item.phoneNumber}\n            formatContactPhone={props.formatContactPhone}\n            onHover={() => props.setSelectedIndex(index)}\n            onClick={() => props.addToRecipients({\n              name: item.name,\n              phoneNumber: item.phoneNumber,\n            })}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${index}${item.phoneNumber}${item.name}${item.phoneType}`}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nContactDropdownList.propTypes = {\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n  setSelectedIndex: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number.isRequired,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n};\n\nexport default ContactDropdownList;\n"]}