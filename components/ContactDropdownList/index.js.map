{"version":3,"sources":["components/ContactDropdownList/index.js"],"names":["ContactItem","props","onClick","name","label","getString","entityType","phoneNumberSection","formatPhone","phoneNumber","phoneType","propTypes","func","isRequired","string","ContactDropdownList","items","listClassName","hiddenClassName","length","visibility","hidden","dropdownList","className","map","item","addToRecipients","bool","arrayOf","shape","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SACE;AAAA;AAAA;AAEE;AAAA;AAAA,QAAG,MAAK,sBAAR,EAA+B,SAASA,MAAMC,OAA9C;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACGD,gBAAME;AADT,SADF;AAIE;AAAA;AAAA,YAAM,WAAW,iBAAOC,KAAxB;AACG,+BAAWC,SAAX,kBAAoCJ,MAAMK,UAA1C;AADH;AAJF,OADF;AASE;AAAA;AAAA,UAAK,WAAW,iBAAOC,kBAAvB;AACE;AAAA;AAAA;AACGN,gBAAMO,WAAN,CAAkBP,MAAMQ,WAAxB;AADH,SADF;AAIE;AAAA;AAAA,YAAM,WAAW,iBAAOL,KAAxB;AACG,+BAAWC,SAAX,gBAAkCJ,MAAMS,SAAxC;AADH;AAJF;AATF;AAFF,GADF;AAuBD;;AAEDV,YAAYW,SAAZ,GAAwB;AACtBT,WAAS,iBAAUU,IAAV,CAAeC,UADF;AAEtBL,eAAa,iBAAUI,IAAV,CAAeC,UAFN;AAGtBV,QAAM,iBAAUW,MAAV,CAAiBD,UAHD;AAItBP,cAAY,iBAAUQ,MAAV,CAAiBD,UAJP;AAKtBH,aAAW,iBAAUI,MAAV,CAAiBD,UALN;AAMtBJ,eAAa,iBAAUK,MAAV,CAAiBD;AANR,CAAxB;;AASA,SAASE,mBAAT,CAA6Bd,KAA7B,EAAoC;AAClC,MAAMe,QAAQf,MAAMe,KAApB;AACA,MAAIC,gBAAgB,IAApB;AACA,MAAIC,kBAAkB,IAAtB;AACA,MAAIF,MAAMG,MAAN,KAAiB,CAAjB,IAAsB,CAAClB,MAAMmB,UAAjC,EAA6C;AAC3CF,sBAAkB,iBAAOG,MAAzB;AACD;AACDJ,kBAAgB,0BAAW,iBAAOK,YAAlB,EAAgCrB,MAAMsB,SAAtC,EAAiDL,eAAjD,CAAhB;AACA,SACE;AAAA;AAAA,MAAI,WAAWD,aAAf;AAEID,UAAMQ,GAAN,CAAU;AAAA,aACR,8BAAC,WAAD;AACE,cAAMC,KAAKtB,IADb;AAEE,oBAAYsB,KAAKnB,UAFnB;AAGE,mBAAWmB,KAAKf,SAHlB;AAIE,qBAAae,KAAKhB,WAJpB;AAKE,qBAAaR,MAAMO,WALrB;AAME,iBAAS;AAAA,iBAAMP,MAAMyB,eAAN,CAAsB;AACnCvB,kBAAMsB,KAAKtB,IADwB;AAEnCM,yBAAagB,KAAKhB;AAFiB,WAAtB,CAAN;AAAA,SANX;AAUE,aAAK,yBAAegB,IAAf;AAVP,QADQ;AAAA,KAAV;AAFJ,GADF;AAoBD;;AAEDV,oBAAoBJ,SAApB,GAAgC;AAC9BS,cAAY,iBAAUO,IAAV,CAAed,UADG;AAE9BU,aAAW,iBAAUT,MAFS;AAG9BE,SAAO,iBAAUY,OAAV,CAAkB,iBAAUC,KAAV,CAAgB;AACvC1B,UAAM,iBAAUW,MAAV,CAAiBD,UADgB;AAEvCP,gBAAY,iBAAUQ,MAAV,CAAiBD,UAFU;AAGvCH,eAAW,iBAAUI,MAAV,CAAiBD,UAHW;AAIvCJ,iBAAa,iBAAUK,MAAV,CAAiBD;AAJS,GAAhB,CAAlB,EAKHA,UAR0B;AAS9BL,eAAa,iBAAUI,IAAV,CAAeC,UATE;AAU9Ba,mBAAiB,iBAAUd,IAAV,CAAeC;AAVF,CAAhC;;AAaAE,oBAAoBe,YAApB,GAAmC;AACjCP,aAAW;AADsB,CAAnC;;kBAIeR,mB","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nimport phoneTypes from '../../lib/phoneTypes';\n\nfunction ContactItem(props) {\n  return (\n    <li\n    >\n      <a href=\"#select-contact-item\" onClick={props.onClick}>\n        <div>\n          <span>\n            {props.name}\n          </span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneSource.${props.entityType}`)}\n          </span>\n        </div>\n        <div className={styles.phoneNumberSection}>\n          <span>\n            {props.formatPhone(props.phoneNumber)}\n          </span>\n          <span className={styles.label}>\n            {phoneTypes.getString(`phoneType.${props.phoneType}`)}\n          </span>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n};\n\nfunction ContactDropdownList(props) {\n  const items = props.items;\n  let listClassName = null;\n  let hiddenClassName = null;\n  if (items.length === 0 || !props.visibility) {\n    hiddenClassName = styles.hidden;\n  }\n  listClassName = classnames(styles.dropdownList, props.className, hiddenClassName);\n  return (\n    <ul className={listClassName}>\n      {\n        items.map(item => (\n          <ContactItem\n            name={item.name}\n            entityType={item.entityType}\n            phoneType={item.phoneType}\n            phoneNumber={item.phoneNumber}\n            formatPhone={props.formatPhone}\n            onClick={() => props.addToRecipients({\n              name: item.name,\n              phoneNumber: item.phoneNumber,\n            })}\n            key={JSON.stringify(item)}\n          />\n        ))\n      }\n    </ul>\n  );\n}\n\nContactDropdownList.propTypes = {\n  visibility: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  addToRecipients: PropTypes.func.isRequired,\n};\n\nContactDropdownList.defaultProps = {\n  className: null,\n};\n\nexport default ContactDropdownList;\n"]}