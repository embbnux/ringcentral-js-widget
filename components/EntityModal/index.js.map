{"version":3,"sources":["components/EntityModal/index.js"],"names":["EntityModal","props","state","selected","entities","onCancel","onCreate","onRadioChange","e","setState","target","value","show","currentLocale","getString","map","entityType","idx","radio","propTypes","className","string","bool","func","isRequired","array","defaultProps","children","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEqBA,W;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,gJACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa;AACXC,gBAAUF,MAAMG,QAAN,CAAe,CAAf;AADC,KAAb;;AAIA,UAAKC,QAAL,GAAgB,YAAM;AACpB,UAAI,OAAO,MAAKJ,KAAL,CAAWI,QAAlB,KAA+B,UAAnC,EAA+C;AAC7C,cAAKJ,KAAL,CAAWI,QAAX;AACD;AACF,KAJD;AAKA,UAAKC,QAAL,GAAgB,YAAM;AACpB,UAAI,OAAO,MAAKL,KAAL,CAAWK,QAAlB,KAA+B,UAAnC,EAA+C;AAC7C,cAAKL,KAAL,CAAWK,QAAX,CAAoB,MAAKJ,KAAL,CAAWC,QAA/B;AACD;AACF,KAJD;AAKA,UAAKI,aAAL,GAAqB,UAACC,CAAD,EAAO;AAC1B,YAAKC,QAAL,CAAc;AACZN,kBAAUK,EAAEE,MAAF,CAASC;AADP,OAAd;AAGD,KAJD;AAjBiB;AAsBlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BACS;AAAA;;AAAA,mBACmC,KAAKV,KADxC;AAAA,UACCG,QADD,UACCA,QADD;AAAA,UACWQ,IADX,UACWA,IADX;AAAA,UACiBC,aADjB,UACiBA,aADjB;;AAEP,aACE;AAAA;AAAA;AACE,gBAAMD,IADR;AAEE,iBAAO,eAAKE,SAAL,CAAe,cAAf,EAA+BD,aAA/B,CAFT;AAGE,qBAAW,KAAKP,QAHlB;AAIE,oBAAU,KAAKD,QAJjB;AAKE,uBAAa,eAAKS,SAAL,CAAe,QAAf,EAAyBD,aAAzB,CALf;AAME,yBAAeA,aANjB;AAOE,+BAPF;AAQGT,iBAASW,GAAT,CAAa,UAACC,UAAD,EAAaC,GAAb;AAAA,iBACZ;AAAA;AAAA,cAAK,WAAW,iBAAOC,KAAvB,EAA8B,KAAKD,GAAnC;AACE;AAAA;AAAA;AACE;AACE,sBAAK,OADP;AAEE,uBAAOD,UAFT;AAGE,yBAASA,eAAe,OAAKd,KAAL,CAAWC,QAHrC;AAIE,0BAAU,OAAKI;AAJjB,gBADF;AAOG,6BAAKO,SAAL,MAAkBE,UAAlB,EAAgCH,aAAhC;AAPH;AADF,WADY;AAAA,SAAb;AARH,OADF;AAwBD;;;;;kBAzDkBb,W;;AA2DrBA,YAAYmB,SAAZ,GAAwB;AACtBC,aAAW,iBAAUC,MADC;AAEtBT,QAAM,iBAAUU,IAFM;AAGtBhB,YAAU,iBAAUiB,IAAV,CAAeC,UAHH;AAItBnB,YAAU,iBAAUkB,IAAV,CAAeC,UAJH;AAKtBpB,YAAU,iBAAUqB,KALE;AAMtBZ,iBAAe,iBAAUQ,MAAV,CAAiBG;AANV,CAAxB;AAQAxB,YAAY0B,YAAZ,GAA2B;AACzBN,aAAW,EADc;AAEzBO,YAAUC,SAFe;AAGzBhB,QAAM,KAHmB;AAIzBR,YAAU,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB;AAJe,CAA3B","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport Modal from '../Modal';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nexport default class EntityModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.entities[0],\n    };\n\n    this.onCancel = () => {\n      if (typeof this.props.onCancel === 'function') {\n        this.props.onCancel();\n      }\n    };\n    this.onCreate = () => {\n      if (typeof this.props.onCreate === 'function') {\n        this.props.onCreate(this.state.selected);\n      }\n    };\n    this.onRadioChange = (e) => {\n      this.setState({\n        selected: e.target.value\n      });\n    };\n  }\n  // componentWillReceiveProps(nextProps) {\n  //   // if (this.props.show !== nextProps.show) {\n  //   this.setState({\n  //     show: nextProps.show\n  //   });\n  //   // }\n  // }\n  render() {\n    const { entities, show, currentLocale } = this.props;\n    return (\n      <Modal\n        show={show}\n        title={i18n.getString('chooseEntity', currentLocale)}\n        onConfirm={this.onCreate}\n        onCancel={this.onCancel}\n        textConfirm={i18n.getString('create', currentLocale)}\n        currentLocale={currentLocale}\n        clickOutToClose>\n        {entities.map((entityType, idx) =>\n          <div className={styles.radio} key={idx}>\n            <label>\n              <input\n                type=\"radio\"\n                value={entityType}\n                checked={entityType === this.state.selected}\n                onChange={this.onRadioChange}\n              />\n              {i18n.getString(`${entityType}`, currentLocale)}\n            </label>\n          </div>\n        )}\n      </Modal>\n    );\n  }\n}\nEntityModal.propTypes = {\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  onCreate: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  entities: PropTypes.array,\n  currentLocale: PropTypes.string.isRequired,\n};\nEntityModal.defaultProps = {\n  className: '',\n  children: undefined,\n  show: false,\n  entities: ['account', 'lead', 'contact'],\n};\n\n"]}