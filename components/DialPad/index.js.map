{"version":3,"sources":["components/DialPad/index.js"],"names":["DialPad","keyConfig","value","text","dx","alternativeValue","className","hideSpecial","onButtonPress","onButtonOutput","alternativeTimeout","dialButtonVolume","dialButtonMuted","styles","root","map","row","rowIdx","btn","btnPlaceholder","propTypes","PropTypes","string","bool","func","number","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport DialButton from '../DialButton';\nimport styles from './styles.scss';\n\nconst keyConfig = [\n  [{ value: '1', text: '' }, { value: '2', text: 'ABC', dx: '175' }, { value: '3', text: 'DEF', dx: '180' }],\n  [{ value: '4', text: 'GHI', dx: '175' }, { value: '5', text: 'JKL', dx: '180' }, { value: '6', text: 'MNO', dx: '155' }],\n  [{ value: '7', text: 'PQRS', dx: '140' }, { value: '8', text: 'TUV', dx: '175' }, { value: '9', text: 'WXYZ', dx: '140' }],\n  [\n    { value: '*', text: '' },\n    {\n      value: '0', text: '+', alternativeValue: '+', dx: '220'\n    },\n    { value: '#', text: '' },\n  ],\n];\n\nexport default function DialPad({\n  className,\n  hideSpecial,\n  onButtonPress,\n  onButtonOutput,\n  alternativeTimeout,\n  dialButtonVolume,\n  dialButtonMuted,\n}) {\n  return (\n    <div className={classnames(styles.root, className)}>\n      {keyConfig.map((row, rowIdx) => (\n        <div key={rowIdx} className={styles.row}>\n          {row.map((btn) => {\n            if (hideSpecial && (btn.value === '*' || btn.value === '#')) {\n              return (\n                <div key={btn.value} className={styles.btnPlaceholder} />\n              );\n            }\n            return (\n              <DialButton\n                key={btn.value}\n                btn={btn}\n                className={styles.btnPlaceholder}\n                onPress={onButtonPress}\n                onOutput={onButtonOutput}\n                alternativeTimeout={alternativeTimeout}\n                volume={dialButtonVolume}\n                muted={dialButtonMuted}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nDialPad.propTypes = {\n  className: PropTypes.string,\n  hideSpecial: PropTypes.bool,\n  onButtonPress: PropTypes.func,\n  onButtonOutput: PropTypes.func,\n  alternativeTimeout: PropTypes.number,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n};\n\nDialPad.defaultProps = {\n  className: undefined,\n  hideSpecial: false,\n  onButtonPress: undefined,\n  onButtonOutput: undefined,\n  alternativeTimeout: undefined,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n};\n"]}