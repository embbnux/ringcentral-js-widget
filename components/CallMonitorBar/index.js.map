{"version":3,"sources":["components/CallMonitorBar/index.js"],"names":["CallInfoBar","label","onClick","currentLocale","shouldDisplayViewCallsBtn","styles","bar","currentCallInfo","viewCallsBtn","i18n","getString","propTypes","PropTypes","string","func","bool","defaultProps","undefined","CallMonitorBar","props","state","hoverBar","showBtn","currentCalls","length","setState","hideBtn","ringingCalls","onHoldCalls","onCurrentCallBtnClick","onViewCallBtnClick","shouldDisplayCurrentCallBtn","numberOfIncomingCalls","numberOfOnHoldCalls","box","numberOf","duration","startTime","currentCallBtn","Component","array","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatMessage from 'format-message';\nimport classnames from 'classnames';\n\nimport DurationCounter from '../DurationCounter';\nimport Button from '../Button';\nimport CarrouselBar from '../CarrouselBar';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nexport function CallInfoBar({\n  label,\n  onClick,\n  currentLocale,\n  shouldDisplayViewCallsBtn\n}) {\n  return (\n    <div className={styles.bar}>\n      <div className={styles.currentCallInfo} onClick={onClick}>\n        {label}\n      </div>\n      {\n        shouldDisplayViewCallsBtn ?\n          <Button\n            className={styles.viewCallsBtn}\n            onClick={onClick}\n          >\n            {i18n.getString('viewCalls', currentLocale)}\n          </Button>\n          : null\n      }\n    </div>\n  );\n}\nCallInfoBar.propTypes = {\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  currentLocale: PropTypes.string,\n  shouldDisplayViewCallsBtn: PropTypes.bool,\n};\nCallInfoBar.defaultProps = {\n  label: '',\n  onClick: undefined,\n  currentLocale: '',\n  shouldDisplayViewCallsBtn: false\n};\n\nexport default class CallMonitorBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hoverBar: false\n    };\n    this.showBtn = () => {\n      if (this.props.currentCalls.length > 0) {\n        this.setState({\n          hoverBar: true\n        });\n      }\n    };\n    this.hideBtn = () => {\n      this.setState({\n        hoverBar: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      ringingCalls,\n      onHoldCalls,\n      currentCalls,\n      currentLocale,\n      onCurrentCallBtnClick,\n      onViewCallBtnClick,\n      shouldDisplayCurrentCallBtn,\n      shouldDisplayViewCallsBtn\n    } = this.props;\n\n    const numberOfIncomingCalls = ringingCalls.length;\n    const numberOfOnHoldCalls = onHoldCalls.length;\n\n    return (\n      <div className={styles.bar} onMouseOver={this.showBtn} onMouseLeave={this.hideBtn}>\n        <div className={styles.box}>\n          <CarrouselBar hoverBar={this.state.hoverBar} >\n            {\n              numberOfOnHoldCalls > 0 ? (\n                <CallInfoBar\n                  label={\n                    numberOfOnHoldCalls === 1 ?\n                      formatMessage(i18n.getString('callOnHold', currentLocale), { numberOf: numberOfOnHoldCalls }) :\n                      formatMessage(i18n.getString('callsOnHold', currentLocale), { numberOf: numberOfOnHoldCalls })\n                  }\n                  currentLocale={currentLocale}\n                  onClick={onViewCallBtnClick}\n                  shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n                />\n              ) : null\n            }\n            {\n              numberOfIncomingCalls > 0 ? (\n                <CallInfoBar\n                  label={\n                    numberOfIncomingCalls === 1 ?\n                      formatMessage(i18n.getString('incomingCall', currentLocale), { numberOf: numberOfIncomingCalls }) :\n                      formatMessage(i18n.getString('incomingCalls', currentLocale), { numberOf: numberOfIncomingCalls })\n                  }\n                  currentLocale={currentLocale}\n                  onClick={onViewCallBtnClick}\n                  shouldDisplayViewCallsBtn={shouldDisplayViewCallsBtn}\n                />\n              ) : null\n            }\n            {currentCalls.length > 0 ? (\n              <div className={styles.bar} >\n                <div className={styles.duration} onClick={onCurrentCallBtnClick}>\n                  <DurationCounter\n                    startTime={currentCalls[0].startTime}\n                  />\n                </div>\n                {\n                  shouldDisplayCurrentCallBtn && onCurrentCallBtnClick ?\n                    <Button\n                      className={styles.currentCallBtn}\n                      onClick={onCurrentCallBtnClick}\n                    >\n                      {i18n.getString('currentCall', currentLocale)}\n                    </Button>\n                    : null\n                }\n              </div>\n            ) : null\n            }\n          </CarrouselBar>\n        </div>\n      </div>\n    );\n  }\n}\nCallMonitorBar.propTypes = {\n  ringingCalls: PropTypes.array,\n  currentCalls: PropTypes.array,\n  onHoldCalls: PropTypes.array,\n  currentLocale: PropTypes.string.isRequired,\n  onCurrentCallBtnClick: PropTypes.func,\n  onViewCallBtnClick: PropTypes.func,\n  shouldDisplayCurrentCallBtn: PropTypes.bool,\n  shouldDisplayViewCallsBtn: PropTypes.bool\n};\nCallMonitorBar.defaultProps = {\n  ringingCalls: [],\n  currentCalls: [],\n  onHoldCalls: [],\n  onCurrentCallBtnClick: undefined,\n  onViewCallBtnClick: undefined,\n  shouldDisplayCurrentCallBtn: false,\n  shouldDisplayViewCallsBtn: false\n};\n\n"]}