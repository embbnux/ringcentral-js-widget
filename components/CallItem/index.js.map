{"version":3,"sources":["components/CallItem/index.js"],"names":["callIconMap","inbound","outbound","missed","CallIcon","direction","active","ringing","callIcon","activeCall","propTypes","string","isRequired","bool","defaultProps","CallItem","props","onSelectContact","value","idx","selected","parseInt","_userSelection","setState","call","activityMatches","length","logCall","redirect","getSelectedContact","state","contactMatches","getContactMatches","onLogCall","_mounted","isLogging","contact","viewSelectedContact","onViewContact","phoneNumber","getPhoneNumber","createSelectedContact","entityType","onCreateContact","isCreating","name","enableContactFallback","getFallbackContactName","clickToSms","countryCode","areaCode","onClickToSms","formatted","clickToDial","onClickToDial","getInitialContactIndex","nextProps","fromMatches","toMatches","activity","index","findIndex","isLoggedContact","from","extensionNumber","to","telephonyStatus","result","startTime","duration","currentLocale","disableLinks","disableClickToDial","outboundSmsPermission","internalSmsPermission","dateTimeFormatter","fallbackContactName","parsedInfo","isExtension","hasPlus","number","showClickToSms","durationEl","getString","dateEl","utcTimestamp","statusEl","root","contactDisplay","details","undefined","shape","array","webphoneSession","object","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\nimport 'core-js/fn/array/find';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n// import sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport {\n  isInbound,\n  isRinging,\n  isMissed,\n} from 'ringcentral-integration/lib/callLogHelpers';\nimport parseNumber from 'ringcentral-integration/lib/parseNumber';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DurationCounter from '../DurationCounter';\nimport ContactDisplay from '../ContactDisplay';\nimport formatDuration from '../../lib/formatDuration';\nimport ActionMenu from '../ActionMenu';\n// import Button from '../Button';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nconst callIconMap = {\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  missed: dynamicsFont.missed,\n};\n\nfunction CallIcon({\n  direction,\n  missed,\n  active,\n  ringing,\n}) {\n  return (\n    <div className={styles.callIcon}>\n      <span\n        className={classnames(\n          missed ? callIconMap.missed : callIconMap[direction],\n          active && styles.activeCall,\n          ringing && styles.ringing,\n          missed && styles.missed,\n        )} />\n    </div>\n  );\n}\nCallIcon.propTypes = {\n  direction: PropTypes.string.isRequired,\n  missed: PropTypes.bool,\n  active: PropTypes.bool,\n  ringing: PropTypes.bool,\n};\nCallIcon.defaultProps = {\n  missed: false,\n  active: false,\n  ringing: false,\n};\n\nexport default class CallItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      isLogging: false,\n      isCreating: false,\n    };\n    this._userSelection = false;\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this._userSelection &&\n      (\n        nextProps.call.activityMatches !== this.props.call.activityMatches ||\n        nextProps.call.fromMatches !== this.props.call.fromMatches ||\n        nextProps.call.toMatches !== this.props.call.toMatches\n      )\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  onSelectContact = (value, idx) => {\n    const selected = parseInt(idx, 10) - 1;\n    this._userSelection = true;\n    this.setState({\n      selected,\n    });\n    if (this.props.call.activityMatches.length > 0) {\n      this.logCall({ redirect: false, selected });\n    }\n  }\n  getInitialContactIndex(nextProps = this.props) {\n    const contactMatches = this.getContactMatches(nextProps);\n    const activityMatches = nextProps.call.activityMatches;\n    for (const activity of activityMatches) {\n      const index = contactMatches.findIndex(contact => (\n        // TODO find a better name or mechanism...\n        this.props.isLoggedContact(nextProps.call, activity, contact)\n      ));\n      if (index > -1) return index;\n    }\n    return -1;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.getContactMatches();\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n  getPhoneNumber() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.phoneNumber || this.props.call.from.extensionNumber) :\n      (this.props.call.to.phoneNumber || this.props.call.to.extensionNumber);\n  }\n  getContactMatches(nextProps = this.props) {\n    return isInbound(nextProps.call) ?\n      nextProps.call.fromMatches :\n      nextProps.call.toMatches;\n  }\n  getFallbackContactName() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.name) :\n      (this.props.call.to.name);\n  }\n  logCall = async ({ redirect = true, selected }) => {\n    if (\n      typeof this.props.onLogCall === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogCall({\n        contact: this.getSelectedContact(selected),\n        call: this.props.call,\n        redirect,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        phoneNumber: this.getPhoneNumber(),\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n\n  createSelectedContact = async (entityType) => {\n    // console.log('click createSelectedContact!!', entityType);\n    if (typeof this.props.onCreateContact === 'function' &&\n      this._mounted &&\n      !this.state.isCreating) {\n      this.setState({\n        isCreating: true,\n      });\n      // console.log('start to create: isCreating...', this.state.isCreating);\n      const phoneNumber = this.getPhoneNumber();\n      await this.props.onCreateContact({\n        phoneNumber,\n        name: this.props.enableContactFallback ? this.getFallbackContactName() : '',\n        entityType,\n      });\n\n      if (this._mounted) {\n        this.setState({\n          isCreating: false,\n        });\n        // console.log('created: isCreating...', this.state.isCreating);\n      }\n    }\n  }\n  clickToSms = ({ countryCode, areaCode }) => {\n    if (this.props.onClickToSms) {\n      const phoneNumber = this.getPhoneNumber();\n      const contact = this.getSelectedContact();\n      if (contact) {\n        this.props.onClickToSms({\n          ...contact,\n          phoneNumber,\n        });\n      } else {\n        const formatted = formatNumber({\n          phoneNumber,\n          countryCode,\n          areaCode,\n        });\n        this.props.onClickToSms({\n          name: this.props.enableContactFallback ? this.getFallbackContactName() : formatted,\n          phoneNumber,\n        }, true);\n      }\n    }\n  }\n  clickToDial = () => {\n    if (this.props.onClickToDial) {\n      this.props.onClickToDial(this.getPhoneNumber());\n    }\n  }\n  render() {\n    const {\n      call: {\n        direction,\n        telephonyStatus,\n        result,\n        startTime,\n        duration,\n        activityMatches,\n        // webphoneSession,\n      },\n      currentLocale,\n      areaCode,\n      countryCode,\n      disableLinks,\n      disableClickToDial,\n      outboundSmsPermission,\n      internalSmsPermission,\n      active,\n      onViewContact,\n      onCreateContact,\n      onLogCall,\n      onClickToDial,\n      onClickToSms,\n      dateTimeFormatter,\n      isLogging,\n      // webphoneAnswer,\n      // webphoneReject,\n      // webphoneHangup,\n      // webphoneResume,\n      enableContactFallback,\n    } = this.props;\n    const phoneNumber = this.getPhoneNumber();\n    const contactMatches = this.getContactMatches();\n    const fallbackContactName = this.getFallbackContactName();\n    const ringing = isRinging(this.props.call);\n    const missed = isInbound(this.props.call) && isMissed(this.props.call);\n    const parsedInfo = parseNumber(phoneNumber);\n    const isExtension = !parsedInfo.hasPlus &&\n      parsedInfo.number.length <= 6;\n    const showClickToSms = !!(\n      onClickToSms &&\n      (\n        isExtension ?\n          internalSmsPermission :\n          outboundSmsPermission\n      )\n    );\n\n    let durationEl;\n    if (typeof duration === 'undefined') {\n      durationEl = disableLinks ?\n        i18n.getString('unavailable', currentLocale) :\n        <DurationCounter startTime={startTime} />;\n    } else {\n      durationEl = formatDuration(duration);\n    }\n    let dateEl;\n    if (!active) {\n      dateEl = dateTimeFormatter({ utcTimestamp: startTime });\n    }\n    let statusEl;\n    if (active) {\n      statusEl = i18n.getString(result || telephonyStatus, currentLocale);\n    }\n    // let webphoneEl;\n    // if (webphoneSession) {\n    //   let hangupFunc = webphoneHangup;\n    //   let resumeFunc = webphoneResume;\n    //   if (\n    //     webphoneSession.direction === callDirections.inbound &&\n    //     webphoneSession.callStatus === sessionStatus.connecting\n    //   ) {\n    //     hangupFunc = webphoneReject;\n    //     resumeFunc = webphoneAnswer;\n    //   }\n    //   webphoneEl = (\n    //     <div className={styles.webphoneButtons}>\n    //       <Button\n    //         className={classnames(styles.webphoneButton, styles.rejectWebphoneButton)}\n    //         onClick={() => hangupFunc(webphoneSession.id)}\n    //       >\n    //         <i className={dynamicsFont.missed} />\n    //       </Button>\n    //       <Button\n    //         className={styles.webphoneButton}\n    //         onClick={() => resumeFunc(webphoneSession.id)}\n    //       >\n    //         <i className={dynamicsFont.call} />\n    //       </Button>\n    //     </div>\n    //   );\n    // }\n    return (\n      <div className={styles.root}>\n        <CallIcon\n          direction={direction}\n          ringing={ringing}\n          active={active}\n          missed={missed}\n        />\n        <ContactDisplay\n          className={classnames(\n            styles.contactDisplay,\n            missed && styles.missed,\n            active && styles.active,\n          )}\n          contactMatches={contactMatches}\n          selected={this.state.selected}\n          onSelectContact={this.onSelectContact}\n          disabled={disableLinks}\n          isLogging={isLogging || this.state.isLogging}\n          fallBackName={fallbackContactName}\n          enableContactFallback={enableContactFallback}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          phoneNumber={phoneNumber}\n          currentLocale={currentLocale}\n          />\n        <div className={styles.details} >\n          {durationEl} | {dateEl}{statusEl}\n        </div>\n        <ActionMenu\n          currentLocale={currentLocale}\n          onLog={onLogCall && this.logCall}\n          onViewEntity={onViewContact && this.viewSelectedContact}\n          onCreateEntity={onCreateContact && this.createSelectedContact}\n          hasEntity={!!contactMatches.length}\n          onClickToDial={onClickToDial && this.clickToDial}\n          onClickToSms={\n            showClickToSms ?\n            () => this.clickToSms({ countryCode, areaCode })\n            : undefined\n          }\n          phoneNumber={phoneNumber}\n          disableLinks={disableLinks}\n          disableClickToDial={disableClickToDial}\n          isLogging={isLogging || this.state.isLogging}\n          isLogged={activityMatches.length > 0}\n          isCreating={this.state.isCreating}\n        />\n      </div>\n    );\n  }\n}\n\nCallItem.propTypes = {\n  call: PropTypes.shape({\n    direction: PropTypes.string.isRequired,\n    telephonyStatus: PropTypes.string,\n    startTime: PropTypes.number.isRequired,\n    activityMatches: PropTypes.array.isRequired,\n    fromMatches: PropTypes.array.isRequired,\n    toMatches: PropTypes.array.isRequired,\n    from: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    to: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n    webphoneSession: PropTypes.object,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  isLoggedContact: PropTypes.func,\n  disableLinks: PropTypes.bool,\n  disableClickToDial: PropTypes.bool,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  active: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  isLogging: PropTypes.bool,\n  // webphoneAnswer: PropTypes.func,\n  // webphoneReject: PropTypes.func,\n  // webphoneHangup: PropTypes.func,\n  // webphoneResume: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n};\n\nCallItem.defaultProps = {\n  onLogCall: undefined,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  isLoggedContact: () => false,\n  isLogging: false,\n  disableClickToDial: false,\n  outboundSmsPermission: false,\n  internalSmsPermission: false,\n  disableLinks: false,\n  // webphoneAnswer: () => null,\n  // webphoneReject: () => null,\n  // webphoneHangup: () => null,\n  // webphoneResume: () => null,\n  enableContactFallback: undefined,\n};\n"]}