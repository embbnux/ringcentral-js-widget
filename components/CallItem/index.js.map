{"version":3,"sources":["components/CallItem/index.js"],"names":["callIconMap","inbound","outbound","missed","CallIcon","direction","active","ringing","callIcon","activeCall","propTypes","string","isRequired","bool","defaultProps","Contact","contactMatches","selected","onSelectContact","disabled","isLogging","fallBackName","areaCode","countryCode","phoneNumber","currentLocale","contentEl","length","getString","name","options","select","_","idx","entity","entityType","contact","arrayOf","any","number","func","undefined","ContactLink","className","onViewContact","contactLink","record","LogLink","onLogCall","isLogged","disableLinks","spinner","spinnerContainer","logLink","edit","callLog","CallItem","props","e","parseInt","currentTarget","value","setState","userSelection","call","activityMatches","logCall","redirect","getSelectedContact","state","getContactMatches","_mounted","viewSelectedContact","getPhoneNumber","getInitialContactIndex","nextProps","activity","index","findIndex","additionalParams","id","from","extensionNumber","to","fromMatches","toMatches","telephonyStatus","result","startTime","duration","dateTimeFormatter","fallbackContactName","durationEl","dateEl","statusEl","logLinkEl","contactLinkEl","callItem","details","shape","array"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport classnames from 'classnames';\nimport 'core-js/fn/array/find';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport {\n  isInbound,\n  isRinging,\n} from 'ringcentral-integration/lib/callLogHelpers';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callResults from 'ringcentral-integration/enums/callResults';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Spinner from '../Spinner';\nimport Select from '../Select';\nimport DurationCounter from '../DurationCounter';\nimport formatDuration from '../../lib/formatDuration';\nimport styles from './styles.scss';\n\nimport i18n from './i18n';\n\nconst callIconMap = {\n  [callDirections.inbound]: dynamicsFont.inbound,\n  [callDirections.outbound]: dynamicsFont.outbound,\n  missed: dynamicsFont.missed,\n};\n\nfunction CallIcon({\n  direction,\n  missed,\n  active,\n  ringing,\n}) {\n  return (\n    <div className={styles.callIcon}>\n      <span\n        className={classnames(\n          missed ? callIconMap.missed : callIconMap[direction],\n          active && styles.activeCall,\n          ringing && styles.ringing,\n          missed && styles.missed,\n        )} />\n    </div>\n  );\n}\nCallIcon.propTypes = {\n  direction: PropTypes.string.isRequired,\n  missed: PropTypes.bool,\n  active: PropTypes.bool,\n  ringing: PropTypes.bool,\n};\nCallIcon.defaultProps = {\n  missed: false,\n  active: false,\n  ringing: false,\n};\n\nfunction Contact({\n  contactMatches,\n  selected,\n  onSelectContact,\n  disabled,\n  isLogging,\n  fallBackName,\n  areaCode,\n  countryCode,\n  phoneNumber,\n  currentLocale,\n  missed,\n}) {\n  let contentEl;\n  if (contactMatches.length === 0) {\n    contentEl = fallBackName ||\n      (phoneNumber && formatNumber({\n        phoneNumber,\n        countryCode,\n        areaCode,\n      })) ||\n      i18n.getString('unknownNumber', currentLocale);\n  } else if (contactMatches.length === 1) {\n    contentEl = contactMatches[0].name;\n  } else if (contactMatches.length > 1) {\n    const options = [\n      {\n\n      },\n      ...contactMatches,\n    ];\n    contentEl = (\n      <Select\n        className={styles.select}\n        value={`${selected}`}\n        paddingLeft={0}\n        onChange={onSelectContact}\n        disabled={disabled || isLogging}\n        options={options}\n        valueFunction={(_, idx) => `${idx - 1}`}\n        renderFunction={(entity, idx) => (\n          idx === 0 ?\n            i18n.getString('select', currentLocale) :\n            `${entity.name} ${i18n.getString(`phoneSource.${entity.entityType}`)}`\n        )}\n      />\n    );\n  }\n  return (\n    <div\n      className={classnames(\n        styles.contact,\n        missed && styles.missed,\n      )} >\n      {contentEl}\n    </div>\n  );\n}\nContact.propTypes = {\n  contactMatches: PropTypes.arrayOf(PropTypes.any).isRequired,\n  selected: PropTypes.number.isRequired,\n  onSelectContact: PropTypes.func,\n  disabled: PropTypes.bool.isRequired,\n  isLogging: PropTypes.bool.isRequired,\n  fallBackName: PropTypes.string,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  missed: PropTypes.bool.isRequired,\n};\nContact.defaultProps = {\n  onSelectContact: undefined,\n  fallBackName: '',\n};\n\nfunction ContactLink({\n  className,\n  onViewContact,\n  disabled,\n  currentLocale,\n}) {\n  return (\n    <div\n      className={classnames(\n        className,\n        styles.contactLink,\n        disabled && styles.disabled,\n      )}\n      title={i18n.getString('viewContact', currentLocale)}\n      onClick={!disabled && onViewContact} >\n      <i className={dynamicsFont.record} />\n    </div>\n  );\n}\nContactLink.propTypes = {\n  className: PropTypes.string,\n  onViewContact: PropTypes.func,\n  disabled: PropTypes.bool,\n  currentLocale: PropTypes.string.isRequired,\n};\nContactLink.defaultProps = {\n  className: null,\n  onViewContact: null,\n  disabled: false,\n};\n\nfunction LogLink({\n  onLogCall,\n  isLogged,\n  disableLinks,\n  isLogging,\n}) {\n  const disabled = disableLinks || isLogging;\n  const spinner = isLogging ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  return (\n    <a\n      className={classnames(\n        styles.logLink,\n        disabled && styles.disabled,\n      )}\n      onClick={!disabled && onLogCall}\n      disabled={disabled}>\n      <span\n        className={isLogged ?\n          dynamicsFont.edit :\n          dynamicsFont.callLog\n        } />\n      {spinner}\n    </a>\n  );\n}\nLogLink.propTypes = {\n  onLogCall: PropTypes.func,\n  isLogged: PropTypes.bool.isRequired,\n  disableLinks: PropTypes.bool,\n  isLogging: PropTypes.bool.isRequired,\n};\n\nexport default class CallItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: this.getInitialContactIndex(),\n      userSelection: false,\n      isLogging: false,\n    };\n  }\n  componentDidMount() {\n    this._mounted = true;\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this.state.userSelection &&\n      nextProps.call.activityMatches !== this.props.call.activityMatches\n    ) {\n      this.setState({\n        selected: this.getInitialContactIndex(nextProps),\n      });\n    }\n  }\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n  onSelectContact = (e) => {\n    const selected = parseInt(e.currentTarget.value, 10);\n    this.setState({\n      selected,\n      userSelection: true,\n    });\n    if (this.props.call.activityMatches.length > 0) {\n      this.logCall({ redirect: false, selected });\n    }\n  }\n  getInitialContactIndex(nextProps = this.props) {\n    const contactMatches = this.getContactMatches(nextProps);\n    const activityMatches = nextProps.call.activityMatches;\n    for (const activity of activityMatches) {\n      const index = contactMatches.findIndex(contact => (\n        activity.additionalParams['regarding.id'] === contact.id\n      ));\n      if (index > -1) return index;\n    }\n    return -1;\n  }\n  getSelectedContact = (selected = this.state.selected) => {\n    const contactMatches = this.getContactMatches();\n    return (selected > -1 && contactMatches[selected]) ||\n      (contactMatches.length === 1 && contactMatches[0]) ||\n      null;\n  }\n  getPhoneNumber() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.phoneNumber || this.props.call.from.extensionNumber) :\n      (this.props.call.to.phoneNumber || this.props.call.to.extensionNumber);\n  }\n  getContactMatches(nextProps = this.props) {\n    return isInbound(nextProps.call) ?\n      nextProps.call.fromMatches :\n      nextProps.call.toMatches;\n  }\n  logCall = async ({ redirect = true, selected }) => {\n    if (\n      typeof this.props.onLogCall === 'function' &&\n      this._mounted &&\n      !this.state.isLogging\n    ) {\n      this.setState({\n        isLogging: true,\n      });\n      await this.props.onLogCall({\n        contact: this.getSelectedContact(selected),\n        call: this.props.call,\n        redirect,\n      });\n      if (this._mounted) {\n        this.setState({\n          isLogging: false,\n        });\n      }\n    }\n  }\n  viewSelectedContact = () => {\n    if (typeof this.props.onViewContact === 'function') {\n      this.props.onViewContact({\n        phoneNumber: this.getPhoneNumber(),\n        contact: this.getSelectedContact(),\n      });\n    }\n  }\n  render() {\n    const {\n      call: {\n        direction,\n      telephonyStatus,\n      result,\n      startTime,\n      activityMatches,\n      duration,\n      },\n      currentLocale,\n      areaCode,\n      countryCode,\n      disableLinks,\n      active,\n      onViewContact,\n      onLogCall,\n      dateTimeFormatter,\n    } = this.props;\n    const phoneNumber = this.getPhoneNumber();\n    const contactMatches = this.getContactMatches();\n    const fallbackContactName = isInbound(this.props.call) ?\n      (this.props.call.from.name) :\n      (this.props.call.to.name);\n    const ringing = isRinging(this.props.call);\n    const missed = result === callResults.missed;\n\n    let durationEl;\n    if (typeof duration === 'undefined') {\n      durationEl = disableLinks ?\n        i18n.getString('unavailable', currentLocale) :\n        <DurationCounter startTime={startTime} />;\n    } else {\n      durationEl = formatDuration(duration);\n    }\n    let dateEl;\n    if (!active) {\n      dateEl = dateTimeFormatter(startTime); // TODO format according to locale?\n    }\n    let statusEl;\n    if (active) {\n      statusEl = i18n.getString(result || telephonyStatus, currentLocale);\n    }\n\n    let logLinkEl;\n    if (onLogCall) {\n      logLinkEl = (\n        <LogLink\n          currentLocale={currentLocale}\n          onLogCall={this.logCall}\n          isLogged={activityMatches.length > 0}\n          disabled={disableLinks}\n          isLogging={this.state.isLogging} />\n      );\n    }\n    let contactLinkEl;\n    if (onViewContact && contactMatches.length) {\n      contactLinkEl = (\n        <ContactLink\n          onViewContact={this.viewSelectedContact}\n          disabled={disableLinks}\n          currentLocale={currentLocale}\n        />\n      );\n    }\n\n    return (\n      <div className={styles.callItem}>\n        <CallIcon\n          direction={direction}\n          ringing={ringing}\n          active={active}\n          missed={missed}\n        />\n        <Contact\n          contactMatches={contactMatches}\n          selected={this.state.selected}\n          onSelectContact={this.onSelectContact}\n          disabled={disableLinks}\n          isLogging={this.state.isLogging}\n          fallBackName={fallbackContactName}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          phoneNumber={phoneNumber}\n          currentLocale={currentLocale}\n          missed={missed} />\n        <div className={styles.details} >\n          {durationEl} | {dateEl}{statusEl}\n        </div>\n        {contactLinkEl}\n        {logLinkEl}\n      </div>\n    );\n  }\n}\n\nCallItem.propTypes = {\n  call: PropTypes.shape({\n    direction: PropTypes.string.isRequired,\n    telephonyStatus: PropTypes.string,\n    startTime: PropTypes.number.isRequired,\n    activityMatches: PropTypes.array.isRequired,\n    fromMatches: PropTypes.array.isRequired,\n    toMatches: PropTypes.array.isRequired,\n    from: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    to: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onLogCall: PropTypes.func,\n  onViewContact: PropTypes.func,\n  disableLinks: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n};\n\nCallItem.defaultProps = {\n  onLogCall: undefined,\n  onViewContact: undefined,\n};\n"]}