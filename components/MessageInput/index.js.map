{"version":3,"sources":["components/MessageInput/index.js"],"names":["UIHeightOffset","MessageInput","props","context","onChange","e","value","currentTarget","newHeight","calculateNewHeight","state","height","onHeightChange","setState","onKeyDown","key","shiftKey","preventDefault","onSend","minHeight","nextProps","inputExpandable","textArea","style","scrollHeight","maxHeight","currentLocale","disabled","maxLength","inputHeight","styles","root","textField","target","i18n","getString","submitField","sendButton","Component","propTypes","PropTypes","string","isRequired","bool","number","func","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst UIHeightOffset = 23;\n// the extra height of the entire field with paddings and borders\n\nexport default class MessageInput extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    minHeight: PropTypes.number,\n    maxHeight: PropTypes.number,\n    maxLength: PropTypes.number,\n    onSend: PropTypes.func,\n    onChange: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    inputExpandable: PropTypes.bool,\n  }\n  static defaultProps = {\n    disabled: false,\n    onSend: undefined,\n    onChange: undefined,\n    onHeightChange: undefined,\n    minHeight: 63,\n    maxHeight: 300,\n    maxLength: 5000,\n    inputExpandable: true,\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      value: props.value,\n      height: props.minHeight,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      // use setState(updater, callback) to recaculate height after value has been update to DOM\n      this.setState(\n        () => ({\n          value: nextProps.value,\n        }),\n        () => {\n          const newHeight = this.calculateNewHeight();\n          if (newHeight !== this.state.height) {\n            if (typeof this.props.onHeightChange === 'function') {\n              this.props.onHeightChange(newHeight);\n            }\n            this.setState({\n              height: newHeight,\n            });\n          }\n        }\n      );\n    }\n  }\n  componentDidMount() {\n    // do a initial size check in case the component is mounted with multi line value\n    const newHeight = this.calculateNewHeight();\n    if (newHeight !== this.state.height) {\n      if (typeof this.props.onHeightChange === 'function') {\n        this.props.onHeightChange(newHeight);\n      }\n      this.setState({\n        height: newHeight,\n      });\n    }\n  }\n  calculateNewHeight() {\n    if (!this.props.inputExpandable) {\n      return this.props.minHeight;\n    }\n    // temperarily set height to 0 to check scrollHeight\n    this.textArea.style.height = 0;\n    const newHeight = this.textArea.scrollHeight + 10 + UIHeightOffset;\n    // set height back to original to avoid messing with react\n    this.textArea.style.height = `${this.state.height - UIHeightOffset}px`;\n    const {\n      minHeight,\n      maxHeight,\n    } = this.props;\n    if (newHeight < minHeight) {\n      return minHeight;\n    } else if (newHeight > maxHeight) {\n      return maxHeight;\n    }\n    return newHeight;\n  }\n  onChange = (e) => {\n    const {\n      currentTarget: {\n        value,\n      },\n    } = e;\n    const newHeight = this.calculateNewHeight();\n    if (newHeight !== this.state.height && typeof this.props.onHeightChange === 'function') {\n      this.props.onHeightChange(newHeight);\n    }\n    this.setState({\n      value,\n      height: newHeight,\n    });\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(value);\n    }\n  }\n  onKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      if (!e.shiftKey) {\n        e.preventDefault();\n        if (typeof this.props.onSend === 'function') {\n          this.props.onSend();\n        }\n      }\n    }\n  }\n  render() {\n    const {\n      currentLocale,\n      disabled,\n      onSend,\n      maxLength,\n    } = this.props;\n    const {\n      value,\n      height,\n    } = this.state;\n    const inputHeight = height - UIHeightOffset;\n    return (\n      <div className={styles.root}>\n        <div className={styles.textField}>\n          <textarea\n            ref={(target) => { this.textArea = target; }}\n            placeholder={i18n.getString('typeMessage', currentLocale)}\n            value={value}\n            maxLength={maxLength}\n            onChange={this.onChange}\n            onKeyPressCapture={this.onKeyDown}\n            style={{\n              height: inputHeight,\n            }}\n          />\n        </div>\n        <div className={styles.submitField}>\n          <input\n            type=\"button\"\n            value={i18n.getString('send', currentLocale)}\n            onClick={onSend}\n            className={styles.sendButton}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}