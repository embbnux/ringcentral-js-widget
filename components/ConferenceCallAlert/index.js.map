{"version":3,"sources":["components/ConferenceCallAlert/index.js"],"names":["ConferenceAlert","props","msg","i18n","getString","message","currentLocale","propTypes","PropTypes","string","isRequired","shape","handleMessage","conferenceCallErrors","bringInFailed","makeConferenceFailed","terminateConferenceFailed","removeFromConferenceFailed","callIsRecording"],"mappings":";;;;;kBAMwBA,e;;AANxB;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAMC,MAAMC,eAAKC,SAAL,CAAeH,MAAMI,OAAN,CAAcA,OAA7B,EAAsCJ,MAAMK,aAA5C,CAAZ;AACA,SACE;AAAA;AAAA;AAAOJ;AAAP,GADF;AAGD;;AAEDF,gBAAgBO,SAAhB,GAA4B;AAC1BD,iBAAeE,oBAAUC,MAAV,CAAiBC,UADN;AAE1BL,WAASG,oBAAUG,KAAV,CAAgB;AACvBN,aAASG,oBAAUC,MAAV,CAAiBC;AADH,GAAhB,EAENA;AAJuB,CAA5B;;AAOAV,gBAAgBY,aAAhB,GAAgC;AAAA,MAAGP,OAAH,QAAGA,OAAH;AAAA,SAAiB,qBAASA,OAAT,EAAkB,CACjEQ,+BAAqBC,aAD4C,EAEjED,+BAAqBE,oBAF4C,EAGjEF,+BAAqBG,yBAH4C,EAIjEH,+BAAqBI,0BAJ4C,EAKjEJ,+BAAqBK,eAL4C,CAAlB,CAAjB;AAAA,CAAhC","file":"index.js","sourcesContent":["import { contains } from 'ramda';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport conferenceCallErrors from 'ringcentral-integration/modules/ConferenceCall/conferenceCallErrors';\nimport i18n from './i18n';\n\nexport default function ConferenceAlert(props) {\n  const msg = i18n.getString(props.message.message, props.currentLocale);\n  return (\n    <span>{msg}</span>\n  );\n}\n\nConferenceAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nConferenceAlert.handleMessage = ({ message }) => contains(message, [\n  conferenceCallErrors.bringInFailed,\n  conferenceCallErrors.makeConferenceFailed,\n  conferenceCallErrors.terminateConferenceFailed,\n  conferenceCallErrors.removeFromConferenceFailed,\n  conferenceCallErrors.callIsRecording,\n]);\n"]}