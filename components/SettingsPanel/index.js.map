{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onQuickAccessLinkClick","onUserGuideClick","showCalling","showAutoLog","showAutoLogNotes","showAudio","autoLogEnabled","autoLogNotesEnabled","disableAutoLogEnabled","disableAutoLogNotesEnabled","onAutoLogChange","onAutoLogNotesChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","onClickToDialChange","showRegion","showHeader","ringoutEnabled","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","openPresenceSettings","showFeedback","showQuickAccess","showUserGuide","additional","supportedLocales","savedLocale","saveLocale","locale","length","i18n","getString","region","calling","audio","feedback","quickAccess","presenceSetting","clickToDialText","clickToDial","autoLog","styles","disableText","autoLogNotes","autoLogSMS","header","userGuide","root","content","contentWithHeader","section","eula","logoutIcon","dynamicsFont","logout","versionContainer","propTypes","PropTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","Eula","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  onFeedbackSettingsLinkClick,\n  onQuickAccessLinkClick,\n  onUserGuideClick,\n  showCalling,\n  showAutoLog,\n  showAutoLogNotes,\n  showAudio,\n  autoLogEnabled,\n  autoLogNotesEnabled,\n  disableAutoLogEnabled,\n  disableAutoLogNotesEnabled,\n  onAutoLogChange,\n  onAutoLogNotesChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  onClickToDialChange,\n  showRegion,\n  showHeader,\n  ringoutEnabled,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  openPresenceSettings,\n  showFeedback,\n  showQuickAccess,\n  showUserGuide,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick} >\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const calling = showCalling\n    ? (\n      <LinkLine\n        onClick={onCallingSettingsLinkClick} >\n        {i18n.getString('calling', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const audio = showAudio\n    ? (\n      <LinkLine\n        onClick={onAudioSettingsLinkClick} >\n        {i18n.getString('audio', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const feedback = showFeedback\n    ? (\n      <LinkLine\n        onClick={onFeedbackSettingsLinkClick} >\n        {i18n.getString('feedback', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const quickAccess = showQuickAccess\n    ? (\n      <LinkLine\n        onClick={onQuickAccessLinkClick} >\n        {i18n.getString('quickAccess', currentLocale)}\n      </LinkLine>\n    )\n    : null;\n  const presenceSetting = (showPresenceSettings && dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={openPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !ringoutEnabled) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || ringoutEnabled) ?\n    (\n      <IconLine\n        icon={\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n        }\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  // if the Switch component is disabled then the text to describe it will be a disabled color.\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={\n        <Switch\n          disable={disableAutoLogEnabled}\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n      }\n    >\n      <span className={classnames(disableAutoLogEnabled && styles.disableText)}>\n        {i18n.getString('autoLogCalls', currentLocale)}\n      </span>\n    </IconLine>\n  ) :\n    null;\n  const autoLogNotes = showAutoLogNotes ? (\n    <IconLine\n      icon={\n        <Switch\n          disable={disableAutoLogNotesEnabled}\n          checked={autoLogNotesEnabled}\n          onChange={onAutoLogNotesChange}\n        />\n      }\n    >\n      <span className={classnames(disableAutoLogNotesEnabled && styles.disableText)}>\n        {i18n.getString('autoLogNotes', currentLocale)}\n      </span>\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n      }\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) : null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  const userGuide = showUserGuide ? (\n    <LinkLine\n      onClick={onUserGuideClick} >\n      {i18n.getString('userGuide', currentLocale)}\n    </LinkLine>\n  ) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        {calling}\n        {region}\n        {audio}\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogNotes}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        {feedback}\n        {quickAccess}\n        {userGuide}\n        <section className={styles.section}>\n          <Line noBorder>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            noBorder\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={classnames(styles.logoutIcon, dynamicsFont.logout)} />\n            } >\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        <div className={styles.versionContainer} >\n          {i18n.getString('version', currentLocale)} {version}\n        </div>\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showCalling: PropTypes.bool,\n  showRegion: PropTypes.bool,\n  showAudio: PropTypes.bool,\n  showAutoLog: PropTypes.bool,\n  showAutoLogNotes: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  autoLogNotesEnabled: PropTypes.bool,\n  disableAutoLogEnabled: PropTypes.bool,\n  disableAutoLogNotesEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  onAutoLogNotesChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  ringoutEnabled: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  openPresenceSettings: PropTypes.bool,\n  showPresenceSettings: PropTypes.bool,\n  showFeedback: PropTypes.bool,\n  showQuickAccess: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n  onFeedbackSettingsLinkClick: PropTypes.func.isRequired,\n  onQuickAccessLinkClick: PropTypes.func,\n  onUserGuideClick: PropTypes.func.isRequired,\n  showUserGuide: PropTypes.bool,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  onClickToDialChange: undefined,\n  showCalling: false,\n  showAudio: false,\n  showAutoLog: false,\n  showAutoLogNotes: false,\n  showRegion: false,\n  showUserGuide: false,\n  autoLogEnabled: false,\n  autoLogNotesEnabled: false,\n  disableAutoLogEnabled: false,\n  disableAutoLogNotesEnabled: false,\n  onAutoLogChange: () => null,\n  onAutoLogNotesChange: () => null,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  ringoutEnabled: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  openPresenceSettings: false,\n  showPresenceSettings: true,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n  showFeedback: true,\n  showQuickAccess: false,\n  onQuickAccessLinkClick: () => null\n};\n"]}