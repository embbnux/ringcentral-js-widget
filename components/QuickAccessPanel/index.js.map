{"version":3,"sources":["components/QuickAccessPanel/index.js"],"names":["OPTION_FOR_GOOGLE","OPTION_FOR_ALL","OPTION_FOR_USER","QuickAccessPanel","props","onConfirm","state","selected","setOptionData","whitelistOption","onCancel","onSelectOption","item","setState","value","entered","nextProps","getOptionData","storageData","data","text","i18n","getString","currentLocale","appName","description","extensionOptions","optionsLink","openOptionspage","styles","root","className","group","header","title","brandName","bageBox","brandCode","bage","presence","iconContainer","icon","logoIconUrl","checkbox","confirmBtn","cancelBtn","Component","propTypes","PropTypes","bool","string","func","isRequired","any","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport FormattedMessage from '../FormattedMessage';\nimport CheckBox from '../CheckBox';\nimport Button from '../Button';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst OPTION_FOR_GOOGLE = 'GOOGLE';\nconst OPTION_FOR_ALL = 'ALL';\nconst OPTION_FOR_USER = 'USER';\n\nexport default class QuickAccessPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 1,\n      entered: this.props.entered || false,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { entered } = nextProps;\n    if (this.state.entered !== entered) {\n      this.setState({ entered });\n      if (entered) {\n        this.props.getOptionData((storageData) => {\n          if (storageData.whitelistOption === OPTION_FOR_ALL) {\n            this.setState({\n              selected: 2,\n            });\n          } else if (storageData.whitelistOption === OPTION_FOR_USER) {\n            this.setState({\n              selected: 3,\n            });\n          } else {\n            this.setState({\n              selected: 1,\n            });\n          }\n        });\n      }\n    }\n  }\n\n onConfirm = () => {\n   if (this.state.selected === 2) {\n     this.props.setOptionData({ whitelistOption: OPTION_FOR_ALL });\n   } else if (this.state.selected === 3) {\n     this.props.setOptionData({ whitelistOption: OPTION_FOR_USER });\n   } else {\n     this.props.setOptionData({ whitelistOption: OPTION_FOR_GOOGLE });\n   }\n   this.props.onCancel();\n };\n\n onSelectOption = (item) => {\n   this.setState({\n     selected: item.value,\n   });\n };\n\n render() {\n   if (!this.state.entered) return null;\n   const data = [{\n     text: formatMessage(i18n.getString('textGoogle', this.props.currentLocale), { appName: this.props.appName }),\n     value: 1\n   }, {\n     text: i18n.getString('textAll', this.props.currentLocale),\n     value: 2\n   }, {\n     text: i18n.getString('textUser', this.props.currentLocale),\n     value: 3\n   }];\n   let description = null;\n   const extensionOptions = i18n.getString('extensionOptions', this.props.currentLocale);\n   const optionsLink = (\n     <a href=\"#\" onClick={this.props.openOptionspage}>\n       {extensionOptions}\n     </a>\n   );\n   if (this.state.selected === 2) {\n     description = (<FormattedMessage\n       message={i18n.getString('descriptionAll', this.props.currentLocale)}\n       values={{ optionsLink }} />);\n   } else if (this.state.selected === 3) {\n     description = (<FormattedMessage\n       message={i18n.getString('descriptionUser', this.props.currentLocale)}\n       values={{ optionsLink }} />);\n   }\n   return (\n     <div className={classnames(styles.root, this.props.className)}>\n       <div className={styles.group}>\n         <div className={styles.header} >\n           <div className={styles.title} >{formatMessage(i18n.getString('title', this.props.currentLocale), { brandName: this.props.brandName })}\n           </div>\n           <div className={classnames(styles.bageBox, styles[this.props.brandCode])} >\n             <div className={styles.bage} ><div className={styles.presence} />\n               <div className={styles.iconContainer}>\n                 <img className={styles.icon} src={this.props.logoIconUrl} alt={this.props.brandName} />\n               </div>\n             </div>\n           </div>\n         </div>\n         <CheckBox\n           className={styles.checkbox}\n           valueField=\"value\"\n           textField=\"text\"\n           data={data}\n           selected={this.state.selected}\n           onSelect={this.onSelectOption}\n        />\n         {/* <div>{props.data[this.state.selected - 1].description}</div> */}\n         <div className={styles.description}> {description} </div>\n       </div>\n       <Button\n         className={styles.confirmBtn}\n         onClick={this.onConfirm}\n        >\n         {i18n.getString('Confirm', this.props.currentLocale)}\n       </Button>\n       <Button\n         className={styles.cancelBtn}\n         onClick={this.props.onCancel}>\n         {i18n.getString('Cancel', this.props.currentLocale)}\n       </Button>\n     </div>\n   );\n }\n}\n\nQuickAccessPanel.propTypes = {\n  entered: PropTypes.bool,\n  className: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  brandName: PropTypes.string,\n  brandCode: PropTypes.string,\n  appName: PropTypes.string,\n  logoIconUrl: PropTypes.any,\n  setOptionData: PropTypes.func,\n  getOptionData: PropTypes.func,\n  openOptionspage: PropTypes.func,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nQuickAccessPanel.defaultProps = {\n  entered: false,\n  className: '',\n  brandName: 'RingCentral',\n  brandCode: '',\n  appName: '',\n  logoIconUrl: undefined,\n  setOptionData() {},\n  getOptionData() {},\n  openOptionspage: undefined,\n};\n"]}