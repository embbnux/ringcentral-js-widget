{"version":3,"sources":["components/DropdownSelect/index.js"],"names":["DropdownSelect","props","state","open","mounted","toggleShowDropdown","disabled","setState","preState","onChange","e","option","idx","stopPropagation","_handleDocumentClick","wrapper","contains","target","dropdownMenu","window","addEventListener","prevProps","prevState","renderDropdownMenu","menu","buttomPosition","getBoundingClientRect","removeEventListener","dropdown","ref","options","map","currentValue","valueFunction","className","dropdownItem","value","selected","display","renderFunction","dropdownAlign","titleEnabled","label","iconClassName","icon","iconUp","containerClassName","root","renderValue","button","selectedValue","arrow","propTypes","string","func","bool","arrayOf","any","isRequired","oneOf","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nclass DropdownSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.mounted = true;\n\n    this.toggleShowDropdown = () => {\n      if (this.props.disabled) {\n        return;\n      }\n      this.setState(preState => ({\n        open: !preState.open,\n      }));\n    };\n\n    this.onChange = (e, option, idx) => {\n      e.stopPropagation();\n      this.props.onChange(option, idx);\n      this.toggleShowDropdown();\n    };\n\n    this._handleDocumentClick = (e) => {\n      if (!this.mounted) {\n        return;\n      }\n      if (this.wrapper && this.wrapper.contains(e.target)) {\n        return;\n      }\n      if (this.dropdownMenu && this.dropdownMenu.contains(e.target)) {\n        return;\n      }\n      this.setState({\n        open: false,\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    window.addEventListener('click', this._handleDocumentClick, false);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.open !== this.state.open) {\n      if (this.props.renderDropdownMenu && this.wrapper) {\n        const menu = this.renderDropdownMenu();\n        const buttomPosition = this.wrapper.getBoundingClientRect();\n        this.props.renderDropdownMenu(menu, this.state.open, buttomPosition);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('click', this._handleDocumentClick, false);\n  }\n\n  renderDropdownMenu() {\n    return (\n      <ul className={styles.dropdown} ref={(ref) => { this.dropdownMenu = ref; }}>\n        {\n          this.props.options.map((option, idx) => {\n            const currentValue = this.props.valueFunction(option, idx);\n            const className = classnames(\n              styles.dropdownItem,\n              this.props.value === currentValue ? styles.selected : null,\n            );\n            const display = this.props.renderFunction(option, idx);\n            return (\n              <li\n                key={currentValue}\n                className={classnames(className, styles[this.props.dropdownAlign])}\n                value={currentValue}\n                title={this.props.titleEnabled && display}\n                onClick={e => this.onChange(e, option, idx)}\n              >\n                {display}\n              </li>\n            );\n          })\n        }\n      </ul>\n    );\n  }\n\n  render() {\n    const label = this.props.label ?\n      (\n        <label>\n          {this.props.label}\n        </label>\n      ) : null;\n    const iconClassName = classnames(\n      styles.icon,\n      this.state.open ? styles.iconUp : null,\n      this.props.iconClassName,\n    );\n    const containerClassName = classnames(\n      styles.root,\n      this.props.className,\n      this.props.disabled ? styles.disabled : null,\n      this.state.open ? styles.open : null,\n    );\n    const dropdownMenu = this.props.renderDropdownMenu ?\n      null :\n      this.renderDropdownMenu();\n\n    const renderValue = this.props.renderValue(this.props.value);\n    return (\n      <div\n        className={containerClassName}\n        ref={(ref) => { this.wrapper = ref; }}\n      >\n        <button\n          className={styles.button}\n          onClick={this.toggleShowDropdown}\n          title={this.props.titleEnabled && renderValue}>\n          {label}\n          <span className={styles.selectedValue}>\n            {renderValue}\n          </span>\n          <span className={iconClassName}>\n            <i className={dynamicsFont.arrow} />\n          </span>\n        </button>\n        { dropdownMenu }\n      </div>\n    );\n  }\n}\n\nDropdownSelect.propTypes = {\n  className: PropTypes.string,\n  iconClassName: PropTypes.string,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.any).isRequired,\n  valueFunction: PropTypes.func,\n  renderFunction: PropTypes.func,\n  renderValue: PropTypes.func,\n  renderDropdownMenu: PropTypes.func,\n  dropdownAlign: PropTypes.oneOf(['left', 'center', 'right']),\n  titleEnabled: PropTypes.bool,\n};\n\nDropdownSelect.defaultProps = {\n  className: null,\n  iconClassName: null,\n  value: null,\n  label: null,\n  onChange: undefined,\n  disabled: false,\n  renderDropdownMenu: undefined,\n  valueFunction: option => option,\n  renderFunction: option => option,\n  renderValue: option => option,\n  dropdownAlign: 'center',\n  titleEnabled: undefined,\n};\n\nexport default DropdownSelect;\n"]}