{"version":3,"sources":["components/MeetingSection/index.js"],"names":["MeetingSection","args","state","toggle","props","children","title","withSwitch","className","hideTopBorderLine","setState","Title","styles","DropDown","isDropDown","onClick","dropDown","dynamicsFont","arrow","topBorderLine","hiddenTopBorder","section","spaceBetween","Component","propTypes","PropTypes","element","isRequired","string","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;IAEMA,c;;;AACJ,4BAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AAAA,iLACVA,IADU;;AAEnB,UAAKC,KAAL,GAAa;AACXC,cAAQ,MAAKC,KAAL,CAAWD;AADR,KAAb;AAFmB;AAKpB;;;;6BACQ;AAAA;;AAAA,mBAOH,KAAKC,KAPF;AAAA,UAELC,QAFK,UAELA,QAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,UAJK,UAILA,UAJK;AAAA,UAKLC,SALK,UAKLA,SALK;AAAA,UAMLC,iBANK,UAMLA,iBANK;;AAQP,UAAMN,SAAS,SAATA,MAAS,GAAM;AACnB,eAAKO,QAAL,CAAc,EAAEP,QAAQ,CAAC,OAAKD,KAAL,CAAWC,MAAtB,EAAd;AACD,OAFD;AAGA,UAAMQ,QAAQ,SAARA,KAAQ;AAAA,eACZL,QACE;AAAA;AAAA,YAAM,WAAWM,iBAAON,KAAxB;AAAgCA;AAAhC,SADF,GAEI,IAHQ;AAAA,OAAd;AAKA,UAAMO,WAAW,SAAXA,QAAW;AAAA,YAAGC,UAAH,SAAGA,UAAH;AAAA,YAAeC,OAAf,SAAeA,OAAf;AAAA,eACfR,aACE;AAAA;AAAA;AACE,uBAAW,0BAAWO,aAAaF,iBAAOI,QAApB,GAA+B,IAA1C,CADb;AAEE,qBAASD,OAFX;AAGE,+CAAG,WAAW,0BAAWE,uBAAaC,KAAxB,EAA+BN,iBAAOM,KAAtC,CAAd;AAHF,SADF,GAMI,IAPW;AAAA,OAAjB;AASA,UAAMC,gBAAgBV,oBAAoBG,iBAAOQ,eAA3B,GAA6C,IAAnE;AACA,aACE;AAAA;AAAA,UAAK,WAAW,0BAAWR,iBAAOS,OAAlB,EAA2BF,aAA3B,EAA0CX,SAA1C,CAAhB;AAEIF,gBACE;AAAA;AAAA,YAAK,WAAWM,iBAAOU,YAAvB;AACE,wCAAC,KAAD,OADF;AAEE,wCAAC,QAAD,IAAU,YAAY,KAAKpB,KAAL,CAAWC,MAAjC,EAAyC,SAASA,MAAlD;AAFF,SADF,GAKI,IAPR;AASI,aAAKD,KAAL,CAAWC,MAAX,GAAoBE,QAApB,GAA+B;AATnC,OADF;AAaD;;;EA9C0BkB,gB;;AAiD7BvB,eAAewB,SAAf,GAA2B;AACzBnB,YAAUoB,oBAAUC,OAAV,CAAkBC,UADH;AAEzBrB,SAAOmB,oBAAUG,MAFQ;AAGzBpB,aAAWiB,oBAAUG,MAHI;AAIzBrB,cAAYkB,oBAAUI,IAJG;AAKzB1B,UAAQsB,oBAAUI,IALO;AAMzBpB,qBAAmBgB,oBAAUI;AANJ,CAA3B;;AASA7B,eAAe8B,YAAf,GAA8B;AAC5BtB,aAAW,IADiB;AAE5BF,SAAO,IAFqB;AAG5BC,cAAY,KAHgB;AAI5BJ,UAAQ,IAJoB;AAK5BM,qBAAmB;AALS,CAA9B;;kBAQeT,c","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\n\nclass MeetingSection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toggle: this.props.toggle,\n    };\n  }\n  render() {\n    const {\n      children,\n      title,\n      withSwitch,\n      className,\n      hideTopBorderLine,\n    } = this.props;\n    const toggle = () => {\n      this.setState({ toggle: !this.state.toggle });\n    };\n    const Title = () => (\n      title ? (\n        <span className={styles.title}>{title}</span>\n      ) : null\n    );\n    const DropDown = ({ isDropDown, onClick }) => (\n      withSwitch ? (\n        <span\n          className={classnames(isDropDown ? styles.dropDown : null)}\n          onClick={onClick}>\n          <i className={classnames(dynamicsFont.arrow, styles.arrow)} />\n        </span>\n      ) : null\n    );\n    const topBorderLine = hideTopBorderLine ? styles.hiddenTopBorder : null;\n    return (\n      <div className={classnames(styles.section, topBorderLine, className)}>\n        {\n          title ? (\n            <div className={styles.spaceBetween}>\n              <Title />\n              <DropDown isDropDown={this.state.toggle} onClick={toggle} />\n            </div>\n          ) : null\n        }\n        { this.state.toggle ? children : null }\n      </div>\n    );\n  }\n}\n\nMeetingSection.propTypes = {\n  children: PropTypes.element.isRequired,\n  title: PropTypes.string,\n  className: PropTypes.string,\n  withSwitch: PropTypes.bool,\n  toggle: PropTypes.bool,\n  hideTopBorderLine: PropTypes.bool,\n};\n\nMeetingSection.defaultProps = {\n  className: null,\n  title: null,\n  withSwitch: false,\n  toggle: true,\n  hideTopBorderLine: false,\n};\n\nexport default MeetingSection;\n"]}