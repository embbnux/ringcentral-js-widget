{"version":3,"sources":["components/ContactDisplay/index.js"],"names":["ContactDisplay","displayFormatter","entityName","entityType","phoneNumber","currentLocale","brand","typeName","phoneSourceNames","getString","ContactDisplayItem","sourceIcons","SourceIcon","phoneSources","rcContact","brandIcon","undefined","styles","typeIcon","propTypes","PropTypes","string","isRequired","object","reference","className","contactMatches","selected","onSelectContact","disabled","isLogging","fallBackName","enableContactFallback","areaCode","countryCode","groupNumbers","showType","selectClassName","selectedClassName","showPlaceholder","stopPropagation","showGroupNumberName","contactName","isOnConferenceCall","iconClassName","contentEl","confStr","i18n","currentName","groupNames","map","groupNumber","groupContact","find","match","extensionNumber","name","display","join","length","title","options","placeholder","_selected","select","selectedValue","button","icon","entity","value","root","bool","func","arrayOf","any","number","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport formatMessage from 'format-message';\nimport DropdownSelect from '../DropdownSelect';\nimport i18n from './i18n';\nimport styles from './styles.scss';\nimport phoneSourceNames from '../../lib/phoneSourceNames';\nimport phoneSources from '../../enums/phoneSources';\n\nconst displayFormatter = ({\n  entityName,\n  entityType,\n  phoneNumber,\n  currentLocale,\n  brand,\n}) => {\n  let typeName;\n  if (entityType) {\n    typeName = formatMessage(\n      phoneSourceNames.getString(entityType, currentLocale),\n      { brand }\n    );\n  }\n  if (phoneNumber && entityName && entityType) {\n    return `${entityName} | ${typeName} ${phoneNumber}`;\n  } else if (entityName && entityType) {\n    return `${entityName} | ${typeName}`;\n  } else if (entityName) {\n    return entityName;\n  } else if (phoneNumber) {\n    return `${phoneNumber}`;\n  }\n  return '';\n};\n\nfunction ContactDisplayItem({\n  entityName,\n  entityType,\n  phoneNumber,\n  sourceIcons\n}) {\n  let SourceIcon = null;\n  if (entityType) {\n    if (entityType === phoneSources.rcContact) {\n      SourceIcon = sourceIcons.brandIcon;\n    } else {\n      SourceIcon = sourceIcons[entityType];\n    }\n  }\n  if (phoneNumber && entityName !== undefined && SourceIcon) {\n    return (\n      <span>\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\n        <span className={styles.typeName}>{entityName}</span>\n      </span>\n    );\n  } else if (entityName !== undefined && SourceIcon) {\n    return (\n      <span>\n        <SourceIcon className={styles.typeIcon} width={10} height={10} />\n        <span className={styles.typeName}>{entityName}</span>\n      </span>\n    );\n  } else if (entityName !== undefined) {\n    return <span>{entityName}</span>;\n  } else if (phoneNumber) {\n    return <span>{phoneNumber}</span>;\n  }\n  return null;\n}\n\nContactDisplayItem.propTypes = {\n  entityName: PropTypes.string.isRequired,\n  entityType: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  sourceIcons: PropTypes.object.isRequired,\n};\n\nexport default function ContactDisplay({\n  reference,\n  className,\n  contactMatches,\n  selected,\n  onSelectContact,\n  disabled,\n  isLogging,\n  fallBackName,\n  enableContactFallback,\n  areaCode,\n  countryCode,\n  phoneNumber,\n  currentLocale,\n  groupNumbers,\n  showType,\n  selectClassName,\n  selectedClassName,\n  showPlaceholder,\n  brand,\n  stopPropagation,\n  sourceIcons = {},\n  showGroupNumberName,\n  contactName,\n  isOnConferenceCall,\n  iconClassName,\n}) {\n  let contentEl;\n  if (isOnConferenceCall) {\n    const confStr = i18n.getString('conferenceCall', currentLocale);\n    contentEl = (\n      <div title={confStr} className={styles.currentName}>\n        {confStr}\n      </div>\n    );\n  } else if (contactName) {\n    contentEl = (\n      <div title={contactName} className={styles.currentName}>\n        {contactName}\n      </div>\n    );\n  } else if (groupNumbers && showGroupNumberName) {\n    const groupNames = groupNumbers.map((groupNumber) => {\n      const groupContact = contactMatches.find(match => match.extensionNumber === groupNumber);\n      return (groupContact && groupContact.name) || groupNumber;\n    });\n    const display = groupNames.join(', ');\n    contentEl = (\n      <div title={display} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (groupNumbers) {\n    const display = groupNumbers.join(', ');\n    contentEl = (\n      <div title={display} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length === 0) {\n    const display = (enableContactFallback && fallBackName) ||\n      (phoneNumber && formatNumber({\n        phoneNumber,\n        countryCode,\n        areaCode,\n      })) ||\n      i18n.getString('unknownNumber', currentLocale);\n    const title = (enableContactFallback && fallBackName) ||\n      phoneNumber || '';\n    contentEl = (\n      <div title={title} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length === 1) {\n    const display = contactMatches[0].name;\n    const title = displayFormatter({\n      entityName: display,\n      entityType: contactMatches[0].entityType,\n      phoneNumber,\n      brand,\n      currentLocale\n    });\n    contentEl = (\n      <div title={title} className={styles.currentName}>\n        {display}\n      </div>\n    );\n  } else if (contactMatches.length > 1) {\n    const options = [\n      ...contactMatches,\n    ];\n    let placeholder;\n    let _selected = selected;\n    if (showPlaceholder) {\n      placeholder = i18n.getString('select', currentLocale);\n    } else {\n      _selected = _selected < 0 ? 0 : _selected;\n    }\n    contentEl = (\n      <DropdownSelect\n        reference={reference}\n        className={classnames(styles.select, selectClassName)}\n        selectedClassName={classnames(styles.selectedValue, selectedClassName)}\n        buttonStyle={styles.button}\n        iconClassName={classnames(styles.icon, iconClassName)}\n        value={_selected}\n        onChange={onSelectContact}\n        disabled={disabled || isLogging}\n        options={options}\n        placeholder={placeholder}\n        renderFunction={entity => (\n          ContactDisplayItem({\n            entityName: entity.name,\n            entityType: entity.entityType,\n            brand,\n            currentLocale,\n            sourceIcons\n          })\n        )}\n        renderValue={value => (\n          displayFormatter({\n            entityName: options[value].name,\n            entityType: showType && options[value].entityType,\n            brand,\n            currentLocale,\n          })\n        )}\n        renderTitle={entity => (\n          entity ? displayFormatter({\n            entityName: entity.name,\n            entityType: entity.entityType,\n            phoneNumber,\n            brand,\n            currentLocale,\n          }) : phoneNumber)\n        }\n        dropdownAlign=\"left\"\n        titleEnabled\n        noPadding\n        stopPropagation={stopPropagation}\n      />\n    );\n  }\n  return (\n    <div\n      className={classnames(\n        styles.root,\n        className,\n      )} >\n      {contentEl}\n    </div>\n  );\n}\nContactDisplay.propTypes = {\n  isOnConferenceCall: PropTypes.bool,\n  reference: PropTypes.func,\n  className: PropTypes.string,\n  contactMatches: PropTypes.arrayOf(PropTypes.any).isRequired,\n  selected: PropTypes.number.isRequired,\n  onSelectContact: PropTypes.func,\n  disabled: PropTypes.bool.isRequired,\n  isLogging: PropTypes.bool.isRequired,\n  fallBackName: PropTypes.string,\n  enableContactFallback: PropTypes.bool,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  groupNumbers: PropTypes.arrayOf(PropTypes.string),\n  showType: PropTypes.bool,\n  selectClassName: PropTypes.string,\n  selectedClassName: PropTypes.string,\n  showPlaceholder: PropTypes.bool,\n  brand: PropTypes.string,\n  stopPropagation: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showGroupNumberName: PropTypes.bool,\n  contactName: PropTypes.any,\n  iconClassName: PropTypes.string,\n};\nContactDisplay.defaultProps = {\n  isOnConferenceCall: false,\n  reference: undefined,\n  className: undefined,\n  onSelectContact: undefined,\n  fallBackName: '',\n  phoneNumber: undefined,\n  groupNumbers: undefined,\n  enableContactFallback: undefined,\n  showType: true,\n  selectClassName: undefined,\n  selectedClassName: undefined,\n  showPlaceholder: true,\n  brand: undefined,\n  stopPropagation: true,\n  sourceIcons: undefined,\n  showGroupNumberName: false,\n  contactName: undefined,\n  iconClassName: null,\n};\n"]}