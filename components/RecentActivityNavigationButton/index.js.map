{"version":3,"sources":["components/RecentActivityNavigationButton/index.js"],"names":["NavigationButton","active","icon","label","noticeCounts","onClick","width","notice","styles","notices","navigationButton","iconHolder","propTypes","PropTypes","node","isRequired","bool","string","number","oneOfType","func","defaultProps","undefined"],"mappings":";;;;;kBAKwBA,gB;;AALxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,gBAAT,OAOZ;AAAA,MANDC,MAMC,QANDA,MAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,KAIC,QAJDA,KAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,KACC,QADDA,KACC;;AACD,MAAIC,SAAS,IAAb;AACA,MAAIH,gBAAgBA,eAAe,CAAnC,EAAsC;AACpC,QAAIA,eAAe,EAAnB,EAAuB;AACrBG,eAAS;AAAA;AAAA,UAAK,WAAWC,iBAAOC,OAAvB;AAAA;AAAA,OAAT;AACD,KAFD,MAEO;AACLF,eAAS;AAAA;AAAA,UAAK,WAAWC,iBAAOD,MAAvB;AAAgCH;AAAhC,OAAT;AACD;AACF;AACD,SACE;AAAA;AAAA;AACE,eAASC,OADX;AAEE,iBAAW,0BACTG,iBAAOE,gBADE,EAETT,UAAUO,iBAAOP,MAFR,CAFb;AAME,aAAO;AACLK;AADK;AANT;AAUE;AAAA;AAAA,QAAK,WAAWE,iBAAOG,UAAvB,EAAmC,OAAOR,KAA1C;AACE;AAAA;AAAA,UAAK,WAAWK,iBAAON,IAAvB;AACGA;AADH,OADF;AAIGK;AAJH;AAVF,GADF;AAmBD;AACDP,iBAAiBY,SAAjB,GAA6B;AAC3BV,QAAMW,oBAAUC,IAAV,CAAeC,UADM;AAE3Bd,UAAQY,oBAAUG,IAFS;AAG3Bb,SAAOU,oBAAUI,MAHU;AAI3Bb,gBAAcS,oBAAUK,MAJG;AAK3BZ,SAAOO,oBAAUM,SAAV,CAAoB,CACzBN,oBAAUK,MADe,EAEzBL,oBAAUI,MAFe,CAApB,EAGJF,UARwB;AAS3BV,WAASQ,oBAAUO;AATQ,CAA7B;AAWApB,iBAAiBqB,YAAjB,GAAgC;AAC9BpB,UAAQ,KADsB;AAE9BE,SAAOmB,SAFuB;AAG9BlB,gBAAckB,SAHgB;AAI9BjB,WAASiB;AAJqB,CAAhC","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport default function NavigationButton({\n  active,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notices}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  return (\n    <div\n      onClick={onClick}\n      className={classnames(\n        styles.navigationButton,\n        active && styles.active\n      )}\n      style={{\n        width,\n      }}\n    >\n      <div className={styles.iconHolder} title={label}>\n        <div className={styles.icon}>\n          {icon}\n        </div>\n        {notice}\n      </div>\n    </div>\n  );\n}\nNavigationButton.propTypes = {\n  icon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  onClick: PropTypes.func,\n};\nNavigationButton.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n};\n"]}